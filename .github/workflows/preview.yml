name: PR Preview

on:
  pull_request:
    branches: [ main ]
    types: [opened, synchronize, reopened]

permissions:
  contents: read
  pull-requests: write
  issues: write

jobs:
  preview:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Setup Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.1'
        bundler-cache: true
        
    - name: Install dependencies
      run: bundle install
      
    - name: Build site
      run: bundle exec jekyll build
      env:
        JEKYLL_ENV: production
        
    - name: Setup Node.js for screenshot
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Install Playwright
      run: |
        npm install -g playwright
        npx playwright install chromium
        
    - name: Start Jekyll server in background
      run: |
        bundle exec jekyll serve --host 0.0.0.0 --port 4000 --detach
        sleep 5  # Wait for server to start
        
    - name: Take screenshot
      run: |
        # Take a screenshot optimized for GitHub display
        npx playwright screenshot \
          --wait-for-selector="body" \
          --viewport-size=1280,720 \
          http://localhost:4000 \
          screenshot.png
          
        # Optimize the image for GitHub display (max 10MB, good quality)
        if command -v convert >/dev/null 2>&1; then
          convert screenshot.png -quality 85 -resize 1200x800\> screenshot_optimized.png
          mv screenshot_optimized.png screenshot.png
        fi
        
    - name: Upload screenshot artifact
      uses: actions/upload-artifact@v4
      with:
        name: preview-screenshot-${{ github.event.pull_request.number }}
        path: screenshot.png
        retention-days: 7
        
    - name: Comment with Image Preview
      uses: opengisch/comment-pr-with-images@upload_only
      with:
        images: "screenshot.png"
        upload_to: github_branch
        custom_attachment_msg: "## üñºÔ∏è PR Preview\n\nHere's how the site looks with your changes:"
        edit_previous_comment: true
        github_token: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Add development instructions
      uses: actions/github-script@v7
      with:
        script: |
          const { owner, repo } = context.repo;
          const pull_number = context.payload.pull_request.number;
          const run_id = context.runId;
          
          // Get the latest comment (should be from the image upload action)
          const comments = await github.rest.issues.listComments({
            owner,
            repo,
            issue_number: pull_number,
          });
          
          const latestComment = comments.data[comments.data.length - 1];
          const artifactUrl = `https://github.com/${owner}/${repo}/actions/runs/${run_id}`;
          
          // Append development instructions to the existing comment
          const additionalContent = [
            "",
            "**Local Preview:**",
            "```bash",
            "make serve",
            "# Visit http://localhost:4000",
            "```",
            "",
            `üì∏ [Download Full Resolution](${artifactUrl}) (Artifacts ‚Üí \`preview-screenshot-${pull_number}\`)`,
            "",
            "---",
            `*Generated by [GitHub Actions Run ${run_id}](${artifactUrl})*`
          ].join('\n');
          
          const updatedBody = latestComment.body + additionalContent;
          
          await github.rest.issues.updateComment({
            owner,
            repo,
            comment_id: latestComment.id,
            body: updatedBody
          });
          
    - name: Stop Jekyll server
      run: |
        pkill -f jekyll || true
