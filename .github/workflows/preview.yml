name: PR Preview

on:
  pull_request:
    branches: [ main ]
    types: [opened, synchronize, reopened]

permissions:
  contents: write
  pull-requests: write
  issues: write

jobs:
  preview:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Setup Git
      run: |
        git config --global --add safe.directory /github/workspace
        git config --global user.email "action@github.com"
        git config --global user.name "GitHub Action"
      
    - name: Setup Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.1'
        bundler-cache: true
        
    - name: Install dependencies
      run: bundle install
      
    - name: Build site
      run: bundle exec jekyll build
      env:
        JEKYLL_ENV: production
        
    - name: Setup Node.js for screenshot
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Install Playwright
      run: |
        npm install -g playwright
        npx playwright install chromium
        
    - name: Start Jekyll server in background
      run: |
        bundle exec jekyll serve --host 0.0.0.0 --port 4000 --detach
        sleep 5  # Wait for server to start
        
    - name: Take screenshot
      run: |
        # Take a screenshot optimized for GitHub display
        npx playwright screenshot \
          --wait-for-selector="body" \
          --viewport-size=1280,720 \
          http://localhost:4000 \
          screenshot.png
          
        # Optimize the image for GitHub display (max 10MB, good quality)
        if command -v convert >/dev/null 2>&1; then
          convert screenshot.png -quality 85 -resize 1200x800\> screenshot_optimized.png
          mv screenshot_optimized.png screenshot.png
        fi

    # Upload image using GitHub's comment attachment system
    - name: Create or Update PR Comment with Image
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        # Create a simple comment with the artifact download
        echo "Creating PR comment with screenshot info..."
        
        # Check if we need to update an existing comment
        existing_comment_id=$(gh api \
          --method GET \
          -H "Accept: application/vnd.github+json" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          /repos/${{ github.repository }}/issues/${{ github.event.pull_request.number }}/comments \
          --jq '.[] | select(.user.login == "github-actions[bot]" and (.body | contains("Archive Preview"))) | .id' | head -1)
        
        # Create the comment body
        artifact_url="${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
        
        comment_body=$(cat << EOF
        ## 🖼️ Archive Preview
        
        Screenshot generated successfully! 
        
        **Local Development:**
        \`\`\`bash
        make serve
        # Visit http://localhost:4000
        \`\`\`
        
        📥 [Download Screenshot]($artifact_url) (Click "Artifacts" → \`preview-screenshot-${{ github.event.pull_request.number }}\`)
        
        ---
        *Generated by [GitHub Actions Run ${{ github.run_id }}]($artifact_url)*
        EOF
        )
        
        # Create or update comment
        if [ -n "$existing_comment_id" ]; then
          echo "Updating existing comment: $existing_comment_id"
          gh api \
            --method PATCH \
            -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            /repos/${{ github.repository }}/issues/comments/$existing_comment_id \
            -f body="$comment_body"
        else
          echo "Creating new comment"
          gh api \
            --method POST \
            -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            /repos/${{ github.repository }}/issues/${{ github.event.pull_request.number }}/comments \
            -f body="$comment_body"
        fi