name: PR Preview

on:
  pull_request:
    branches: [ main ]
    types: [opened, synchronize, reopened]

permissions:
  contents: write
  pull-requests: write
  issues: write

jobs:
  preview:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Setup Git
      run: |
        git config --global --add safe.directory /github/workspace
        git config --global user.email "action@github.com"
        git config --global user.name "GitHub Action"
      
    - name: Setup Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.1'
        bundler-cache: true
        
    - name: Install dependencies
      run: bundle install
      
    - name: Build site
      run: bundle exec jekyll build
      env:
        JEKYLL_ENV: production
        
    - name: Setup Node.js for screenshot
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Install Playwright
      run: |
        npm install -g playwright
        npx playwright install chromium
        
    - name: Start Jekyll server in background
      run: |
        bundle exec jekyll serve --host 0.0.0.0 --port 4000 --detach
        sleep 5  # Wait for server to start
        
    - name: Take screenshot
      run: |
        # Take a screenshot optimized for GitHub display
        npx playwright screenshot \
          --wait-for-selector="body" \
          --viewport-size=1280,720 \
          http://localhost:4000 \
          screenshot.png
          
        # Optimize the image for GitHub display (max 10MB, good quality)
        if command -v convert >/dev/null 2>&1; then
          convert screenshot.png -quality 85 -resize 1200x800\> screenshot_optimized.png
          mv screenshot_optimized.png screenshot.png
        fi
        
    - name: Upload screenshot artifact
      uses: actions/upload-artifact@v4
      id: upload-png
      with:
        name: preview-screenshot-${{ github.event.pull_request.number }}
        path: screenshot.png
        if-no-files-found: error
        retention-days: 7
        
    - name: Find Comment
      id: find-comment
      uses: peter-evans/find-comment@v3
      with:
        issue-number: ${{ github.event.pull_request.number }}
        comment-author: 'github-actions[bot]'
        body-includes: 'Archive Preview'

    # Update or create a comment with the PNG
    - name: Update PR Comment
      uses: peter-evans/create-or-update-comment@v3
      with:
        issue-number: ${{ github.event.pull_request.number }}
        comment-id: ${{ steps.find-comment.outputs.comment-id }}  # Use if updating an existing comment
        body: |
          ## üñºÔ∏è Archive Preview
          
          ![Archive Preview](${{ steps.upload-png.outputs.artifact-url }})
          
          **Local Development:**
          ```bash
          make serve
          # Visit http://localhost:4000
          ```
          
          üì• [Download Full Resolution](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}) (Artifacts ‚Üí `preview-screenshot-${{ github.event.pull_request.number }}`)