name: PR Preview

on:
  pull_request:
    branches: [ main ]
    types: [opened, synchronize, reopened]

jobs:
  preview:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Setup Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.1'
        bundler-cache: true
        
    - name: Install dependencies
      run: bundle install
      
    - name: Build site
      run: bundle exec jekyll build
      env:
        JEKYLL_ENV: production
        
    - name: Setup Node.js for screenshot
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Install Playwright
      run: |
        npm install -g playwright
        npx playwright install chromium
        
    - name: Start Jekyll server in background
      run: |
        bundle exec jekyll serve --host 0.0.0.0 --port 4000 --detach
        sleep 5  # Wait for server to start
        
    - name: Take screenshot
      run: |
        # Take a smaller screenshot to reduce file size
        npx playwright screenshot \
          --wait-for-selector="body" \
          --viewport-size=1280,720 \
          http://localhost:4000 \
          screenshot-full.png
          
        # Optimize/compress the image using ImageMagick if available
        if command -v convert >/dev/null 2>&1; then
          convert screenshot-full.png -quality 80 -resize 800x600 screenshot.png
        else
          cp screenshot-full.png screenshot.png
        fi
        
    - name: Create small base64 preview
      id: preview
      run: |
        # Create a very small thumbnail for inline display
        if command -v convert >/dev/null 2>&1; then
          convert screenshot.png -quality 60 -resize 400x300 thumbnail.png
          thumbnail_b64=$(base64 -w 0 thumbnail.png | head -c 50000)  # Limit to 50KB
          echo "thumbnail_data=$thumbnail_b64" >> $GITHUB_OUTPUT
          echo "has_thumbnail=true" >> $GITHUB_OUTPUT
        else
          echo "has_thumbnail=false" >> $GITHUB_OUTPUT
        fi
          
    - name: Upload screenshot artifact
      uses: actions/upload-artifact@v4
      with:
        name: preview-screenshot-${{ github.event.pull_request.number }}
        path: screenshot.png
        retention-days: 7
        
    - name: Post PR comment with screenshot
      uses: actions/github-script@v7
      with:
        script: |
          const { owner, repo } = context.repo;
          const pull_number = context.payload.pull_request.number;
          const run_id = context.runId;
          const has_thumbnail = '${{ steps.preview.outputs.has_thumbnail }}' === 'true';
          
          // Delete previous preview comments
          const comments = await github.rest.issues.listComments({
            owner,
            repo,
            issue_number: pull_number,
          });
          
          const botComments = comments.data.filter(comment => 
            comment.user.type === 'Bot' && 
            comment.body.includes('üñºÔ∏è PR Preview')
          );
          
          for (const comment of botComments) {
            await github.rest.issues.deleteComment({
              owner,
              repo,
              comment_id: comment.id,
            });
          }
          
          const artifactUrl = `https://github.com/${owner}/${repo}/actions/runs/${run_id}`;
          
          let thumbnailSection = '';
          if (has_thumbnail) {
            const thumbnailData = '${{ steps.preview.outputs.thumbnail_data }}';
            if (thumbnailData && thumbnailData.length < 40000) {  // Safety check
              thumbnailSection = `
          
          **Quick Preview:**
          ![Thumbnail Preview](data:image/png;base64,${thumbnailData})
          `;
            }
          }
          
          const body = `## üñºÔ∏è PR Preview
          
          Here's how the site looks with your changes:${thumbnailSection}
          
          üì∏ **[Download Full Screenshot](${artifactUrl})** 
          ‚Üí Click the link above ‚Üí Scroll to "Artifacts" ‚Üí Download \`preview-screenshot-${pull_number}\`
          
          **Local Preview:** 
          \`\`\`bash
          make serve
          # Visit http://localhost:4000
          \`\`\`
          
          ---
          *Generated by [GitHub Actions Run ${run_id}](${artifactUrl})*`;
          
          await github.rest.issues.createComment({
            owner,
            repo,
            issue_number: pull_number,
            body: body
          });
          
    - name: Stop Jekyll server
      run: |
        pkill -f jekyll || true
