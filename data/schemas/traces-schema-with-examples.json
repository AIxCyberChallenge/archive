{
  "custom_type": "object",
  "examples": [
    {
      "aixcc_original_file": {
        "json_path": ".resourceSpans[55].scopeSpans[0].spans[0]",
        "name": "build/final/traces/s3/aixcc-otel-export/traces/year=2025/month=06/day=27/hour=06/minute=58/traces_258738438.json.gz"
      },
      "attributes": {
        "crs": {
          "action": {
            "category": "dynamic_analysis",
            "name": "oss_fuzz.analyze_projects"
          }
        },
        "pdt": {
          "id": "7b1f2cd4dee963bc211f83b965a577cd",
          "replica_id": "0",
          "task_name": "coverage_trace"
        },
        "round": {
          "id": "final"
        },
        "team_id": "3020f48e-8999-4a3e-a238-afe4d187a566"
      },
      "duration_nano": "1010221165",
      "kind": 1,
      "name": "coverage-guy-tracer-3.trace.round",
      "parent_span_id": "0c6f03ed2129676a",
      "resources": {
        "service": {
          "name": "coverage_trace"
        },
        "telemetry": {
          "sdk": {
            "language": "python",
            "name": "opentelemetry",
            "version": "1.24.0"
          }
        }
      },
      "span_id": "fe4d88c29de27efe",
      "task_id": "0197ae62-780d-74c9-a199-e9fab28625ef",
      "team_name": "Shellphish",
      "timestamp": 1751007494.194152,
      "trace_id": "5d7bd1cb350b00b40b17dcd8fed8f3a9"
    },
    {
      "aixcc_original_file": {
        "line": 154953,
        "name": "build/exhibition3_from_signoz/traces/signoz/timestamp=1749201540/1749201540_traces.jsonl.gz"
      },
      "attribute_string_db$$system": "",
      "attribute_string_db$$system_exists": false,
      "attribute_string_http$$route": "",
      "attribute_string_http$$route_exists": false,
      "attribute_string_messaging$$operation": "",
      "attribute_string_messaging$$operation_exists": false,
      "attribute_string_messaging$$system": "",
      "attribute_string_messaging$$system_exists": false,
      "attribute_string_peer$$service": "",
      "attribute_string_peer$$service_exists": false,
      "attribute_string_rpc$$method": "",
      "attribute_string_rpc$$method_exists": false,
      "attribute_string_rpc$$service": "",
      "attribute_string_rpc$$service_exists": false,
      "attribute_string_rpc$$system": "",
      "attribute_string_rpc$$system_exists": false,
      "attributes": {
        "id": {
          "parsed": "0197418a-d675-7533-9d63-9050f5b0bd7d",
          "raw": "0197418a-d675-7533-9d63-9050f5b0bd7d"
        },
        "type": "models.Task"
      },
      "db_name": "",
      "db_operation": "",
      "duration_nano": "575366",
      "external_http_method": "",
      "external_http_url": "",
      "flags": 0,
      "has_error": false,
      "http_host": "",
      "http_method": "",
      "http_url": "",
      "is_remote": "unknown",
      "kind": 1,
      "kind_string": "Internal",
      "links": "[{\"traceId\":\"dfa9b28e3ea5c1f07b35eb7345a37e19\",\"spanId\":\"f48c9ab5e6e3d0d8\",\"refType\":\"CHILD_OF\"}]",
      "name": "ByID",
      "parent_span_id": "f48c9ab5e6e3d0d8",
      "resource_fingerprint": "service.namespace=scantron;service.name=scantron;deployment.environment=prod;hash=16508122431669058880",
      "resource_string_service$$name": "scantron",
      "resource_string_service$$name_exists": true,
      "resources": {
        "deployment": {
          "environment": "prod"
        },
        "service": {
          "name": "scantron",
          "namespace": "scantron"
        },
        "signoz": {
          "collector": {
            "id": "1115adcb-424f-4b13-ba1f-0a7987ee8fbd"
          }
        },
        "telemetry": {
          "sdk": {
            "language": "go",
            "name": "opentelemetry",
            "version": "1.35.0"
          }
        }
      },
      "response_status_code": "",
      "span_id": "a12e8fa86c043c60",
      "status_code": 0,
      "status_code_string": "Unset",
      "status_message": "",
      "team_name": null,
      "timestamp": 1749189268.587362,
      "trace_id": "dfa9b28e3ea5c1f07b35eb7345a37e19",
      "trace_state": "",
      "ts_bucket_start": "1749187800"
    },
    {
      "aixcc_original_file": {
        "line": 281934,
        "name": "build/exhibition2/traces/signoz/timestamp=1746766800/1746766800_traces.jsonl.gz"
      },
      "attribute_string_db$$system": "",
      "attribute_string_db$$system_exists": false,
      "attribute_string_http$$route": "",
      "attribute_string_http$$route_exists": false,
      "attribute_string_messaging$$operation": "",
      "attribute_string_messaging$$operation_exists": false,
      "attribute_string_messaging$$system": "",
      "attribute_string_messaging$$system_exists": false,
      "attribute_string_peer$$service": "",
      "attribute_string_peer$$service_exists": false,
      "attribute_string_rpc$$method": "",
      "attribute_string_rpc$$method_exists": false,
      "attribute_string_rpc$$service": "",
      "attribute_string_rpc$$service_exists": false,
      "attribute_string_rpc$$system": "",
      "attribute_string_rpc$$system_exists": false,
      "attributes": {
        "deployment": {
          "environment": "default"
        },
        "gen_ai": {
          "operation": {
            "name": "chat"
          },
          "output": {
            "type": "text"
          },
          "request": {
            "frequency_penalty": 0.0,
            "is_stream": false,
            "max_tokens": -1,
            "model": "chatgpt-4o-latest",
            "presence_penalty": 0.0,
            "seed": "",
            "service_tier": "auto",
            "stop_sequences": "[]",
            "temperature": 1.0,
            "top_p": 1.0,
            "user": ""
          },
          "response": {
            "finish_reasons": "[\"stop\"]",
            "id": "chatcmpl-BV7AjHWuNfXTIwJ6fT17eECOhEEIk",
            "model": "chatgpt-4o-latest",
            "service_tier": "default",
            "system_fingerprint": "fp_33b3b5cbb3"
          },
          "sdk": {
            "version": "1.75.0"
          },
          "server": {
            "time_to_first_token": 0.7700061798095703
          },
          "system": "openai",
          "usage": {
            "cost": 0.0,
            "input_tokens": 8147,
            "output_tokens": 36,
            "total_tokens": 8183
          }
        },
        "server": {
          "address": "api.openai.com",
          "port": "443"
        },
        "service": {
          "name": "afc-crs-all-you-need-is-a-fuzzing-brain"
        },
        "team_id": "cc43c9a5-b495-4ca4-9dbc-255533b0c8da",
        "telemetry": {
          "sdk": {
            "name": "openlit"
          }
        }
      },
      "db_name": "",
      "db_operation": "",
      "duration_nano": "775360775",
      "external_http_method": "",
      "external_http_url": "",
      "flags": 256,
      "has_error": false,
      "http_host": "api.openai.com",
      "http_method": "",
      "http_url": "",
      "is_remote": "no",
      "kind": 3,
      "kind_string": "Client",
      "links": "[{\"traceId\":\"3c7d6fc21a16f536ede398bf8991c605\",\"spanId\":\"743895ef953e0b9a\",\"refType\":\"CHILD_OF\"}]",
      "name": "chat chatgpt-4o-latest",
      "parent_span_id": "743895ef953e0b9a",
      "resource_fingerprint": "service.name=afc-crs-all-you-need-is-a-fuzzing-brain;deployment.environment=default;hash=13706607105420359205",
      "resource_string_service$$name": "afc-crs-all-you-need-is-a-fuzzing-brain",
      "resource_string_service$$name_exists": true,
      "resources": {
        "deployment": {
          "environment": "default"
        },
        "service": {
          "name": "afc-crs-all-you-need-is-a-fuzzing-brain"
        },
        "signoz": {
          "collector": {
            "id": "62dcaaff-4e01-4414-80be-49b27134e2ab"
          }
        },
        "telemetry": {
          "sdk": {
            "language": "python",
            "name": "openlit",
            "version": "1.32.1"
          }
        }
      },
      "response_status_code": "",
      "span_id": "ac9e8cfe6376b073",
      "status_code": 1,
      "status_code_string": "Ok",
      "status_message": "",
      "task_id": "0196b135-fb7d-7635-9f9c-2c4b0733b438",
      "team_name": "All You Need IS A Fuzzing Brain",
      "timestamp": 1746755436.9920607,
      "trace_id": "3c7d6fc21a16f536ede398bf8991c605",
      "trace_state": "",
      "ts_bucket_start": "1746754200"
    },
    {
      "aixcc_original_file": {
        "line": 57641977,
        "name": "build/exhibition1/traces/signoz/2025_04_02/2025_04_02.jsonl.gz"
      },
      "attribute_string_db$$system": "",
      "attribute_string_db$$system_exists": false,
      "attribute_string_http$$route": "",
      "attribute_string_http$$route_exists": false,
      "attribute_string_messaging$$operation": "",
      "attribute_string_messaging$$operation_exists": false,
      "attribute_string_messaging$$system": "",
      "attribute_string_messaging$$system_exists": false,
      "attribute_string_peer$$service": "",
      "attribute_string_peer$$service_exists": false,
      "attribute_string_rpc$$method": "DiffCopy",
      "attribute_string_rpc$$method_exists": true,
      "attribute_string_rpc$$service": "moby.filesync.v1.FileSync",
      "attribute_string_rpc$$service_exists": true,
      "attribute_string_rpc$$system": "grpc",
      "attribute_string_rpc$$system_exists": true,
      "attributes": {
        "rpc": {
          "grpc": {
            "status_code": 0
          },
          "method": "DiffCopy",
          "service": "moby.filesync.v1.FileSync",
          "system": "grpc"
        },
        "team_id": "b30a24a8-68b8-4f43-886c-c5544a0e83fb"
      },
      "db_name": "",
      "db_operation": "",
      "duration_nano": "1665873",
      "external_http_method": "",
      "external_http_url": "",
      "flags": 768,
      "has_error": false,
      "http_host": "",
      "http_method": "",
      "http_url": "",
      "is_remote": "yes",
      "kind": 2,
      "kind_string": "Server",
      "links": "[{\"traceId\":\"07fe456a8101fc04be1dd31f624142b5\",\"refType\":\"CHILD_OF\"}]",
      "name": "moby.filesync.v1.FileSync/DiffCopy",
      "parent_span_id": "",
      "resource_fingerprint": "service.name=buildx;hash=2900690090108719082",
      "resource_string_service$$name": "buildx",
      "resource_string_service$$name_exists": true,
      "resources": {
        "docker": {
          "cli": {
            "cobra": {
              "command_path": "docker"
            }
          }
        },
        "service": {
          "name": "buildx"
        },
        "signoz": {
          "collector": {
            "id": "336fe266-5316-4fb1-b9b3-3355ecf18aea"
          }
        },
        "telemetry": {
          "sdk": {
            "language": "go",
            "name": "opentelemetry",
            "version": "1.31.0"
          }
        }
      },
      "response_status_code": "0",
      "span_id": "c3de8153293cdc68",
      "status_code": 0,
      "status_code_string": "Unset",
      "status_message": "",
      "team_name": "Lacrosse",
      "timestamp": 1743630559.5726967,
      "trace_id": "07fe456a8101fc04be1dd31f624142b5",
      "trace_state": "",
      "ts_bucket_start": "1743629400"
    },
    {
      "aixcc_original_file": {
        "line": 83064,
        "name": "build/exhibition3_from_signoz/traces/signoz/timestamp=1749316740/1749316740_traces.jsonl.gz"
      },
      "attribute_string_db$$system": "",
      "attribute_string_db$$system_exists": false,
      "attribute_string_http$$route": "",
      "attribute_string_http$$route_exists": false,
      "attribute_string_messaging$$operation": "",
      "attribute_string_messaging$$operation_exists": false,
      "attribute_string_messaging$$system": "",
      "attribute_string_messaging$$system_exists": false,
      "attribute_string_peer$$service": "",
      "attribute_string_peer$$service_exists": false,
      "attribute_string_rpc$$method": "",
      "attribute_string_rpc$$method_exists": false,
      "attribute_string_rpc$$service": "",
      "attribute_string_rpc$$service_exists": false,
      "attribute_string_rpc$$system": "",
      "attribute_string_rpc$$system_exists": false,
      "attributes": {
        "http": {
          "method": "HEAD",
          "status_code": 200,
          "url": "http://dind:2375/_ping"
        },
        "net": {
          "peer": {
            "name": "dind",
            "port": 2375
          }
        },
        "team_id": "fa8a37e5-afc2-4404-8510-bdc3ce3a733b"
      },
      "db_name": "",
      "db_operation": "",
      "duration_nano": "4259466",
      "external_http_method": "HEAD",
      "external_http_url": "dind",
      "flags": 256,
      "has_error": false,
      "http_host": "",
      "http_method": "HEAD",
      "http_url": "http://dind:2375/_ping",
      "is_remote": "no",
      "kind": 3,
      "kind_string": "Client",
      "links": "[{\"traceId\":\"8e987c3db5ae3468f6cb9c1dff0973c6\",\"spanId\":\"2e16c824b1867a2c\",\"refType\":\"CHILD_OF\"}]",
      "name": "HEAD /_ping",
      "parent_span_id": "2e16c824b1867a2c",
      "resource_fingerprint": "service.name=tldemotel;hash=14893923529143521341",
      "resource_string_service$$name": "tldemotel",
      "resource_string_service$$name_exists": true,
      "resources": {
        "service": {
          "name": "tldemotel"
        },
        "signoz": {
          "collector": {
            "id": "f9c07400-a275-4ee3-a50f-d21fc822d91c"
          }
        },
        "telemetry": {
          "sdk": {
            "language": "go",
            "name": "opentelemetry",
            "version": "1.31.0"
          }
        }
      },
      "response_status_code": "200",
      "span_id": "bc5575a4cbbe5ad4",
      "status_code": 0,
      "status_code_string": "Unset",
      "status_message": "",
      "team_name": "Veronica",
      "timestamp": 1749304530.6194715,
      "trace_id": "8e987c3db5ae3468f6cb9c1dff0973c6",
      "trace_state": "",
      "ts_bucket_start": "1749303000"
    }
  ],
  "properties": {
    "aixcc_original_file": {
      "custom_type": "object",
      "examples": [
        {
          "json_path": ".resourceSpans[45].scopeSpans[0].spans[2]",
          "name": "build/final/traces/s3/aixcc-otel-export/traces/year=2025/month=06/day=27/hour=03/minute=35/traces_866598227.json.gz"
        },
        {
          "line": 1553874,
          "name": "build/exhibition1/traces/signoz/2025_04_02/2025_04_02.jsonl.gz"
        },
        {
          "line": 2069,
          "name": "build/exhibition3_from_signoz/traces/signoz/timestamp=1749334740/1749334740_traces.jsonl.gz"
        },
        {
          "line": 328927,
          "name": "build/exhibition2/traces/signoz/timestamp=1746568800/1746568800_traces.jsonl.gz"
        },
        {
          "line": 34502972,
          "name": "build/exhibition1b/traces/signoz/2025_04_03/2025_04_03.jsonl.gz"
        }
      ],
      "properties": {
        "json_path": {
          "custom_type": "string",
          "examples": [
            ".resourceSpans[100].scopeSpans[0].spans[351]",
            ".resourceSpans[25].scopeSpans[1].spans[76]",
            ".resourceSpans[292].scopeSpans[0].spans[0]",
            ".resourceSpans[351].scopeSpans[2].spans[8]",
            ".resourceSpans[66].scopeSpans[1].spans[369]"
          ],
          "type": "string"
        },
        "line": {
          "custom_type": "int32",
          "examples": [
            33,
            548946,
            6010705,
            64079153,
            562846
          ],
          "excludeMaximum": 64620027,
          "minimum": 0,
          "type": "number"
        },
        "name": {
          "custom_type": "string",
          "examples": [
            "build/exhibition2/traces/signoz/timestamp=1746558000/1746558000_traces.jsonl.gz",
            "build/final/traces/s3/aixcc-otel-export/traces/year=2025/month=06/day=26/hour=17/minute=09/traces_849299449.json.gz",
            "build/final/traces/s3/aixcc-otel-export/traces/year=2025/month=06/day=28/hour=19/minute=21/traces_207537877.json.gz",
            "build/final/traces/s3/aixcc-otel-export/traces/year=2025/month=06/day=30/hour=07/minute=50/traces_738230652.json.gz",
            "build/final/traces/s3/aixcc-otel-export/traces/year=2025/month=07/day=02/hour=10/minute=37/traces_176889056.json.gz"
          ],
          "type": "string"
        }
      },
      "required": [
        "name"
      ],
      "type": "object"
    },
    "attribute_string_db$$system": {
      "custom_type": "string",
      "examples": [
        ""
      ],
      "type": "string"
    },
    "attribute_string_db$$system_exists": {
      "custom_type": "bool",
      "examples": [
        false
      ],
      "type": "boolean"
    },
    "attribute_string_http$$route": {
      "custom_type": "string",
      "examples": [
        "",
        "/health/",
        "/v1/task/:task_id/patch/:patch_id/",
        "/v1/task/:task_id/pov/:pov_id/",
        "/v1/task/:task_id/pov/"
      ],
      "type": "string"
    },
    "attribute_string_http$$route_exists": {
      "custom_type": "bool",
      "examples": [
        false,
        true
      ],
      "type": "boolean"
    },
    "attribute_string_messaging$$operation": {
      "custom_type": "string",
      "examples": [
        ""
      ],
      "type": "string"
    },
    "attribute_string_messaging$$operation_exists": {
      "custom_type": "bool",
      "examples": [
        false
      ],
      "type": "boolean"
    },
    "attribute_string_messaging$$system": {
      "custom_type": "string",
      "examples": [
        ""
      ],
      "type": "string"
    },
    "attribute_string_messaging$$system_exists": {
      "custom_type": "bool",
      "examples": [
        false
      ],
      "type": "boolean"
    },
    "attribute_string_peer$$service": {
      "custom_type": "string",
      "examples": [
        ""
      ],
      "type": "string"
    },
    "attribute_string_peer$$service_exists": {
      "custom_type": "bool",
      "examples": [
        false
      ],
      "type": "boolean"
    },
    "attribute_string_rpc$$method": {
      "custom_type": "string",
      "examples": [
        "",
        "AddResource",
        "Ping",
        "Solve",
        "Status"
      ],
      "type": "string"
    },
    "attribute_string_rpc$$method_exists": {
      "custom_type": "bool",
      "examples": [
        false,
        true
      ],
      "type": "boolean"
    },
    "attribute_string_rpc$$service": {
      "custom_type": "string",
      "examples": [
        "",
        "containerd.services.containers.v1.Containers",
        "containerd.services.version.v1.Version",
        "moby.buildkit.v1.frontend.LLBBridge",
        "moby.filesync.v1.Auth"
      ],
      "type": "string"
    },
    "attribute_string_rpc$$service_exists": {
      "custom_type": "bool",
      "examples": [
        false,
        true
      ],
      "type": "boolean"
    },
    "attribute_string_rpc$$system": {
      "custom_type": "string",
      "examples": [
        "",
        "grpc"
      ],
      "type": "string"
    },
    "attribute_string_rpc$$system_exists": {
      "custom_type": "bool",
      "examples": [
        false,
        true
      ],
      "type": "boolean"
    },
    "attributes": {
      "custom_type": "object",
      "examples": [
        {
          "aflpp": {
            "seed_merge": {
              "duration": 0
            }
          },
          "crs": {
            "action": {
              "category": "fuzzing",
              "name": "seed_merge",
              "target": {
                "harness": "fuzz-xdg-desktop"
              }
            }
          },
          "fuzz": {
            "corpus": {
              "additions": "\"[]\"",
              "full_snapshot": true,
              "size": 970,
              "update": {
                "method": "periodic",
                "time": 1751257607.0
              }
            }
          },
          "pdt": {
            "id": "c42b84183e7b824dee7d59e175f7ec3a",
            "replica_id": "0",
            "task_name": "aflpp_fuzz_merge"
          },
          "round": {
            "id": "final"
          },
          "team_id": "3020f48e-8999-4a3e-a238-afe4d187a566"
        },
        {
          "contextName": "patch",
          "id": {
            "parsed": "019745ba-9cf0-707f-b809-df88988fbefc",
            "raw": "019745ba-9cf0-707f-b809-df88988fbefc"
          },
          "paramName": "patch_id",
          "type": "models.PatchSubmission"
        },
        {
          "deployment": {
            "environment": "default"
          },
          "gen_ai": {
            "operation": {
              "name": "chat"
            },
            "output": {
              "type": "text"
            },
            "request": {
              "frequency_penalty": 0.0,
              "is_stream": false,
              "max_tokens": -1,
              "model": "chatgpt-4o-latest",
              "presence_penalty": 0.0,
              "seed": "",
              "service_tier": "auto",
              "stop_sequences": "[]",
              "temperature": 1.0,
              "top_p": 1.0,
              "user": ""
            },
            "response": {
              "finish_reasons": "[\"stop\"]",
              "id": "chatcmpl-BIKwNy52dHlE2TG7oL0rCBEyTC5ex",
              "model": "chatgpt-4o-latest",
              "service_tier": "default",
              "system_fingerprint": "fp_d04424daa8"
            },
            "sdk": {
              "version": "1.69.0"
            },
            "server": {
              "time_to_first_token": 0.6380565166473389
            },
            "system": "openai",
            "usage": {
              "cost": 0.0,
              "input_tokens": 841,
              "output_tokens": 83,
              "total_tokens": 924
            }
          },
          "server": {
            "address": "api.openai.com",
            "port": "443"
          },
          "service": {
            "name": "afc-crs-all-you-need-is-a-fuzzing-brain"
          },
          "team_id": "cc43c9a5-b495-4ca4-9dbc-255533b0c8da",
          "telemetry": {
            "sdk": {
              "name": "openlit"
            }
          }
        },
        {
          "detected_language": "java",
          "focus": "round-dev-testing-poi",
          "path": "poi-scratchpad/src/main/java/org/apache/poi/hmef/attribute/MAPIAttribute.java",
          "repoDir": "/dind-shared/repo-2371376936"
        },
        {
          "http": {
            "client_ip": "100.101.168.51",
            "method": "GET",
            "route": "/v1/ping/",
            "scheme": "http",
            "status_code": 200,
            "target": "/v1/ping/"
          },
          "net": {
            "host": {
              "name": "scantron"
            },
            "protocol": {
              "version": "1.1"
            },
            "sock": {
              "peer": {
                "addr": "10.224.0.72",
                "port": 54124
              }
            }
          },
          "user_agent": {
            "original": "Python/3.13 aiohttp/3.11.18"
          }
        }
      ],
      "properties": {
        "active": {
          "custom_type": "object",
          "examples": [
            {
              "valid": true,
              "value": true
            }
          ],
          "properties": {
            "valid": {
              "custom_type": "bool",
              "examples": [
                true
              ],
              "type": "boolean"
            },
            "value": {
              "custom_type": "bool",
              "examples": [
                true
              ],
              "type": "boolean"
            }
          },
          "required": [
            "valid",
            "value"
          ],
          "type": "object"
        },
        "aflpp": {
          "custom_type": "object",
          "examples": [
            {
              "seed_merge": {
                "duration": 11
              }
            },
            {
              "sync_from_duration": 10,
              "sync_nodes": 6,
              "sync_to_duration": 16,
              "sync_total_duration": 26
            },
            {
              "sync_from_duration": 5,
              "sync_nodes": 5,
              "sync_to_duration": 7,
              "sync_total_duration": 12
            },
            {
              "sync_from_duration": 58,
              "sync_nodes": 6,
              "sync_to_duration": 75,
              "sync_total_duration": 133
            },
            {
              "sync_from_duration": 737,
              "sync_nodes": 6,
              "sync_to_duration": 1140,
              "sync_total_duration": 1877
            }
          ],
          "properties": {
            "seed_merge": {
              "custom_type": "object",
              "examples": [
                {
                  "duration": 0
                },
                {
                  "duration": 15
                },
                {
                  "duration": 2
                },
                {
                  "duration": 4
                },
                {
                  "duration": 8
                }
              ],
              "properties": {
                "duration": {
                  "custom_type": "uint8",
                  "examples": [
                    0,
                    1,
                    7,
                    15,
                    24
                  ],
                  "excludeMaximum": 219,
                  "minimum": 0,
                  "type": "number"
                }
              },
              "required": [
                "duration"
              ],
              "type": "object"
            },
            "sync_from_duration": {
              "custom_type": "int16",
              "examples": [
                7,
                164,
                170,
                276,
                442
              ],
              "excludeMaximum": 9314,
              "minimum": 2,
              "type": "number"
            },
            "sync_nodes": {
              "custom_type": "uint8",
              "examples": [
                5,
                6
              ],
              "excludeMaximum": 135,
              "minimum": 2,
              "type": "number"
            },
            "sync_to_duration": {
              "custom_type": "int16",
              "examples": [
                7,
                199,
                203,
                466,
                1186
              ],
              "excludeMaximum": 8579,
              "minimum": 2,
              "type": "number"
            },
            "sync_total_duration": {
              "custom_type": "int16",
              "examples": [
                12,
                419,
                422,
                678,
                1098
              ],
              "excludeMaximum": 10535,
              "minimum": 4,
              "type": "number"
            }
          },
          "required": [],
          "type": "object"
        },
        "answer_key_path": {
          "custom_type": "string",
          "examples": [
            "",
            "",
            "",
            "",
            ""
          ],
          "type": "string"
        },
        "antlr4_indexer": {
          "custom_type": "object",
          "examples": [
            {
              "mode": "full"
            }
          ],
          "properties": {
            "commit_id": {
              "custom_type": "string",
              "type": "string"
            },
            "index": {
              "custom_type": "int8",
              "excludeMaximum": 1,
              "minimum": 0,
              "type": "number"
            },
            "mode": {
              "custom_type": "string",
              "examples": [
                "full"
              ],
              "type": "string"
            }
          },
          "required": [],
          "type": "object"
        },
        "architecture": {
          "custom_type": "string",
          "examples": [
            "x86_64",
            "x86_64",
            "x86_64",
            "x86_64",
            "x86_64"
          ],
          "type": "string"
        },
        "archivePath": {
          "custom_type": "string",
          "type": "string"
        },
        "archiveType": {
          "custom_type": "string",
          "type": "string"
        },
        "args": {
          "custom_type": "string",
          "examples": [
            "[\"--head-repo-url\", \"https://maintainerinterfaces.blob.core.windows.net/sources/bf5cbdc273d0f81e5861f56a77720eff8520cee7805bde56d534e04c12b39c11?se=2025-06-11T09%3A45%3A01Z&sig=YY2u7F1BdKj0LcWva1oCCoNOaMwfls3CIk0ILfia2FE%3D&sp=r&sr=b&sv=2025-01-05\", \"--focus\", \"round-exhibition3-libpng\", \"--project-name\", \"libpng\", \"--oss-fuzz-url\", \"https://maintainerinterfaces.blob.core.windows.net/sources/35f4622d1818d692b3de8073dc2bf573c71bf0f63b0b543a64e945c8a5dc73bf?se=2025-06-11T09%3A45%3A01Z&sig=8gFda2zwdRGRhVQiCoxVO%2Fa%2BuMPakJzPmOMASMB4mhY%3D&sp=r&sr=b&sv=2025-01-05\", \"--architecture\", \"x86_64\", \"--trigger-url\", \"https://maintainerinterfaces.blob.core.windows.net/submissions/833dd137ab757d1aaa138148d82f3ee8109efb423a80918f47c7889b56fd8e83?se=2025-06-11T09%3A45%3A01Z&sig=Cn14Z3iTQ%2BZHuYjp5cbCfEFZ%2BsjYmotdLnL%2Bh%2FA34MM%3D&sp=r&sr=b&sv=2025-01-05\", \"--sanitizer\", \"memory\", \"--harness-name\", \"libpng_read_fuzzer\", \"--engine\", \"libfuzzer\", \"--pov-id\", \"019748eb-c835-79f8-bb27-5f74d05993c8\", \"--archive-s3\", \"--base-repo-url\", \"https://maintainerinterfaces.blob.core.windows.net/sources/edabbc1eafe7a44fa75f880da228cfe6051f6bb870af5b9d6ac147510c365f76?se=2025-06-11T09%3A45%3A01Z&sig=%2BHc3De5nuKZ0UoV7IPfvvXZ8mEqBqI2MPeeuMYKZM2o%3D&sp=r&sr=b&sv=2025-01-05\"]",
            "[\"--head-repo-url\", \"https://maintainerinterfacesstg.blob.core.windows.net/sources/2f26a92743017525aed20a41bd1869e75d5b4273ea126b8a6d445c259c860ec9?se=2025-06-30T20%3A37%3A31Z&sig=goH4pgluh8CIEEIMvzk3klRXTpEYe7bEYL%2FzQ%2F140QQ%3D&sp=r&sr=b&sv=2025-01-05\", \"--oss-fuzz-url\", \"https://maintainerinterfacesstg.blob.core.windows.net/sources/0881b996bc4c2af438f1689f969a30d2ef19c45c751fb8b39f52b54dd2a83c23?se=2025-06-30T20%3A37%3A31Z&sig=%2B2LML9qw4JgIBOll%2BfKsdQp8wi6XEmUWJ3HaN5oppwY%3D&sp=r&sr=b&sv=2025-01-05\", \"--focus\", \"round-dev-testing-commons-compress\", \"--project-name\", \"apache-commons-compress\", \"--export-results\", \"--skip-patch-tests\", \"--base-repo-url\", \"https://maintainerinterfacesstg.blob.core.windows.net/sources/ca2f63b2669129f846d980cad0139eb2f909d952940e40cfa5c8f2e16cea367a?se=2025-06-30T20%3A37%3A31Z&sig=mYx0BgGgpw1vPjzEmjtRoJRrJFJIIM9G1PYKAPM%2FV%2Fo%3D&sp=r&sr=b&sv=2025-01-05\", \"--trigger-url\", \"https://maintainerinterfacesstg.blob.core.windows.net/submissions/3d87acc5894b1b4442bd617c6501a0ae50de98ce93edca469ba108474b5627e9?se=2025-06-30T20%3A37%3A31Z&sig=JkLZ9ygAoJBJpqKCONSB1Cr0Z7rgt6GgaBINFHau%2FN4%3D&sp=r&sr=b&sv=2025-01-05\", \"--architecture\", \"x86_64\", \"--sanitizer\", \"address\", \"--harness-name\", \"CompressorGzipFuzzer\", \"--engine\", \"libfuzzer\", \"--allowed-languages\", \"c\", \"--allowed-languages\", \"java\", \"--patch-url\", \"https://maintainerinterfacesstg.blob.core.windows.net/submissions/04bd0a9d0e543b94cd27a1295925e26d9f190cb4154bc80a8991ef1aa89f7dd1?se=2025-06-30T20%3A37%3A31Z&sig=9BeY9Oni48oNLZryVCzWHsXn8Nrvf7wdloUH55flyW8%3D&sp=r&sr=b&sv=2025-01-05\", \"--job-id\", \"0197ad1a-001f-7381-a757-e48eb6db34b4\"]",
            "[\"--head-repo-url\", \"https://maintainerinterfacesstg.blob.core.windows.net/sources/ed9d9ed5795860b009151b4a1fdf1f647df1ea28ddc56343f35d3c745b274d37?se=2025-07-04T21%3A59%3A28Z&sig=0%2Fvttb281Zv8FfWFSZ7uHKhmojrC%2F9aBVa9uNq6QcRU%3D&sp=r&sr=b&sv=2025-01-05\", \"--focus\", \"round-gpdev-poi\", \"--project-name\", \"apache-poi\", \"--oss-fuzz-url\", \"https://maintainerinterfacesstg.blob.core.windows.net/sources/779968e12bb985116b31db5cc487306b64a12e9449aea831e94daacfbfeb2287?se=2025-07-04T21%3A59%3A28Z&sig=qMXDkzt4t9I%2BfRWtPvcmPhz%2FdxQofgO1Ez8sdefhqzA%3D&sp=r&sr=b&sv=2025-01-05\", \"--architecture\", \"x86_64\", \"--trigger-url\", \"https://maintainerinterfacesstg.blob.core.windows.net/submissions/5af98e3fe84327ec7be27dee27213747c20fe9f53c7d03353fb26e8f9c404ba6?se=2025-07-04T21%3A59%3A28Z&sig=t1THHvtPaTRfNJQoEkvxM7ag0YM5lxGr5l2gFTAMufI%3D&sp=r&sr=b&sv=2025-01-05\", \"--sanitizer\", \"address\", \"--harness-name\", \"POIXSSFFuzzer\", \"--engine\", \"libfuzzer\", \"--pov-id\", \"0197c1fe-768d-786a-b090-be4e49277063\", \"--archive-s3\", \"--base-repo-url\", \"https://maintainerinterfacesstg.blob.core.windows.net/sources/a2ba2b7a0ce8fc187c73eb999f50107ac397be681fb036c911630c9fcf594678?se=2025-07-04T21%3A59%3A28Z&sig=EkR6Z0xgJbo1xji86mbkkflBcDPlCNXer%2F46Vwji6YU%3D&sp=r&sr=b&sv=2025-01-05\"]",
            "[\"-I\",\"gzip --no-name --best\",\"--sort=name\",\"--format=posix\",\"--pax-option=exthdr.name=%d/PaxHeaders/%f\",\"--pax-option=delete=atime,delete=ctime\",\"--clamp-mtime\",\"--mtime=@0\",\"--numeric-owner\",\"--owner=0\",\"--group=0\",\"--mode=go+u,go-w\",\"-cf\",\"/data/challengetask372648623/tarsDir/c400d99e-4091-4f9b-ba2c-b589e3353b90.tar.gz\",\"-C\",\"/data/challengetask372648623/baseRepos\",\"round-exhibition2-libpng\"]",
            "[\"-x\", \"-z\", \"-f\", \"-\", \"-C\", \"/dind-shared/repo-924315776\"]"
          ],
          "type": "string"
        },
        "auth": {
          "custom_type": "object",
          "examples": [
            {
              "id": "3020f48e-8999-4a3e-a238-afe4d187a566",
              "note": "shellphish"
            },
            {
              "id": "5e98512c-e8f0-4015-b2fb-77d2ae2477f2",
              "note": "42-b3yond-6ug"
            },
            {
              "id": "dff41614-01d1-4799-aec3-e72c8b436a4f",
              "note": "trail-of-bits"
            },
            {
              "id": "ef26fabc-fef5-4367-874c-94ddaf4da4cd",
              "note": "team example - beefed up HCRS for testing fuzzer building"
            },
            {
              "id": "fa8a37e5-afc2-4404-8510-bdc3ce3a733b",
              "note": "Prod Veronica"
            }
          ],
          "properties": {
            "id": {
              "custom_type": "uuid",
              "examples": [
                "344d7fac-4f23-4e74-8ecd-eb3b63c1b099",
                "5e98512c-e8f0-4015-b2fb-77d2ae2477f2",
                "b30a24a8-68b8-4f43-886c-c5544a0e83fb",
                "d9677aae-62f9-4778-bb33-3a1017f98a96",
                "dff41614-01d1-4799-aec3-e72c8b436a4f"
              ],
              "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
              "type": "string"
            },
            "note": {
              "custom_type": "string",
              "examples": [
                "Mock CRS",
                "all_you_need_is_a_fuzzing_brain",
                "lacrosse",
                "team example - beefed up HCRS for testing fuzzer building",
                "theori"
              ],
              "type": "string"
            }
          },
          "required": [
            "id",
            "note"
          ],
          "type": "object"
        },
        "authKey": {
          "custom_type": "string",
          "examples": [
            "auth",
            "auth",
            "auth",
            "auth",
            "auth"
          ],
          "type": "string"
        },
        "baseDir": {
          "custom_type": "string",
          "examples": [
            "/data"
          ],
          "type": "string"
        },
        "baseRef": {
          "custom_type": "string",
          "type": "string"
        },
        "baseRepo": {
          "custom_type": "object",
          "examples": [
            {
              "url": ""
            },
            {
              "url": "https://maintainerinterfaces.blob.core.windows.net/sources/8d19d5f11c9b5dd4c17e32d867930eb17d7fb835be1347b5d9cbea7a20fa1bc9?se=2025-06-12T04%3A28%3A37Z&sig=hlnJ8MRO8LXf%2F%2B%2FM0qz7%2B1oPBxz%2F5B24WnCljgVz5Hs%3D&sp=r&sr=b&sv=2025-01-05"
            },
            {
              "url": ""
            },
            {
              "url": "https://maintainerinterfaces.blob.core.windows.net/sources/30cff9855474777b412673daa9dd3c97879f7d4cbfab58a060457b952c4e9648?se=2025-06-10T21%3A21%3A15Z&sig=0xNlxXVHV0r%2BWkhiKjvB%2BZ6%2F9aZjetMAr41MxD5H%2F6k%3D&sp=r&sr=b&sv=2025-01-05"
            },
            {
              "url": "https://maintainerinterfacesstg.blob.core.windows.net/sources/1d9764e6c06a392a47c0fed5cddf3c7cdf29246489c0db8347c03a14e90e34a6?se=2025-07-02T04%3A48%3A42Z&sig=rnFor75jz44J%2FTJfyb314Y93jlMMSK%2FfeIJlcpP9JpU%3D&sp=r&sr=b&sv=2025-01-05"
            }
          ],
          "properties": {
            "url": {
              "custom_type": "string",
              "examples": [
                "",
                "https://maintainerinterfaces.blob.core.windows.net/sources/8d19d5f11c9b5dd4c17e32d867930eb17d7fb835be1347b5d9cbea7a20fa1bc9?se=2025-06-12T04%3A28%3A37Z&sig=hlnJ8MRO8LXf%2F%2B%2FM0qz7%2B1oPBxz%2F5B24WnCljgVz5Hs%3D&sp=r&sr=b&sv=2025-01-05",
                "",
                "https://maintainerinterfaces.blob.core.windows.net/sources/30cff9855474777b412673daa9dd3c97879f7d4cbfab58a060457b952c4e9648?se=2025-06-10T21%3A21%3A15Z&sig=0xNlxXVHV0r%2BWkhiKjvB%2BZ6%2F9aZjetMAr41MxD5H%2F6k%3D&sp=r&sr=b&sv=2025-01-05",
                "https://maintainerinterfacesstg.blob.core.windows.net/sources/1d9764e6c06a392a47c0fed5cddf3c7cdf29246489c0db8347c03a14e90e34a6?se=2025-07-02T04%3A48%3A42Z&sig=rnFor75jz44J%2FTJfyb314Y93jlMMSK%2FfeIJlcpP9JpU%3D&sp=r&sr=b&sv=2025-01-05"
              ],
              "type": "string"
            }
          },
          "required": [
            "url"
          ],
          "type": "object"
        },
        "baseRepoPath": {
          "custom_type": "string",
          "examples": [
            "/data/challengetask1966660770/baseRepos/round-exhibition2-libpng"
          ],
          "type": "string"
        },
        "blob": {
          "custom_type": "object",
          "examples": [
            {
              "name": "46470e2ae86c0bc5b2ca268272749063fcfc637a0810426096f069b725ba0e3e"
            },
            {
              "name": "55fa323b1daf73bc33cdde2b3d05f4ced594b7b73b541c479e9974c612c2dc4d"
            },
            {
              "name": "aaa120c818d481175dc59e6a9bd055585a634d2677da3a2dd46d205275552065"
            },
            {
              "name": "b8309cf1c04fc31ae07a72b5efee3224cd9681b9fa115e86b285043cf0c1e00a"
            },
            {
              "name": "c66bf215bd1f71b848a29f3f0bd1fd3735ee9fb9c7dcd4cc88cf8bf9c4b997db"
            }
          ],
          "properties": {
            "name": {
              "custom_type": "string",
              "examples": [
                "009194e95512d719401b50ba4b7b1376c26a1bbeeade64fa245e16237d57b3b8",
                "3ab73a6b9288385c6fcda00d59e128e81d6f869681f4e8ee80a7e4822a2f99ec",
                "82a2d27ea318d58597a53382e99733dd8d3112daa15ce7089ef8ddb3d729a911",
                "a430aadc1163e9187eb0ffb0bb009f3f925c3ca261b49930f43a4a8b376f778a",
                "b09b7cc5d3409f4c36eee8bd6e8ee0ae9bc234abcb29b1cc3406555053f9bce2"
              ],
              "type": "string"
            }
          },
          "required": [
            "name"
          ],
          "type": "object"
        },
        "blobName": {
          "custom_type": "string",
          "examples": [
            "1f800d3a683e500baffc100b7162bd95fe8ad0d5f7f318ed4b7de3137137c0bb",
            "66d96543c43028d8fb9493c0a9880c9466695c9c71ce59ecc4626ff9aa2a0fe9",
            "943369b3e3d6174e062a6ac98f461b2c9bab44b1572e1b5c2df9385a15fe7efd",
            "a23b2f1b5c003db851bfb50d1888a2ccb36661430a1361031c2b1e2ea4330e02",
            "cce4b3857587ce6fcd7e8dd4ff29def9220e765ee46f999a23a00fe45de1a796"
          ],
          "type": "string"
        },
        "body": {
          "custom_type": "string",
          "type": "string"
        },
        "bridge": {
          "custom_type": "object",
          "examples": [
            {
              "enable_ipv4": true,
              "enable_ipv6": false,
              "icc": true,
              "internal": false,
              "mtu": 1500
            }
          ],
          "properties": {
            "enable_ipv4": {
              "custom_type": "bool",
              "examples": [
                true
              ],
              "type": "boolean"
            },
            "enable_ipv6": {
              "custom_type": "bool",
              "examples": [
                false
              ],
              "type": "boolean"
            },
            "icc": {
              "custom_type": "bool",
              "examples": [
                true
              ],
              "type": "boolean"
            },
            "internal": {
              "custom_type": "bool",
              "examples": [
                false
              ],
              "type": "boolean"
            },
            "mtu": {
              "custom_type": "int16",
              "examples": [
                1500
              ],
              "excludeMaximum": 1500,
              "minimum": 1500,
              "type": "number"
            }
          },
          "required": [
            "enable_ipv4",
            "enable_ipv6",
            "icc",
            "internal",
            "mtu"
          ],
          "type": "object"
        },
        "bridgeName": {
          "custom_type": "string",
          "examples": [
            "docker0"
          ],
          "type": "string"
        },
        "broadcastSARIF": {
          "custom_type": "object",
          "examples": [
            {
              "id": "0197b717-e7b0-7360-997b-5dc0f94c1f6b"
            },
            {
              "id": "0197c5a3-0bb9-7ea8-a0cc-26e51603583d"
            },
            {
              "id": "0197b454-8381-7950-a23b-4f40a0eedc96"
            },
            {
              "id": "0197b46b-eb2b-7687-8bf2-a176436b5c2c"
            },
            {
              "id": "0197c207-dcca-7ad5-a50e-ddc452c642be"
            }
          ],
          "properties": {
            "id": {
              "custom_type": "uuid",
              "examples": [
                "0197b717-e7b0-7360-997b-5dc0f94c1f6b",
                "0197c5a3-0bb9-7ea8-a0cc-26e51603583d",
                "0197b454-8381-7950-a23b-4f40a0eedc96",
                "0197b46b-eb2b-7687-8bf2-a176436b5c2c",
                "0197c207-dcca-7ad5-a50e-ddc452c642be"
              ],
              "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
              "type": "string"
            }
          },
          "required": [
            "id"
          ],
          "type": "object"
        },
        "bucketName": {
          "custom_type": "string",
          "examples": [
            "afc-archive-prod-api-artifacts",
            "afc-archive-staging-api-artifacts",
            "afc-archive-prod-api-artifacts",
            "afc-archive-prod-api-artifacts",
            "afc-archive-prod-api-artifacts"
          ],
          "type": "string"
        },
        "builder": {
          "custom_type": "string",
          "examples": [
            "default"
          ],
          "type": "string"
        },
        "bundle": {
          "custom_type": "object",
          "examples": [
            {
              "id": "0196a6d8-8bdd-73f4-94b1-763d235a282f"
            },
            {
              "id": "0197b371-2e6c-7ac9-9236-ae3476be1f04"
            },
            {
              "id": "0197b986-2832-7b48-a3f4-f1cf55c7ae98"
            },
            {
              "id": "0197bde3-0551-7c66-b971-7c6039b90a5d"
            },
            {
              "id": "0197c14a-ddef-7f0a-abe2-4debf3b8a126"
            }
          ],
          "properties": {
            "id": {
              "custom_type": "uuid",
              "examples": [
                "0196a6d8-8bdd-73f4-94b1-763d235a282f",
                "0196b0bf-7505-70e9-ba52-5e6ec6b4c06c",
                "0197b986-2860-7ddb-acc2-2e84a3cf24fc",
                "0197c1fe-755c-7317-99c3-8b95576b695d",
                "0197c870-4646-7e5e-8f2e-7e7a57810128"
              ],
              "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
              "type": "string"
            }
          },
          "required": [
            "id"
          ],
          "type": "object"
        },
        "challenge": {
          "custom_type": "object",
          "examples": [
            {
              "duration_s": 28800,
              "name": "Example Libpng Delta Scan",
              "refs": {
                "base": "base-6e900d2545cb5ba3102c647e9428908beae5b666",
                "head": "delta-cdca4f41d6743d6c69a2e8a742c93a0902fe01d4"
              },
              "repo": {
                "url": "https://github.com/aixcc-afc/round-exhibition2-libpng"
              }
            }
          ],
          "properties": {
            "duration_s": {
              "custom_type": "int32",
              "examples": [
                28800
              ],
              "excludeMaximum": 86400,
              "minimum": 300,
              "type": "number"
            },
            "name": {
              "custom_type": "string",
              "examples": [
                "Example Libpng Delta Scan"
              ],
              "type": "string"
            },
            "refs": {
              "custom_type": "object",
              "examples": [
                {
                  "base": "base-6e900d2545cb5ba3102c647e9428908beae5b666",
                  "head": "delta-cdca4f41d6743d6c69a2e8a742c93a0902fe01d4"
                }
              ],
              "properties": {
                "base": {
                  "custom_type": "string",
                  "examples": [
                    "base-6e900d2545cb5ba3102c647e9428908beae5b666"
                  ],
                  "type": "string"
                },
                "head": {
                  "custom_type": "string",
                  "examples": [
                    "delta-cdca4f41d6743d6c69a2e8a742c93a0902fe01d4"
                  ],
                  "type": "string"
                }
              },
              "required": [
                "head"
              ],
              "type": "object"
            },
            "repo": {
              "custom_type": "object",
              "examples": [
                {
                  "url": "https://github.com/aixcc-afc/round-exhibition2-libpng"
                }
              ],
              "properties": {
                "url": {
                  "custom_type": "string",
                  "examples": [
                    "https://github.com/aixcc-afc/round-exhibition2-libpng"
                  ],
                  "type": "string"
                }
              },
              "required": [
                "url"
              ],
              "type": "object"
            }
          },
          "required": [
            "name"
          ],
          "type": "object"
        },
        "challengeyaml": {
          "custom_type": "object",
          "properties": {
            "path": {
              "custom_type": "string",
              "type": "string"
            }
          },
          "required": [
            "path"
          ],
          "type": "object"
        },
        "clang_indexer": {
          "custom_type": "object",
          "properties": {
            "compile_args": {
              "custom_type": "string",
              "type": "string"
            },
            "container_path": {
              "custom_type": "string",
              "type": "string"
            },
            "run_mode": {
              "custom_type": "string",
              "type": "string"
            }
          },
          "required": [],
          "type": "object"
        },
        "cli": {
          "custom_type": "object",
          "examples": [
            {
              "flags": [
                "pull"
              ]
            },
            {
              "flags": [
                "no-deps"
              ],
              "isatty": true
            },
            {
              "flags": [
                "no-deps"
              ],
              "isatty": true
            },
            {
              "flags": [
                "no-deps"
              ],
              "isatty": true
            },
            {
              "flags": [
                "pull"
              ],
              "isatty": false
            }
          ],
          "properties": {
            "flags": {
              "custom_type": "list",
              "examples": [
                [
                  "pull"
                ],
                [
                  "no-deps"
                ],
                [
                  "no-deps"
                ],
                [
                  "no-deps"
                ],
                [
                  "pull"
                ]
              ],
              "items": {
                "custom_type": "string",
                "examples": [
                  "pull",
                  "no-deps",
                  "no-deps",
                  "no-deps",
                  "pull"
                ],
                "type": "string"
              },
              "type": "array"
            },
            "isatty": {
              "custom_type": "bool",
              "examples": [
                true,
                true,
                true,
                false
              ],
              "type": "boolean"
            }
          },
          "required": [
            "flags"
          ],
          "type": "object"
        },
        "cmd": {
          "custom_type": "string",
          "examples": [
            "/usr/local/bin/afl-fuzz -M master -t 1000+ -i /tmp/b3fuzz/afl/019747e5-e851-7391-af4b-87c6c5222c07/libpng_read_fuzzer/seeds -o /tmp/b3fuzz/afl/019747e5-e851-7391-af4b-87c6c5222c07/libpng_read_fuzzer/undefined/output -- /tmp/b3fuzz/afl/019747e5-e851-7391-af4b-87c6c5222c07/libpng_read_fuzzer/undefined/libpng_read_fuzzer @@",
            "/usr/local/bin/afl-fuzz -S slave_23 -t 1000+ -x /tmp/merged_dict_3294390184.dict -i /tmp/b3fuzz/afl/01974189-8143-7cb8-9968-a380e62736be/libpostal_string_utils_fuzzer/seeds -o /tmp/b3fuzz/afl/01974189-8143-7cb8-9968-a380e62736be/libpostal_string_utils_fuzzer/address/output -- /tmp/b3fuzz/afl/01974189-8143-7cb8-9968-a380e62736be/libpostal_string_utils_fuzzer/address/libpostal_string_utils_fuzzer @@",
            "/usr/local/bin/afl-fuzz -M master -t 1000+ -i /tmp/b3fuzz/afl/01974a72-0aee-7025-8547-35267db47f01/schema/seeds -o /tmp/b3fuzz/afl/01974a72-0aee-7025-8547-35267db47f01/schema/address/output -- /tmp/b3fuzz/afl/01974a72-0aee-7025-8547-35267db47f01/schema/address/schema @@",
            "/usr/local/bin/afl-fuzz -S slave_20 -t 1000+ -i /tmp/b3fuzz/afl/01974189-9f82-74b4-8366-71ea0d695cdd/curl_fuzzer_gopher/seeds -o /tmp/b3fuzz/afl/01974189-9f82-74b4-8366-71ea0d695cdd/curl_fuzzer_gopher/memory/output -- /tmp/b3fuzz/afl/01974189-9f82-74b4-8366-71ea0d695cdd/curl_fuzzer_gopher/memory/curl_fuzzer_gopher @@",
            "/usr/local/bin/afl-fuzz -S slave_11 -t 1000+ -x /tmp/merged_dict_1676746372.dict -i /tmp/b3fuzz/afl/019747e5-ef1b-75df-8e04-4bb98c1b5887/TestFuzzCommonAssistanceHexStringToBin/seeds -o /tmp/b3fuzz/afl/019747e5-ef1b-75df-8e04-4bb98c1b5887/TestFuzzCommonAssistanceHexStringToBin/address/output -- /tmp/b3fuzz/afl/019747e5-ef1b-75df-8e04-4bb98c1b5887/TestFuzzCommonAssistanceHexStringToBin/address/TestFuzzCommonAssistanceHexStringToBin @@"
          ],
          "type": "string"
        },
        "command": {
          "custom_type": "string",
          "examples": [
            "/usr/libexec/docker/cli-plugins/docker-buildx buildx build -t 0b203262483312da.azurecr.io/project/curl:9473d22434a82d6f7b32dc6411debfbee81feb164244f195930ca9d2b3621729 /data/cache/oss_fuzz_9473d22434a82d6f7b32dc6411debfbee81feb164244f195930ca9d2b3621729/fuzz-tooling/projects/curl",
            "/usr/local/lib/docker/cli-plugins/docker-buildx buildx build --no-cache -t aixcc-afc/integration-test:latest --file /tmp/directed-fuzzing-agent/e3874c99-b2e7-47f7-b87e-c402f7dfac08/3193595df22795a20f2455d96302870933cf7f8332180fdec662f6abc508b363_extracted/fuzz-tooling/projects/integration-test/Dockerfile /tmp/directed-fuzzing-agent/e3874c99-b2e7-47f7-b87e-c402f7dfac08/3193595df22795a20f2455d96302870933cf7f8332180fdec662f6abc508b363_extracted/fuzz-tooling/projects/integration-test",
            "/usr/local/lib/docker/cli-plugins/docker-buildx buildx build --no-cache -t aixcc-afc/libpng:latest --file /tmp/directed-fuzzing-agent/2f13505b-9d01-40b6-9ff0-3e3d557e6d87/35f4622d1818d692b3de8073dc2bf573c71bf0f63b0b543a64e945c8a5dc73bf_extracted/fuzz-tooling/projects/libpng/Dockerfile /tmp/directed-fuzzing-agent/2f13505b-9d01-40b6-9ff0-3e3d557e6d87/35f4622d1818d692b3de8073dc2bf573c71bf0f63b0b543a64e945c8a5dc73bf_extracted/fuzz-tooling/projects/libpng",
            "/usr/local/lib/docker/cli-plugins/docker-buildx buildx build -t gcr.io/oss-fuzz/example-libpng --file /home/dw/ai_scratch/address_269fba41-a400-4804-ba78-f0319bd53c67/fuzz-tooling/oss-fuzz/projects/example-libpng/Dockerfile /home/dw/ai_scratch/address_269fba41-a400-4804-ba78-f0319bd53c67/fuzz-tooling/oss-fuzz/projects/example-libpng",
            "tar"
          ],
          "type": "string"
        },
        "container": {
          "custom_type": "object",
          "examples": [
            {
              "createdAt": "2025-05-08T04:20:10Z",
              "id": "1145b8bc9b9e21c793c3eb9c743aaa66e32432080b3bff70ac46612047c832e5",
              "image": {
                "ref": ""
              },
              "runtime": {
                "name": "io.containerd.runc.v2"
              },
              "snapshotter": {
                "name": ""
              },
              "updatedAt": "2025-05-08T04:20:10Z"
            },
            {
              "id": "0ac38d047d713d2fda1507529e22f2c8d42821f216464b092f2dfaeab16357d8"
            },
            {
              "id": "5843cf889bd48b8b2b5dd5ad7d4f83c4a0d6f0f41b00355c691219d1750c5664"
            },
            {
              "id": "5b30a030574a96777a4ca56382f4232c23ad2efd11a9247571ce1178d09969a1",
              "image": {
                "ref": ""
              },
              "runtime": {
                "name": "io.containerd.runc.v2"
              },
              "snapshotter": {
                "name": ""
              }
            },
            {
              "id": "7331d1b62d8ffe7c093a317e5a423f79edd2743def61df92a6d622cacab900d3",
              "name": "/loving_hawking"
            }
          ],
          "properties": {
            "container": {
              "custom_type": "string",
              "examples": [
                "artifacts",
                "sources",
                "submissions"
              ],
              "type": "string"
            },
            "createdAt": {
              "custom_type": "string",
              "examples": [
                "2025-05-06T18:40:24Z",
                "2025-06-05T04:33:05Z",
                "2025-06-07T03:04:40Z",
                "2025-06-26T16:28:15Z",
                "2025-07-01T22:37:23Z"
              ],
              "type": "string"
            },
            "id": {
              "custom_type": "string",
              "examples": [
                "3830076bb10bbc847c2939b26dd7ec67fdbca269a21db404a331a511d512e41d",
                "592a10cafbbdd1de915713eff5f578911b9dee8b70b10dbbf5f7560b86873b6c",
                "96049a90fa70061b5c83f2122ce4be70e3863fff8db73e6a2d45971773123096",
                "b1fc452eb4df59ea41072a13079bf7b15a1307040fbc2aa888e01940a189bf0b",
                "c22e5dbc0905b78d82e0e80c69c24994c5c7e959fb69eeda61246826f7f9cc47"
              ],
              "type": "string"
            },
            "image": {
              "custom_type": "object",
              "examples": [
                {
                  "ref": ""
                }
              ],
              "properties": {
                "ref": {
                  "custom_type": "string",
                  "examples": [
                    ""
                  ],
                  "type": "string"
                }
              },
              "required": [
                "ref"
              ],
              "type": "object"
            },
            "name": {
              "custom_type": "string",
              "examples": [
                "/crs-directed-11b1a2cd-bee8-4978-b22f-db8a5c472324",
                "/happy_johnson",
                "/quirky_bose",
                "crs-directed-9859f1b6-5bd3-404c-99a9-57638473c389",
                "zen_wing"
              ],
              "type": "string"
            },
            "runtime": {
              "custom_type": "object",
              "examples": [
                {
                  "name": "io.containerd.runc.v2"
                }
              ],
              "properties": {
                "name": {
                  "custom_type": "string",
                  "examples": [
                    "io.containerd.runc.v2"
                  ],
                  "type": "string"
                }
              },
              "required": [
                "name"
              ],
              "type": "object"
            },
            "snapshotter": {
              "custom_type": "object",
              "examples": [
                {
                  "name": ""
                }
              ],
              "properties": {
                "name": {
                  "custom_type": "string",
                  "examples": [
                    ""
                  ],
                  "type": "string"
                }
              },
              "required": [
                "name"
              ],
              "type": "object"
            },
            "updatedAt": {
              "custom_type": "string",
              "examples": [
                "2025-05-06T19:12:30Z",
                "2025-06-07T03:05:42Z",
                "2025-06-07T13:21:11Z",
                "2025-06-28T22:47:45Z",
                "2025-07-01T07:33:09Z"
              ],
              "type": "string"
            }
          },
          "required": [],
          "type": "object"
        },
        "context": {
          "custom_type": "string",
          "examples": [
            "/crs_scratch/2025-04-02-1700-251013123/2D21A837-170D-44CB-B06F-052E27484883/FUZZBOMB1/2D21A837-170D-44CB-B06F-052E27484883/fuzz-tooling/projects/libpng",
            "/crs_scratch/delta-workspace/address_7f116769-0c4b-48cd-8c99-cc64aa9e1905/fuzz-tooling/fuzz-tooling/projects/apache-commons-compress",
            "/node_data/crs_scratch/seedgen-5g3sdoua/0196b135-56ae-7985-aaff-75dd224eab92-c180f4ef-65d8-43-o2t900dg/fuzz-tooling/fuzz-tooling/projects/integration-test",
            "/shared/patchery/tmp.b4iAepYKdm/oss-fuzz/projects/libxml2",
            "/shellphish/libs/crs-utils/src/shellphish_crs_utils/oss_fuzz/instrumentation/jazzer"
          ],
          "type": "string"
        },
        "contextName": {
          "custom_type": "string",
          "examples": [
            "bundle",
            "job",
            "patch",
            "pov",
            "task"
          ],
          "type": "string"
        },
        "crashExpected": {
          "custom_type": "bool",
          "examples": [
            false,
            true,
            false,
            false,
            true
          ],
          "type": "boolean"
        },
        "crs": {
          "custom_type": "object",
          "examples": [
            {
              "action": {
                "category": "Wed Apr  2 17:15:14 CDT 2025",
                "name": "end"
              }
            },
            {
              "action": {
                "category": "fuzzing",
                "harness": "CompressSevenZFuzzer",
                "name": "crs-java:llmfuzzaug"
              }
            },
            {
              "action": {
                "category": "pov_generation",
                "name": "runPOVPhase0"
              },
              "phase": {
                "number": 0,
                "pov_success": false,
                "timeout_minutes": 802
              },
              "round": {
                "number": 3
              }
            },
            {
              "action": {
                "category": "static_analysis",
                "code": {
                  "file": "",
                  "function_name": "",
                  "fuzzy": false,
                  "type_name": "BinaryRC4Decryptor"
                },
                "name": "get_types_with_codequery"
              },
              "instance": {
                "id": "3bcea601cee2f1711cb9"
              }
            },
            {
              "action": {
                "name": "crs_task.launch_task"
              }
            }
          ],
          "properties": {
            "action": {
              "custom_type": "object",
              "examples": [
                {
                  "category": "Wed Apr  2 17:15:06 CDT 2025",
                  "name": "end"
                },
                {
                  "category": "basic_fuzzing"
                },
                {
                  "category": "patch_generation",
                  "name": "call_llm"
                },
                {
                  "category": "scoring_submission",
                  "name": "pov_submission_response",
                  "timestamp": {
                    "current": 1743600702.629633,
                    "start": 1743600702.629625
                  }
                },
                {
                  "category": "fuzzing",
                  "name": "test123"
                }
              ],
              "properties": {
                "category": {
                  "custom_type": "string",
                  "examples": [
                    "Wed Apr  2 17:15:01 CDT 2025",
                    "advanced_fuzzing",
                    "advanced_phases",
                    "fuzzzing",
                    "telemetry_init"
                  ],
                  "type": "string"
                },
                "code": {
                  "custom_type": "object",
                  "examples": [
                    {
                      "file": "",
                      "function_name": "",
                      "fuzzy": false,
                      "type_name": "ArArchiveInputStream"
                    },
                    {
                      "file": "/shared/dyva/oss_fuzz/tmp.R4WwtTthZB/projects/libpng/artifacts/built_src/libpng/pngrtran.c",
                      "lines": "4356,4357,4358,4359,4360"
                    },
                    {
                      "file": "container_src_dir/src/poi/poi-examples/src/main/java/org/apache/poi/examples/hwpf/Word2Forrest.java",
                      "function_name": "closeBody",
                      "fuzzy": false,
                      "lines": "157"
                    },
                    {
                      "file": "tests/data/test1119"
                    },
                    {
                      "file": "vuln.c"
                    }
                  ],
                  "properties": {
                    "container_path": {
                      "custom_type": "string",
                      "type": "string"
                    },
                    "file": {
                      "custom_type": "string",
                      "examples": [
                        "/src/libxml2/fuzz/fuzz.c",
                        "DataTree.java",
                        "container_src_dir/src/poi/poi/src/main/java/org/apache/poi/poifs/crypt/DataSpaceMapUtils.java",
                        "tests/data/test1119",
                        "vuln.c"
                      ],
                      "type": "string"
                    },
                    "function_name": {
                      "custom_type": "string",
                      "examples": [
                        "",
                        "<init>",
                        "shell_check_oom",
                        "toPath",
                        "unique"
                      ],
                      "type": "string"
                    },
                    "fuzzy": {
                      "custom_type": "bool",
                      "examples": [
                        false,
                        true
                      ],
                      "type": "boolean"
                    },
                    "lines": {
                      "custom_type": "string",
                      "examples": [
                        "",
                        "101",
                        "416",
                        "53",
                        "70"
                      ],
                      "type": "string"
                    },
                    "type_name": {
                      "custom_type": "string",
                      "examples": [
                        "AUTODETECT_REQ_PDU",
                        "BitInputStream",
                        "PackageParser",
                        "TLV",
                        "buf"
                      ],
                      "type": "string"
                    }
                  },
                  "required": [
                    "file"
                  ],
                  "type": "object"
                },
                "effort": {
                  "custom_type": "object",
                  "examples": [
                    {
                      "weight": 1
                    },
                    {
                      "weight": 1
                    },
                    {
                      "weight": 1
                    },
                    {
                      "weight": 1
                    },
                    {
                      "weight": 1
                    }
                  ],
                  "properties": {
                    "weight": {
                      "custom_type": "int8",
                      "examples": [
                        1,
                        1,
                        1,
                        1,
                        1
                      ],
                      "excludeMaximum": 1,
                      "minimum": 1,
                      "type": "number"
                    }
                  },
                  "required": [
                    "weight"
                  ],
                  "type": "object"
                },
                "gen_ai": {
                  "custom_type": "object",
                  "examples": [
                    {
                      "id": "chatcmpl-BfnK5LvgaaZk8qHf9p7K2tpOw6h9L"
                    },
                    {
                      "id": "chatcmpl-BfzJAsvL60EZUQXqG9ullEo1ylLzX"
                    },
                    {
                      "id": "chatcmpl-Bfz4tglIfs863GiypvGwzS71sLkEl"
                    },
                    {
                      "id": "chatcmpl-BfcBnYtHi1yYPR3xJjvWHkavIPQdZ"
                    },
                    {
                      "id": "e6324728-f5eb-4909-9f59-2e2e6a0999f5"
                    }
                  ],
                  "properties": {
                    "id": {
                      "custom_type": "string",
                      "examples": [
                        "chatcmpl-BfnK5LvgaaZk8qHf9p7K2tpOw6h9L",
                        "chatcmpl-BfzJAsvL60EZUQXqG9ullEo1ylLzX",
                        "chatcmpl-Bfz4tglIfs863GiypvGwzS71sLkEl",
                        "chatcmpl-BfcBnYtHi1yYPR3xJjvWHkavIPQdZ",
                        "e6324728-f5eb-4909-9f59-2e2e6a0999f5"
                      ],
                      "type": "string"
                    }
                  },
                  "required": [
                    "id"
                  ],
                  "type": "object"
                },
                "harness": {
                  "custom_type": "string",
                  "examples": [
                    "",
                    "ArchiverArFuzzer",
                    "api",
                    "crl",
                    "fuzz-json"
                  ],
                  "type": "string"
                },
                "mode": {
                  "custom_type": "string",
                  "examples": [
                    "full",
                    "mini",
                    "mcp",
                    "mini",
                    "mcp"
                  ],
                  "type": "string"
                },
                "model": {
                  "custom_type": "string",
                  "examples": [
                    "claude-4-sonnet",
                    "o4-mini",
                    "o4-mini",
                    "o4-mini",
                    "claude-4-sonnet"
                  ],
                  "type": "string"
                },
                "name": {
                  "custom_type": "string",
                  "examples": [
                    "(:ADDRESS :AFL #<OSS-FUZZ-TASK 10>)",
                    "analyze_vuln_report",
                    "blah!",
                    "end",
                    "reverser-cms_postscript_fuzzer"
                  ],
                  "type": "string"
                },
                "result": {
                  "custom_type": "object",
                  "properties": {
                    "path": {
                      "custom_type": "string",
                      "type": "string"
                    }
                  },
                  "required": [
                    "path"
                  ],
                  "type": "object"
                },
                "target": {
                  "custom_type": "object",
                  "examples": [
                    {
                      "bug": {
                        "id": 100056,
                        "trigger": "/src/libxml2/fuzz/api.c in LLVMFuzzerTestOneInput",
                        "type": "double-free"
                      },
                      "harness": "api",
                      "name": "libxml2",
                      "sanitizer": "ASAN"
                    },
                    {
                      "bug_type": "Unknown",
                      "harness": "fuzz_vuln",
                      "sanitizer": "address"
                    },
                    {
                      "engine": "libfuzzer",
                      "harness": "html",
                      "sanitizer": "address"
                    },
                    {
                      "harness": "fuzz-json"
                    },
                    {
                      "harness": "reader"
                    }
                  ],
                  "properties": {
                    "bug": {
                      "custom_type": "object",
                      "examples": [
                        {
                          "id": 100549,
                          "trigger": "/src/libxml2/tree.c:2447:9 in xmlNewReference",
                          "type": "heap-use-after-free"
                        },
                        {
                          "id": 352691
                        },
                        {
                          "id": 359090,
                          "trigger": "/src/libxml2/fuzz/api.c:439:9 in setStr",
                          "type": "double-free"
                        },
                        {
                          "id": 457550,
                          "trigger": "/src/libpng/pngrutil.c:1447:10 in OSS_FUZZ_png_handle_iCCP",
                          "type": "dynamic-stack-buffer-overflow"
                        },
                        {
                          "id": 5806
                        }
                      ],
                      "properties": {
                        "id": {
                          "custom_type": "int32",
                          "examples": [
                            30339,
                            317672,
                            320829,
                            857016,
                            499923
                          ],
                          "excludeMaximum": 864801,
                          "minimum": 1,
                          "type": "number"
                        },
                        "trigger": {
                          "custom_type": "string",
                          "examples": [
                            "(/lib/x86_64-linux-gnu/libc.so.6+0x4300b) (BuildId: 0323ab4806bee6f846d9ad4bccfc29afdca49a58) in raise",
                            "/src/libpng/pngrutil.c:1447:10 in OSS_FUZZ_png_handle_iCCP",
                            "/src/libxml2/fuzz/api.c in LLVMFuzzerTestOneInput",
                            "/src/libpng/pngrutil.c:1447:10 in OSS_FUZZ_png_handle_iCCP",
                            "(/lib/x86_64-linux-gnu/libc.so.6+0x4300b) (BuildId: 0323ab4806bee6f846d9ad4bccfc29afdca49a58) in raise"
                          ],
                          "type": "string"
                        },
                        "type": {
                          "custom_type": "string",
                          "examples": [
                            "double-free",
                            "ABRT",
                            "double-free",
                            "dynamic-stack-buffer-overflow",
                            "ABRT"
                          ],
                          "type": "string"
                        }
                      },
                      "required": [
                        "id"
                      ],
                      "type": "object"
                    },
                    "bug_type": {
                      "custom_type": "string",
                      "examples": [
                        "AddressSanitizer: heap-buffer-overflow",
                        "Unknown"
                      ],
                      "type": "string"
                    },
                    "engine": {
                      "custom_type": "string",
                      "examples": [
                        "libfuzzer"
                      ],
                      "type": "string"
                    },
                    "filetypes": {
                      "custom_type": "string",
                      "type": "string"
                    },
                    "harness": {
                      "custom_type": "string",
                      "examples": [
                        "ExpanderFuzzer",
                        "cms",
                        "decoder",
                        "fuzz",
                        "html"
                      ],
                      "type": "string"
                    },
                    "harnesses": {
                      "custom_type": "string",
                      "type": "string"
                    },
                    "name": {
                      "custom_type": "string",
                      "examples": [
                        "curl",
                        "integration-test",
                        "libxml2",
                        "sqlite3",
                        "tika"
                      ],
                      "type": "string"
                    },
                    "sanitizer": {
                      "custom_type": "string",
                      "examples": [
                        "ASAN",
                        "JAZZER",
                        "UBSAN",
                        "memory",
                        "undefined"
                      ],
                      "type": "string"
                    },
                    "sanitizers": {
                      "custom_type": "string",
                      "type": "string"
                    }
                  },
                  "required": [],
                  "type": "object"
                },
                "timestamp": {
                  "custom_type": "object",
                  "examples": [
                    {
                      "current": 1743552572.806227,
                      "start": 1743552572.8062193
                    },
                    {
                      "current": 1743783475.015126,
                      "start": 1743783475.0151236
                    },
                    {
                      "current": 1743697806.2817175,
                      "start": 1743697806.2817116
                    },
                    {
                      "current": 1746810176.8745584,
                      "start": 1746810176.874555
                    },
                    {
                      "current": 1746500751.6679096,
                      "start": 1746500751.6679022
                    }
                  ],
                  "properties": {
                    "current": {
                      "custom_type": "float64",
                      "examples": [
                        1743552572.806227,
                        1743783475.015126,
                        1743697806.2817175,
                        1746810176.8745584,
                        1746500751.6679096
                      ],
                      "type": "number"
                    },
                    "start": {
                      "custom_type": "float64",
                      "examples": [
                        1743552572.8062193,
                        1743783475.0151236,
                        1743697806.2817116,
                        1746810176.874555,
                        1746500751.6679022
                      ],
                      "type": "number"
                    }
                  },
                  "required": [
                    "current",
                    "start"
                  ],
                  "type": "object"
                }
              },
              "required": [],
              "type": "object"
            },
            "budget": {
              "custom_type": "object",
              "examples": [
                {
                  "total_hours": -378.9166666666667,
                  "working_hours": 1.0
                },
                {
                  "total_hours": 23.933333333333334,
                  "working_hours": 23.916666666666668
                },
                {
                  "total_hours": 23.95,
                  "working_hours": 23.933333333333334
                },
                {
                  "total_hours": 0.9833333333333333,
                  "working_hours": 0.9666666666666667
                },
                {
                  "total_hours": 0.03333333333333333,
                  "working_hours": 0.016666666666666666
                }
              ],
              "properties": {
                "total_hours": {
                  "custom_type": "float64",
                  "examples": [
                    -378.9166666666667,
                    23.933333333333334,
                    23.95,
                    0.9833333333333333,
                    0.03333333333333333
                  ],
                  "type": "number"
                },
                "working_hours": {
                  "custom_type": "float64",
                  "examples": [
                    0.8833333333333333,
                    23.916666666666668,
                    23.933333333333334,
                    0.9666666666666667,
                    0.016666666666666666
                  ],
                  "type": "number"
                }
              },
              "required": [
                "total_hours",
                "working_hours"
              ],
              "type": "object"
            },
            "debug": {
              "custom_type": "object",
              "examples": [
                {
                  "bug_desc": "The vulnerability is an infinite loop in the MessageTracker.countExtraColons method in MessageTracker.java. When counting extra colons in an IPv6 address verification, the method has a critical flaw where it repeatedly calls indexOf(':') without an offset, causing it to always find the first colon in the string. This creates an infinite loop when i > 0 because i never changes. The bug was introduced in the IPv6 verification code that was added in the diff.\n:Trigger conditions: The bug is triggered by providing an input string containing colons (like \"::::::::::::::::\") to the MessageTracker.dumpToLog method, which then calls verifyIPv6 and subsequently countExtraColons. The infinite loop occurs in countExtraColons when processing this input, leading to a timeout after 25 seconds.",
                  "bug_id": 5,
                  "patch_id": "0195fc79-236d-7a73-a02b-99e010f01d58",
                  "pov_id": "0195fc73-a4a6-7575-b503-6edb1d08980c"
                },
                {
                  "build": {
                    "engine": "libfuzzer",
                    "language": "c",
                    "sanitizer": "address",
                    "using_bear": false
                  }
                },
                {
                  "target": {
                    "project": {
                      "name": "freerdp"
                    }
                  }
                },
                {
                  "target": {
                    "project": {
                      "name": "lcms"
                    }
                  }
                },
                {
                  "target": {
                    "project": {
                      "name": "nginx"
                    }
                  }
                }
              ],
              "properties": {
                "bug_desc": {
                  "custom_type": "string",
                  "examples": [
                    "The vulnerability is an infinite loop in the MessageTracker.countExtraColons method in MessageTracker.java. When counting extra colons in an IPv6 address verification, the method has a critical flaw where it repeatedly calls indexOf(':') without an offset, causing it to always find the first colon in the string. This creates an infinite loop when i > 0 because i never changes. The bug was introduced in the IPv6 verification code that was added in the diff.\n:Trigger conditions: The bug is triggered by providing an input string containing colons (like \"::::::::::::::::\") to the MessageTracker.dumpToLog method, which then calls verifyIPv6 and subsequently countExtraColons. The infinite loop occurs in countExtraColons when processing this input, leading to a timeout after 25 seconds.",
                    "Use-after-stack-variable bug in htmlSecureComment when processing percent-encoded characters. The function takes the address of a stack variable and uses it after the variable goes out of scope.\nTrigger conditions: HTML comment content containing a percent-encoded sequence that represents an ASCII letter or digit (e.g. %41 for 'A')"
                  ],
                  "type": "string"
                },
                "bug_id": {
                  "custom_type": "int8",
                  "examples": [
                    5,
                    8,
                    7,
                    6,
                    5
                  ],
                  "excludeMaximum": 8,
                  "minimum": 1,
                  "type": "number"
                },
                "build": {
                  "custom_type": "object",
                  "examples": [
                    {
                      "engine": "libfuzzer",
                      "language": "c",
                      "sanitizer": "address",
                      "using_bear": true
                    },
                    {
                      "engine": "libfuzzer",
                      "language": "c",
                      "sanitizer": "memory",
                      "using_bear": false
                    },
                    {
                      "engine": "libfuzzer",
                      "language": "c",
                      "sanitizer": "undefined",
                      "using_bear": false
                    },
                    {
                      "engine": "libfuzzer",
                      "language": "jvm",
                      "sanitizer": "coverage",
                      "using_bear": false
                    },
                    {}
                  ],
                  "properties": {
                    "engine": {
                      "custom_type": "string",
                      "examples": [
                        "libfuzzer"
                      ],
                      "type": "string"
                    },
                    "language": {
                      "custom_type": "string",
                      "examples": [
                        "c",
                        "jvm"
                      ],
                      "type": "string"
                    },
                    "sanitizer": {
                      "custom_type": "string",
                      "examples": [
                        "address",
                        "coverage",
                        "memory",
                        "undefined"
                      ],
                      "type": "string"
                    },
                    "using_bear": {
                      "custom_type": "bool",
                      "examples": [
                        false,
                        true
                      ],
                      "type": "boolean"
                    }
                  },
                  "required": [],
                  "type": "object"
                },
                "bundle_id": {
                  "custom_type": "uint8",
                  "examples": [
                    15,
                    15,
                    18,
                    83,
                    19
                  ],
                  "excludeMaximum": 150,
                  "minimum": 6,
                  "type": "number"
                },
                "bundle_sub_id": {
                  "custom_type": "uuid",
                  "examples": [
                    "01974788-78e9-731f-bfb4-36f3894866f2",
                    "01974788-78e9-731f-bfb4-36f3894866f2",
                    "01974788-78e9-731f-bfb4-36f3894866f2",
                    "0197b145-1f86-712b-b817-a3ede8e71d43"
                  ],
                  "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                  "type": "string"
                },
                "patch_id": {
                  "custom_type": "string",
                  "examples": [
                    "0195fc79-236d-7a73-a02b-99e010f01d58",
                    "01974788-76a6-7b1b-ba10-b715b94a6468",
                    "01974be1-4629-76dd-9084-5c6c9b7c4e82",
                    "0197b67b-5e20-710a-8c80-354a55df7a91",
                    "77"
                  ],
                  "type": "string"
                },
                "pov_id": {
                  "custom_type": "string",
                  "examples": [
                    "0195fc73-a4a6-7575-b503-6edb1d08980c",
                    "21",
                    "019747b0-5eb5-7cc5-97c0-87086968372b",
                    "1013",
                    "428"
                  ],
                  "type": "string"
                },
                "pruned_diff_size": {
                  "custom_type": "uint16",
                  "excludeMaximum": 40967,
                  "minimum": 363,
                  "type": "number"
                },
                "raw_diff_size": {
                  "custom_type": "int32",
                  "excludeMaximum": 1112451,
                  "minimum": 445,
                  "type": "number"
                },
                "target": {
                  "custom_type": "object",
                  "examples": [
                    {
                      "num_harnesses": 11
                    },
                    {
                      "project": {
                        "name": "apache-commons-compress"
                      }
                    },
                    {
                      "project": {
                        "name": "nginx"
                      }
                    },
                    {
                      "project": {
                        "name": "systemd"
                      }
                    },
                    {
                      "project": {
                        "name": "zookeeper"
                      }
                    }
                  ],
                  "properties": {
                    "num_harnesses": {
                      "custom_type": "int8",
                      "examples": [
                        11,
                        9,
                        9
                      ],
                      "excludeMaximum": 17,
                      "minimum": 0,
                      "type": "number"
                    },
                    "project": {
                      "custom_type": "object",
                      "examples": [
                        {
                          "name": "dropbear"
                        },
                        {
                          "name": "lcms"
                        },
                        {
                          "name": "nginx"
                        },
                        {
                          "name": "systemd"
                        },
                        {
                          "name": "zookeeper"
                        }
                      ],
                      "properties": {
                        "name": {
                          "custom_type": "string",
                          "examples": [
                            "apache-commons-compress",
                            "libexif",
                            "nginx",
                            "systemd",
                            "zookeeper"
                          ],
                          "type": "string"
                        }
                      },
                      "required": [
                        "name"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [],
                  "type": "object"
                },
                "vuln_desc": {
                  "custom_type": "string",
                  "examples": [
                    "Unsafe deserialization via ObjectInputStream.readObject in verifyDataIntegrity when a single ACL entry has Id(\"aixcc\",\"jazzer\") and verifyCxids returns true, causing the Jazzer deserialization sanitizer to fire and crash.",
                    "Unsafe deserialization via ObjectInputStream.readObject in verifyDataIntegrity when a single ACL entry has Id(\"aixcc\",\"jazzer\") and verifyCxids returns true, causing the Jazzer deserialization sanitizer to fire and crash.",
                    "The handleLink method will fetch any HTTP URL from the playlist by invoking TikaInputStream.get(new URL(...)) without validating the host, scheme beyond \u201chttp\u201d, or enforcing timeouts, exposing a Server-Side Request Forgery (SSRF) vulnerability.",
                    "The bug is caused by an assertion in curl_multi_remove_handle that checks GOOD_EASY_HANDLE(data), but the fuzz harness cleans up the easy handle before removing it from the multi handle, causing data->magic to be invalid and the assertion to fire.",
                    "Lack of proper initialization of encoder state when handling UTF-32 BOM-less sequences in UTF32ToUTF8 leads to reads of uninitialized memory when converting UTF-32 content to UTF-8. The encoder is invoked without raw buffer initialization, causing xmlParserInputBufferGrow to call xmlCharEncInput on uninitialized data."
                  ],
                  "type": "string"
                },
                "vuln_id": {
                  "custom_type": "uint8",
                  "excludeMaximum": 172,
                  "minimum": 24,
                  "type": "number"
                }
              },
              "required": [],
              "type": "object"
            },
            "instance": {
              "custom_type": "object",
              "examples": [
                {
                  "id": "3bcea601cee2f1711cb9"
                },
                {
                  "id": "3bcea601cee2f1711cb9"
                },
                {
                  "id": "3bcea601cee2f1711cb9"
                },
                {
                  "id": "3bcea601cee2f1711cb9"
                },
                {
                  "id": "3bcea601cee2f1711cb9"
                }
              ],
              "properties": {
                "id": {
                  "custom_type": "string",
                  "examples": [
                    "3bcea601cee2f1711cb9",
                    "3bcea601cee2f1711cb9",
                    "3bcea601cee2f1711cb9",
                    "3bcea601cee2f1711cb9",
                    "3bcea601cee2f1711cb9"
                  ],
                  "type": "string"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            },
            "patch": {
              "custom_type": "object",
              "examples": [
                {
                  "success": false
                },
                {
                  "success": true
                }
              ],
              "properties": {
                "success": {
                  "custom_type": "bool",
                  "examples": [
                    false,
                    true
                  ],
                  "type": "boolean"
                }
              },
              "required": [
                "success"
              ],
              "type": "object"
            },
            "phase": {
              "custom_type": "object",
              "examples": [
                {
                  "number": 0,
                  "pov_success": false,
                  "timeout_minutes": 1
                },
                {
                  "number": 1,
                  "pov_success": true,
                  "timeout_minutes": 570
                },
                {
                  "number": 2,
                  "pov_success": true,
                  "timeout_minutes": 573
                },
                {
                  "number": 3,
                  "pov_success": false,
                  "timeout_minutes": 1
                },
                {
                  "number": 3,
                  "pov_success": false,
                  "timeout_minutes": 24
                }
              ],
              "properties": {
                "number": {
                  "custom_type": "int8",
                  "examples": [
                    0,
                    1,
                    2,
                    3
                  ],
                  "excludeMaximum": 3,
                  "minimum": 0,
                  "type": "number"
                },
                "pov_success": {
                  "custom_type": "bool",
                  "examples": [
                    false,
                    true
                  ],
                  "type": "boolean"
                },
                "timeout_minutes": {
                  "custom_type": "uint16",
                  "examples": [
                    1,
                    284,
                    288,
                    574,
                    1148
                  ],
                  "excludeMaximum": 63868,
                  "minimum": 1,
                  "type": "number"
                }
              },
              "required": [
                "number",
                "pov_success",
                "timeout_minutes"
              ],
              "type": "object"
            },
            "pov": {
              "custom_type": "object",
              "examples": [
                {
                  "success": false
                },
                {
                  "success": true
                },
                {
                  "success": false
                },
                {
                  "success": false
                },
                {
                  "success": true
                }
              ],
              "properties": {
                "success": {
                  "custom_type": "bool",
                  "examples": [
                    false,
                    true,
                    false,
                    false,
                    true
                  ],
                  "type": "boolean"
                }
              },
              "required": [
                "success"
              ],
              "type": "object"
            },
            "result": {
              "custom_type": "object",
              "examples": [
                {
                  "patch_success": false,
                  "pov_success": false
                },
                {
                  "patch_success": false,
                  "pov_success": false
                },
                {
                  "patch_success": false,
                  "pov_success": false
                },
                {
                  "patch_success": false,
                  "pov_success": false
                },
                {
                  "patch_success": false,
                  "pov_success": true
                }
              ],
              "properties": {
                "patch_success": {
                  "custom_type": "bool",
                  "examples": [
                    false,
                    false,
                    false,
                    false,
                    false
                  ],
                  "type": "boolean"
                },
                "pov_success": {
                  "custom_type": "bool",
                  "examples": [
                    false,
                    false,
                    false,
                    false,
                    true
                  ],
                  "type": "boolean"
                }
              },
              "required": [
                "patch_success",
                "pov_success"
              ],
              "type": "object"
            },
            "round": {
              "custom_type": "object",
              "examples": [
                {
                  "number": 1323
                },
                {
                  "number": 1
                },
                {
                  "number": 54
                },
                {
                  "number": 982
                },
                {
                  "number": 3
                }
              ],
              "properties": {
                "number": {
                  "custom_type": "int16",
                  "examples": [
                    1,
                    435,
                    442,
                    788,
                    1332
                  ],
                  "excludeMaximum": 1337,
                  "minimum": 1,
                  "type": "number"
                }
              },
              "required": [
                "number"
              ],
              "type": "object"
            },
            "success": {
              "custom_type": "bool",
              "examples": [
                false,
                true,
                false,
                false,
                true
              ],
              "type": "boolean"
            },
            "target": {
              "custom_type": "object",
              "examples": [
                {
                  "harness": "valid"
                },
                {
                  "harness": "ossfuzz"
                },
                {
                  "harness": "schema"
                },
                {
                  "harness": "fuzz_url"
                },
                {
                  "harness": "TestFuzzCommonAssistanceHexStringToBin"
                }
              ],
              "properties": {
                "harness": {
                  "custom_type": "string",
                  "examples": [
                    "valid",
                    "ossfuzz",
                    "schema",
                    "fuzz_url",
                    "TestFuzzCommonAssistanceHexStringToBin"
                  ],
                  "type": "string"
                }
              },
              "required": [
                "harness"
              ],
              "type": "object"
            }
          },
          "required": [],
          "type": "object"
        },
        "data": {
          "custom_type": "object",
          "examples": [
            {
              "allowedLanguages": "[\"c\", \"java\"]",
              "focus": "round-exhibition2-commons-compress",
              "repoDir": "/dind-shared/repo-1943021682"
            },
            {
              "architecture": "x86_64",
              "engine": "libfuzzer",
              "fuzzToolingDir": "/dind-shared/repo-1116526888",
              "harness": "exif_loader_fuzzer",
              "projectName": "libexif",
              "resultContext": "delta_test_base_repo",
              "sanitizer": "memory"
            },
            {
              "architecture": "x86_64",
              "focus": "round-gpdev-wireshark",
              "fuzzToolingDir": "/dind-shared/repo-1483982778",
              "projectName": "wireshark",
              "repoDir": "/dind-shared/repo-627604235"
            },
            {
              "focus": "round-final-phase2-pdfbox",
              "projectName": "pdfbox",
              "repoDir": "/dind-shared/repo-2297972094"
            },
            {
              "focus": "round-exhibition3-curl",
              "projectName": "curl",
              "repoDir": "/dind-shared/repo-1111687556"
            }
          ],
          "properties": {
            "allowedLanguages": {
              "custom_type": "string",
              "examples": [
                "[\"c\", \"java\"]",
                "[\"c\", \"java\"]",
                "[\"c\", \"java\"]",
                "[\"c\", \"java\"]",
                "[\"c\",\"java\"]"
              ],
              "type": "string"
            },
            "architecture": {
              "custom_type": "string",
              "examples": [
                "x86_64",
                "x86_64",
                "x86_64",
                "x86_64",
                "x86_64"
              ],
              "type": "string"
            },
            "engine": {
              "custom_type": "string",
              "examples": [
                "libfuzzer",
                "libfuzzer",
                "libfuzzer",
                "libfuzzer",
                "libfuzzer"
              ],
              "type": "string"
            },
            "focus": {
              "custom_type": "string",
              "examples": [
                "dev-libxml2",
                "round-exhibition3-dropbear",
                "round-exhibition3-libpng",
                "round-final-phase2-pdfbox",
                "round-gpdev-wireshark"
              ],
              "type": "string"
            },
            "fuzzToolingDir": {
              "custom_type": "string",
              "examples": [
                "/dind-shared/repo-1029148427",
                "/dind-shared/repo-3736733866",
                "/dind-shared/repo-1559969693",
                "/dind-shared/repo-890389055",
                "/dind-shared/repo-2174474267"
              ],
              "type": "string"
            },
            "harness": {
              "custom_type": "string",
              "examples": [
                "customfuzz3",
                "reader",
                "html",
                "MessageTrackerPeekReceivedFuzzer",
                "json_fuzz"
              ],
              "type": "string"
            },
            "projectName": {
              "custom_type": "string",
              "examples": [
                "freerdp",
                "lcms",
                "shadowsocks",
                "sqlite3",
                "xz"
              ],
              "type": "string"
            },
            "repoDir": {
              "custom_type": "string",
              "examples": [
                "/dind-shared/repo-1088111605",
                "/dind-shared/repo-2297972094",
                "/dind-shared/repo-2755578794",
                "/dind-shared/repo-2924952047",
                "/dind-shared/repo-3611341863"
              ],
              "type": "string"
            },
            "resultContext": {
              "custom_type": "string",
              "examples": [
                "pov_test_head_repo",
                "delta_test_base_repo",
                "pov_test_head_repo",
                "delta_test_base_repo",
                "pov_test_head_repo"
              ],
              "type": "string"
            },
            "sanitizer": {
              "custom_type": "string",
              "examples": [
                "memory",
                "undefined",
                "address",
                "memory",
                "undefined"
              ],
              "type": "string"
            }
          },
          "required": [],
          "type": "object"
        },
        "db": {
          "custom_type": "object",
          "examples": [
            {
              "collection": {
                "name": "auth"
              },
              "operation": {
                "name": "select"
              },
              "query": {
                "summary": "select auth",
                "text": "SELECT * FROM \"auth\" WHERE \"auth\".\"id\" = '249c2ba2-db69-4914-99b8-c44e1df9b00f' ORDER BY \"auth\".\"id\" LIMIT 1"
              },
              "rows_affected": 1,
              "system": {
                "name": "postgresql"
              }
            },
            {
              "collection": {
                "name": "job"
              },
              "operation": {
                "name": "update"
              },
              "query": {
                "summary": "update job",
                "text": "UPDATE \"job\" SET \"status\"='failed' WHERE id = '019746e7-63ff-7702-9104-ccff7c28a955' RETURNING *"
              },
              "rows_affected": 1,
              "system": {
                "name": "postgresql"
              }
            },
            {
              "collection": {
                "name": "pov_submission"
              },
              "operation": {
                "name": "update"
              },
              "query": {
                "summary": "update pov_submission",
                "text": "UPDATE \"pov_submission\" SET \"status\"='failed' WHERE id = '01974d6d-fa38-7327-a8e7-9e5dbe095094' RETURNING *"
              },
              "rows_affected": 1,
              "system": {
                "name": "postgresql"
              }
            },
            {
              "operation": {
                "name": "select"
              },
              "query": {
                "text": "SELECT EXISTS (SELECT 1 FROM pov_submission WHERE pov_submission.id = '0197ae77-d0fc-7025-86cb-25988f93fcf6' AND pov_submission.submitter_id = '3020f48e-8999-4a3e-a238-afe4d187a566' AND pov_submission.task_id = '0197ae62-564a-7c5a-8929-28d27cc08a7e') AND EXISTS (SELECT 1 FROM patch_submission WHERE patch_submission.id = '0197aebe-f127-7571-b0b7-78f600b37469' AND patch_submission.submitter_id = '3020f48e-8999-4a3e-a238-afe4d187a566' AND patch_submission.task_id = '0197ae62-564a-7c5a-8929-28d27cc08a7e');"
              },
              "system": {
                "name": "postgresql"
              }
            },
            {
              "collection": {
                "name": "task"
              },
              "operation": {
                "name": "select"
              },
              "query": {
                "summary": "select task",
                "text": "SELECT * FROM \"task\" WHERE \"task\".\"id\" = '24984a3b-6e6e-4da0-8f10-a0654b1261bf' ORDER BY \"task\".\"id\" LIMIT 1"
              },
              "rows_affected": 0,
              "system": {
                "name": "postgresql"
              }
            }
          ],
          "properties": {
            "collection": {
              "custom_type": "object",
              "examples": [
                {
                  "name": "auth"
                },
                {
                  "name": "job"
                },
                {
                  "name": "patch_submission"
                },
                {
                  "name": "pov_submission"
                },
                {
                  "name": "task"
                }
              ],
              "properties": {
                "name": {
                  "custom_type": "string",
                  "examples": [
                    "auth",
                    "job",
                    "patch_submission",
                    "pov_submission",
                    "task"
                  ],
                  "type": "string"
                }
              },
              "required": [
                "name"
              ],
              "type": "object"
            },
            "operation": {
              "custom_type": "object",
              "examples": [
                {
                  "name": "insert"
                },
                {
                  "name": "select"
                },
                {
                  "name": "update"
                }
              ],
              "properties": {
                "name": {
                  "custom_type": "string",
                  "examples": [
                    "insert",
                    "select",
                    "update"
                  ],
                  "type": "string"
                }
              },
              "required": [
                "name"
              ],
              "type": "object"
            },
            "query": {
              "custom_type": "object",
              "examples": [
                {
                  "summary": "insert task",
                  "text": "INSERT INTO \"task\" (\"created_at\",\"updated_at\",\"type\",\"deadline\",\"round_id\",\"source\",\"project_name\",\"focus\",\"unstripped_source\",\"commit\",\"harnesses_included\") VALUES ('2025-06-07 19:00:23.095','2025-06-07 19:00:23.095','delta','2025-06-08 01:00:23.095','exhibition3','[{\"type\":\"repo\",\"url\":\"3609edc9fda807298ac4042c668321d9e3005276db776802b98ffcb9db76d62e\",\"sha256\":\"3609edc9fda807298ac4042c668321d9e3005276db776802b98ffcb9db76d62e\"},{\"type\":\"fuzz-tooling\",\"url\":\"637b28c6f79b2204d7619dda2dab186952b05be1206a5d32fc309ed57f3acfcd\",\"sha256\":\"637b28c6f79b2204d7619dda2dab186952b05be1206a5d32fc309ed57f3acfcd\"},{\"type\":\"diff\",\"url\":\"93948ecfbd7c3297043540ee9bf50749ffbec2fd1f23a57d2351f8ebc2f0b191\",\"sha256\":\"93948ecfbd7c3297043540ee9bf50749ffbec2fd1f23a57d2351f8ebc2f0b191\"}]','tika','round-exhibition3-tika','{\"head_repo\":{\"type\":\"repo\",\"url\":\"d2bc89c20f9d3401662087a251041ee0798cbbabcdb0f35960a56aa3ddb60e4d\",\"sha256\":\"d2bc89c20f9d3401662087a251041ee0798cbbabcdb0f35960a56aa3ddb60e4d\"},\"fuzz_tooling\":{\"type\":\"fuzz-tooling\",\"url\":\"637b28c6f79b2204d7619dda2dab186952b05be1206a5d32fc309ed57f3acfcd\",\"sha256\":\"637b28c6f79b2204d7619dda2dab186952b05be1206a5d32fc309ed57f3acfcd\"},\"base_repo\":{\"type\":\"repo\",\"url\":\"015e88fdbbec5bd8199062881c8d06be81e30633547e7c49baf5d1e3ad49cc77\",\"sha256\":\"015e88fdbbec5bd8199062881c8d06be81e30633547e7c49baf5d1e3ad49cc77\"}}','56729ea95532d2fcea425791f52ce50b155cf584',true) RETURNING \"id\""
                },
                {
                  "summary": "select pov_submission",
                  "text": "SELECT * FROM \"pov_submission\" WHERE \"pov_submission\".\"id\" = '0196a6f4-a6c0-7923-a3c5-7e5180ce7da5' ORDER BY \"pov_submission\".\"id\" LIMIT 1"
                },
                {
                  "summary": "select task",
                  "text": "SELECT * FROM \"task\" WHERE \"task\".\"id\" = '24984a3b-6e6e-4da0-8f10-a0654b1261bf' ORDER BY \"task\".\"id\" LIMIT 1"
                },
                {
                  "summary": "update job",
                  "text": "UPDATE \"job\" SET \"artifacts\"=CASE WHEN artifacts IS NULL THEN '[]'::jsonb ELSE artifacts END || '[{\"blob\":{\"object_name\":\"5b5182fd06b73ec21eea79438913b51ed60225f7bcedd86979f40ca47d671615\",\"presigned_url\":null},\"archived_file\":\"fuzz.out\",\"filename\":\"/tmp/fuzz.out\",\"context\":\"pov_test_head_repo\"}]'::jsonb,\"updated_at\"='2025-06-05 23:47:22.232' WHERE id = '01974277-c245-79cf-9905-bad1d12a4f5a'"
                },
                {
                  "text": "SELECT EXISTS (SELECT 1 FROM pov_submission WHERE pov_submission.id = '0197ae77-d0fc-7025-86cb-25988f93fcf6' AND pov_submission.submitter_id = '3020f48e-8999-4a3e-a238-afe4d187a566' AND pov_submission.task_id = '0197ae62-564a-7c5a-8929-28d27cc08a7e') AND EXISTS (SELECT 1 FROM patch_submission WHERE patch_submission.id = '0197aebe-f127-7571-b0b7-78f600b37469' AND patch_submission.submitter_id = '3020f48e-8999-4a3e-a238-afe4d187a566' AND patch_submission.task_id = '0197ae62-564a-7c5a-8929-28d27cc08a7e');"
                }
              ],
              "properties": {
                "summary": {
                  "custom_type": "string",
                  "examples": [
                    "insert patch_submission",
                    "select job",
                    "select task",
                    "update job",
                    "update patch_submission"
                  ],
                  "type": "string"
                },
                "text": {
                  "custom_type": "string",
                  "examples": [
                    "INSERT INTO \"auth\" (\"created_at\",\"updated_at\",\"token\",\"note\",\"active\",\"permissions\",\"id\") VALUES ('2025-05-06 02:34:35.966','2025-05-06 02:34:35.966','$argon2id$v=19$m=65536,t=1,p=8$BO1Sc2gyr7BbfIXxPjf3IQ$sUEGQnmAV4eehaSeE5vfhEVIqneVVVC+er+pXXJhI+w','jeffc',true,'{\"crs\":false,\"competition_management\":false,\"job_runner\":true}','7e0b09cd-a4bb-4550-9697-8548ca35c71f'),('2025-05-06 02:34:35.966','2025-05-06 02:34:35.966','$argon2id$v=19$m=65536,t=1,p=8$Hhj5W+W/b2kzAjycayvdrA$EfLHPi2Mm+2egzLV8v5Y2HhYNhBrkg1vDAKBidR4P98','Mock CRS',true,'{\"crs\":true,\"competition_management\":false,\"job_runner\":false}','7ee03a69-3592-416d-a9e3-660ade899a0c') ON CONFLICT (\"id\") DO UPDATE SET \"updated_at\"='2025-05-06 02:34:35.966',\"token\"=\"excluded\".\"token\",\"note\"=\"excluded\".\"note\",\"active\"=\"excluded\".\"active\",\"permissions\"=\"excluded\".\"permissions\" RETURNING \"id\"",
                    "SELECT * FROM \"job\" WHERE \"job\".\"id\" = '019741d2-a94f-733b-bf3c-994687585ab0' ORDER BY \"job\".\"id\" LIMIT 1",
                    "SELECT * FROM \"task\" WHERE \"task\".\"id\" = '0197b620-9d16-797d-8f9d-0d36e20ac111' ORDER BY \"task\".\"id\" LIMIT 1",
                    "UPDATE \"job\" SET \"results\"=CASE WHEN results IS NULL THEN '[]'::jsonb ELSE results END || '{\"cmd\":[\"./run_pov.sh\",\"-x\",\"-a\",\"x86_64\",\"-p\",\"libpng\",\"-o\",\"/dind-shared/repo-4157262882/fuzz-tooling\",\"-f\",\"libpng_read_fuzzer\",\"-e\",\"libfuzzer\",\"-s\",\"address\",\"-b\",\"/dind-shared/file-3885008156\",\"-n\",\"-t\",\"1800\"],\"stdout_blob\":{\"object_name\":\"d32da740f75019a95f768668e280b0b6088ee361e2c9331494ab4b4c2af6caab\",\"presigned_url\":null},\"stderr_blob\":{\"object_name\":\"1ffb199969cba3794ef464ebe9160b7a46a73d263b5b029b13604a00804b92a8\",\"presigned_url\":null},\"return_code\":0,\"context\":\"pov_test_head_repo\"}'::jsonb,\"updated_at\"='2025-06-05 19:32:49.83' WHERE id = '01974191-68ab-7dc7-ab2d-6c168e93e21b'",
                    "UPDATE \"pov_submission\" SET \"created_at\"='2025-05-06 23:12:11.498',\"updated_at\"='2025-05-06 23:14:19.379',\"submitter_id\"='3020f48e-8999-4a3e-a238-afe4d187a566',\"task_id\"='0196a6df-366d-7498-8a04-02b96ea4b18b',\"testcase_path\"='dc3e0fcbdeb7c22594b8b8dde940b9b8bceb1a4bde64cf3f210259390b54e30f',\"fuzzer_name\"='xpath',\"sanitizer\"='address',\"architecture\"='x86_64',\"status\"='passed',\"engine\"='libfuzzer' WHERE \"id\" = '0196a7de-feeb-7242-b9f9-d4d66f03257f'"
                  ],
                  "type": "string"
                }
              },
              "required": [
                "text"
              ],
              "type": "object"
            },
            "rows_affected": {
              "custom_type": "int8",
              "examples": [
                0,
                1
              ],
              "excludeMaximum": 12,
              "minimum": 0,
              "type": "number"
            },
            "system": {
              "custom_type": "object",
              "examples": [
                {
                  "name": "postgresql"
                }
              ],
              "properties": {
                "name": {
                  "custom_type": "string",
                  "examples": [
                    "postgresql"
                  ],
                  "type": "string"
                }
              },
              "required": [
                "name"
              ],
              "type": "object"
            }
          },
          "required": [
            "operation",
            "query",
            "system"
          ],
          "type": "object"
        },
        "deadline": {
          "custom_type": "float64",
          "examples": [
            1746383576000.0,
            1749395857659.0,
            1751468173218.0,
            1749279519.0,
            1751384475.0
          ],
          "type": "number"
        },
        "deadline_ms": {
          "custom_type": "int64",
          "examples": [
            1751120112464
          ],
          "excludeMaximum": 1751554695332,
          "minimum": 1746507207371,
          "type": "number"
        },
        "deployment": {
          "custom_type": "object",
          "examples": [
            {
              "environment": "default"
            },
            {
              "environment": "lax@pixel-phantom-fb0.ea13ojtfz2pupc1wxyq5kwp2og.bx.internal.cloudapp.net"
            },
            {
              "environment": "lax@pixel-phantom.dxrvwelpwjde1pnezrmm1xgzyf.bx.internal.cloudapp.net"
            },
            {
              "environment": "lax@pixel-phantom.ea13ojtfz2pupc1wxyq5kwp2og.bx.internal.cloudapp.net"
            },
            {
              "environment": "musliner@fivespice0"
            }
          ],
          "properties": {
            "environment": {
              "custom_type": "string",
              "examples": [
                "default",
                "lax@pixel-phantom-fb0.ea13ojtfz2pupc1wxyq5kwp2og.bx.internal.cloudapp.net",
                "lax@pixel-phantom.ea13ojtfz2pupc1wxyq5kwp2og.bx.internal.cloudapp.net",
                "lax@pixel-phantom.ihjrbmf3pv0ehfwzjxxv0xrryd.bx.internal.cloudapp.net",
                "mpelican@lacrosse-1.sift.net"
              ],
              "type": "string"
            }
          },
          "required": [
            "environment"
          ],
          "type": "object"
        },
        "detected_language": {
          "custom_type": "string",
          "examples": [
            "java",
            "c",
            "c",
            "c",
            "java"
          ],
          "type": "string"
        },
        "diff": {
          "custom_type": "string",
          "examples": [
            "diff --git a/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java b/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java\nindex 0bc1ac0..b0b6e10 100644\n--- a/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java\n+++ b/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveEntry.java\n@@ -1564,8 +1564,81 @@ public class TarArchiveEntry implements ArchiveEntry, TarConstants, EntryStreamO\n      */\n     private void processPaxHeader(final String key, final String val, final Map<String, String> headers) throws IOException {\n         /*\n-         * This function is currently just a stub, and needs implemented.\n+         * The following headers are defined for Pax. charset: cannot use these without changing TarArchiveEntry fields mtime atime ctime\n+         * LIBARCHIVE.creationtime comment gid, gname linkpath size uid,uname SCHILY.devminor, SCHILY.devmajor: don't have setters/getters for those\n+         *\n+         * GNU sparse files use additional members, we use GNU.sparse.size to detect the 0.0 and 0.1 versions and GNU.sparse.realsize for 1.0.\n+         *\n+         * star files use additional members of which we use SCHILY.filetype in order to detect star sparse files.\n+         *\n+         * If called from addExtraPaxHeader, these additional headers must be already present .\n          */\n+        switch (key) {\n+        case \"path\":\n+            setName(val);\n+            break;\n+        case \"linkpath\":\n+            setLinkName(val);\n+            break;\n+        case \"gid\":\n+            setGroupId(ParsingUtils.parseLongValue(val));\n+            break;\n+        case \"gname\":\n+            setGroupName(val);\n+            break;\n+        case \"uid\":\n+            setUserId(ParsingUtils.parseLongValue(val));\n+            break;\n+        case \"uname\":\n+            setUserName(val);\n+            break;\n+        case \"size\":\n+            final long size = ParsingUtils.parseLongValue(val);\n+            if (size < 0) {\n+                throw new IOException(\"Corrupted TAR archive. Entry size is negative\");\n+            }\n+            setSize(size);\n+            break;\n+        case \"mtime\":\n+            setLastModifiedTime(FileTime.from(parseInstantFromDecimalSeconds(val)));\n+            break;\n+        case \"atime\":\n+            setLastAccessTime(FileTime.from(parseInstantFromDecimalSeconds(val)));\n+            break;\n+        case \"ctime\":\n+            setStatusChangeTime(FileTime.from(parseInstantFromDecimalSeconds(val)));\n+            break;\n+        case \"LIBARCHIVE.creationtime\":\n+            setCreationTime(FileTime.from(parseInstantFromDecimalSeconds(val)));\n+            break;\n+        case \"SCHILY.devminor\":\n+            final int devMinor = ParsingUtils.parseIntValue(val);\n+            if (devMinor < 0) {\n+                throw new IOException(\"Corrupted TAR archive. Dev-Minor is negative\");\n+            }\n+            setDevMinor(devMinor);\n+            break;\n+        case \"SCHILY.devmajor\":\n+            final int devMajor = ParsingUtils.parseIntValue(val);\n+            if (devMajor < 0) {\n+                throw new IOException(\"Corrupted TAR archive. Dev-Major is negative\");\n+            }\n+            setDevMajor(devMajor);\n+            break;\n+        case TarGnuSparseKeys.SIZE:\n+            fillGNUSparse0xData(headers);\n+            break;\n+        case TarGnuSparseKeys.REALSIZE:\n+            fillGNUSparse1xData(headers);\n+            break;\n+        case \"SCHILY.filetype\":\n+            if (\"sparse\".equals(val)) {\n+                fillStarSparseData(headers);\n+            }\n+            break;\n+        default:\n+            extraPaxHeaders.put(key, val);\n+        }\n     }\n \n     private void readFileMode(final Path file, final String normalizedName, final LinkOption... options) throws IOException {\n",
            "diff --git a/.gitignore b/.gitignore\nindex 55768f6..afc0724 100644\n--- a/.gitignore\n+++ b/.gitignore\n@@ -2,6 +2,7 @@\n #\n # SPDX-License-Identifier: curl\n \n+curl-install/*\n *.asc\n *.dll\n *.exe\ndiff --git a/include/curl/curl.h b/include/curl/curl.h\nindex 1883558..e3af00c 100644\n--- a/include/curl/curl.h\n+++ b/include/curl/curl.h\n@@ -1078,6 +1078,7 @@ typedef CURLSTScode (*curl_hstswrite_callback)(CURL *easy,\n #define CURLPROTO_SMBS   (1<<27)\n #define CURLPROTO_MQTT   (1<<28)\n #define CURLPROTO_GOPHERS (1<<29)\n+#define CURLPROTO_VERYNORMAL (1<<30)\n #define CURLPROTO_ALL    (~0) /* enable everything */\n \n /* long may be 32 or 64 bits, but we should never depend on anything else\ndiff --git a/lib/Makefile.inc b/lib/Makefile.inc\nindex 1d3f69a..70c313e 100644\n--- a/lib/Makefile.inc\n+++ b/lib/Makefile.inc\n@@ -235,6 +235,7 @@ LIB_CFILES =         \\\n   urlapi.c           \\\n   version.c          \\\n   version_win32.c    \\\n+  verynormalprotocol.c \\\n   warnless.c         \\\n   ws.c\n \ndiff --git a/lib/url.c b/lib/url.c\nindex 436edd8..cc5fd01 100644\n--- a/lib/url.c\n+++ b/lib/url.c\n@@ -119,6 +119,7 @@\n #include \"altsvc.h\"\n #include \"dynbuf.h\"\n #include \"headers.h\"\n+#include \"verynormalprotocol.h\"\n \n /* The last 3 #include files should be in this order */\n #include \"curl_printf.h\"\n@@ -1600,6 +1601,8 @@ const struct Curl_handler *Curl_getn_scheme_handler(const char *scheme,\n     NULL,\n #endif\n   };\n+  if(strcmp(scheme, \"verynormalprotocol\") == 0)\n+    return &Curl_handler_verynormalprotocol;\n \n   if(len && (len <= 7)) {\n     const char *s = scheme;\ndiff --git a/lib/urldata.h b/lib/urldata.h\nindex 704fb7a..3a02c14 100644\n--- a/lib/urldata.h\n+++ b/lib/urldata.h\n@@ -52,6 +52,7 @@\n #define PORT_RTMPS PORT_HTTPS\n #define PORT_GOPHER 70\n #define PORT_MQTT 1883\n+#define PORT_VERYNORMAL 6666\n \n struct curl_trc_featt;\n \ndiff --git a/lib/verynormalprotocol.c b/lib/verynormalprotocol.c\nnew file mode 100644\nindex 0000000..6b53dc3\n--- /dev/null\n+++ b/lib/verynormalprotocol.c\n@@ -0,0 +1,152 @@\n+\n+/***************************************************************************\n+ *                                  _   _ ____  _\n+ *  Project                     ___| | | |  _ \\| |\n+ *                             / __| | | | |_) | |\n+ *                            | (__| |_| |  _ <| |___\n+ *                             \\___|\\___/|_| \\_\\_____|\n+ *\n+ * Copyright (C) Daniel Stenberg, <daniel@haxx.se>, et al.\n+ *\n+ * This software is licensed as described in the file COPYING, which\n+ * you should have received as part of this distribution. The terms\n+ * are also available at https://curl.se/docs/copyright.html.\n+ *\n+ * You may opt to use, copy, modify, merge, publish, distribute and/or sell\n+ * copies of the Software, and permit persons to whom the Software is\n+ * furnished to do so, under the terms of the COPYING file.\n+ *\n+ * This software is distributed on an \"AS IS\" basis, WITHOUT WARRANTY OF ANY\n+ * KIND, either express or implied.\n+ *\n+ * SPDX-License-Identifier: curl\n+ *\n+ ***************************************************************************/\n+\n+/*\n+ * The \"verynormalprotocol\" is a basic protocol\n+ * intended to test Curls basic functionality.\n+ * Currently, it is very simple and only does one thing:\n+ * Checks to see if a server sends\n+ * \"crashycrashy\" immediately after connecting.\n+ * If it does, the transaction returns CURLE_OK.\n+ * Otherwise, it returns CURLE_WEIRD_SERVER_REPLY.\n+*/\n+#include \"curl_setup.h\"\n+\n+#ifdef HAVE_NETINET_IN_H\n+#include <netinet/in.h>\n+#endif\n+#ifdef HAVE_NETDB_H\n+#include <netdb.h>\n+#endif\n+#ifdef HAVE_ARPA_INET_H\n+#include <arpa/inet.h>\n+#endif\n+#ifdef HAVE_NET_IF_H\n+#include <net/if.h>\n+#endif\n+#ifdef HAVE_SYS_IOCTL_H\n+#include <sys/ioctl.h>\n+#endif\n+\n+#ifdef HAVE_SYS_PARAM_H\n+#include <sys/param.h>\n+#endif\n+\n+#ifdef HAVE_SYS_SELECT_H\n+#include <sys/select.h>\n+#elif defined(HAVE_UNISTD_H)\n+#include <unistd.h>\n+#endif\n+\n+#include \"urldata.h\"\n+#include <curl/curl.h>\n+#include \"transfer.h\"\n+#include \"sendf.h\"\n+#include \"escape.h\"\n+#include \"progress.h\"\n+#include \"verynormalprotocol.h\"\n+#include \"curl_printf.h\"\n+#include \"strcase.h\"\n+#include \"curl_memory.h\"\n+/* The last #include file should be: */\n+#include \"memdebug.h\"\n+#include \"curl_md5.h\"\n+\n+/*\n+ * Forward declarations.\n+ */\n+\n+static CURLcode verynormalprotocol_do(struct Curl_easy *data, bool *done);\n+static CURLcode verynormalprotocol_doing(struct Curl_easy *data, bool *done);\n+\n+/*\n+ * verynormalprotocol protocol handler.\n+ */\n+\n+const struct Curl_handler Curl_handler_verynormalprotocol = {\n+  \"verynormalprotocol\",                             /* scheme */\n+  ZERO_NULL,                    /* setup_connection */\n+  verynormalprotocol_do,                            /* do_it */\n+  ZERO_NULL,                          /* done */\n+  ZERO_NULL,                          /* do_more */\n+  ZERO_NULL,                          /* connect_it */\n+  ZERO_NULL,                          /* connecting */\n+  verynormalprotocol_doing,                         /* doing */\n+  ZERO_NULL,                          /* proto_getsock */\n+  ZERO_NULL,                       /* doing_getsock */\n+  ZERO_NULL,                          /* domore_getsock */\n+  ZERO_NULL,                          /* perform_getsock */\n+  ZERO_NULL,                          /* disconnect */\n+  ZERO_NULL,                          /* write_resp */\n+  ZERO_NULL,                          /* write_resp_hd */\n+  ZERO_NULL,                          /* connection_check */\n+  ZERO_NULL,                          /* attach connection */\n+  PORT_VERYNORMAL,                          /* defport */\n+  CURLPROTO_VERYNORMAL,                     /* protocol */\n+  CURLPROTO_VERYNORMAL,                     /* family */\n+  PROTOPT_NONE                        /* flags */\n+};\n+\n+static CURLcode verynormalprotocol_do(struct Curl_easy *data, bool *done)\n+{\n+  *done = FALSE; /* unconditionally */\n+\n+  return CURLE_OK;\n+}\n+\n+static CURLcode verynormalprotocol_doing(struct Curl_easy *data, bool *done)\n+{\n+  CURLcode result = CURLE_WEIRD_SERVER_REPLY;\n+  ssize_t nread;\n+  char response[128];\n+\n+  *done = FALSE;\n+\n+  /* Read the response from the server. If we see the correct \"heartbeat\",\n+     we should complete the transaction and return CURLE_OK. */\n+  do {\n+    result = Curl_xfer_recv(data, response, 128, &nread);\n+  } while(result == CURLE_AGAIN);\n+  if(result)\n+    return result;\n+  else if(!nread) {\n+    failf(data, \"Connection disconnected\");\n+    *done = TRUE;\n+    result = CURLE_RECV_ERROR;\n+  }\n+  else if(strcasecmp(response, \"crashycrashy\") == 0) {\n+    *done = TRUE;\n+    *(unsigned int *)result = CURLE_OK;\n+  }\n+  else {\n+    *done = TRUE;\n+    result = CURLE_WEIRD_SERVER_REPLY;\n+  }\n+\n+  if(result == CURLE_AGAIN)\n+    result = CURLE_OK;\n+  return result;\n+}\n+\ndiff --git a/lib/verynormalprotocol.h b/lib/verynormalprotocol.h\nnew file mode 100644\nindex 0000000..cc48592\n--- /dev/null\n+++ b/lib/verynormalprotocol.h\n@@ -0,0 +1,39 @@\n+\n+#ifndef HEADER_CURL_VERYNORMALPROTOCOL_H\n+#define HEADER_CURL_VERYNORMALPROTOCOL_H\n+/***************************************************************************\n+ *                                  _   _ ____  _\n+ *  Project                     ___| | | |  _ \\| |\n+ *                             / __| | | | |_) | |\n+ *                            | (__| |_| |  _ <| |___\n+ *                             \\___|\\___/|_| \\_\\_____|\n+ *\n+ * Copyright (C) Daniel Stenberg, <daniel@haxx.se>, et al.\n+ *\n+ * This software is licensed as described in the file COPYING, which\n+ * you should have received as part of this distribution. The terms\n+ * are also available at https://curl.se/docs/copyright.html.\n+ *\n+ * You may opt to use, copy, modify, merge, publish, distribute and/or sell\n+ * copies of the Software, and permit persons to whom the Software is\n+ * furnished to do so, under the terms of the COPYING file.\n+ *\n+ * This software is distributed on an \"AS IS\" basis, WITHOUT WARRANTY OF ANY\n+ * KIND, either express or implied.\n+ *\n+ * SPDX-License-Identifier: curl\n+ *\n+ ***************************************************************************/\n+\n+#ifndef CURL_DISABLE_VERYNORMALPROTOCOL\n+extern const struct Curl_handler Curl_handler_verynormalprotocol;\n+enum verynormalprotocolstate {\n+    VERYNORMALPROTOCOL_START,\n+    VERYNORMALPROTOCOL_DO\n+};\n+struct verynormalprotocol_conn {\n+    enum verynormalprotocolstate state;\n+};\n+#endif\n+\n+#endif /* HEADER_CURL_VERYNORMALPROTOCOL_H */\ndiff --git a/src/tool_help.c b/src/tool_help.c\nindex 57b14a3..e803b7e 100644\n--- a/src/tool_help.c\n+++ b/src/tool_help.c\n@@ -360,6 +360,7 @@ void tool_version_info(void)\n       }\n #endif /* !CURL_DISABLE_IPFS */\n     }\n+    puts(\" verynormalprotocol\");\n     puts(\"\"); /* newline */\n   }\n   if(feature_names[0]) {\ndiff --git a/src/tool_libinfo.c b/src/tool_libinfo.c\nindex f6053e8..46568eb 100644\n--- a/src/tool_libinfo.c\n+++ b/src/tool_libinfo.c\n@@ -41,6 +41,7 @@ const char * const *built_in_protos = &no_protos;\n size_t proto_count = 0;\n \n const char *proto_file = NULL;\n+const char *proto_verynormal = NULL;\n const char *proto_ftp = NULL;\n const char *proto_ftps = NULL;\n const char *proto_http = NULL;\n@@ -59,6 +60,7 @@ static struct proto_name_tokenp {\n   const char  **proto_tokenp;\n } const possibly_built_in[] = {\n   { \"file\",     &proto_file  },\n+  { \"verynormalprotocol\",     &proto_verynormal  },\n   { \"ftp\",      &proto_ftp   },\n   { \"ftps\",     &proto_ftps  },\n   { \"http\",     &proto_http  },\ndiff --git a/tests/data/Makefile.am b/tests/data/Makefile.am\nindex 776b593..42d564a 100644\n--- a/tests/data/Makefile.am\n+++ b/tests/data/Makefile.am\n@@ -135,7 +135,7 @@ test979 test980 test981 test982 test983 test984 test985 test986 test987 \\\n test988 test989 test990 test991 test992 test993 test994 test995 test996 \\\n test997 test998 test999 test1000 test1001 test1002 test1003 test1004    \\\n test1005 test1006 test1007 test1008 test1009 test1010 test1011 test1012 \\\n-test1013 test1014 test1015 test1016 test1017 test1018 test1019 test1020 \\\n+test1014 test1015 test1016 test1017 test1018 test1019 test1020 \\\n test1021 test1022 test1023 test1024 test1025 test1026 test1027 test1028 \\\n test1029 test1030 test1031 test1032 test1033 test1034 test1035 test1036 \\\n test1037 test1038 test1039 test1040 test1041 test1042 test1043 test1044 \\\n@@ -148,13 +148,13 @@ test1085 test1086 test1087 test1088 test1089 test1090 test1091 test1092 \\\n test1093 test1094 test1095 test1096 test1097 test1098 test1099 test1100 \\\n test1101 test1102 test1103 test1104 test1105 test1106 test1107 test1108 \\\n test1109 test1110 test1111 test1112 test1113 test1114 test1115 test1116 \\\n-test1117 test1118 test1119 test1120 test1121 test1122 test1123 test1124 \\\n+test1117 test1118 test1120 test1121 test1122 test1123 test1124 \\\n test1125 test1126 test1127 test1128 test1129 test1130 test1131 test1132 \\\n test1133 test1134 test1135 test1136 test1137 test1138 test1139 test1140 \\\n test1141 test1142 test1143 test1144 test1145 test1146 test1147 test1148 \\\n test1149 test1150 test1151 test1152 test1153 test1154 test1155 test1156 \\\n test1157 test1158 test1159 test1160 test1161 test1162 test1163 test1164 \\\n-test1165 test1166 test1167 test1168 test1169 test1170 test1171 test1172 \\\n+test1166 test1167 test1168 test1169 test1170 test1171 test1172 \\\n test1173 test1174 test1175 test1176 test1177 test1178 test1179 test1180 \\\n test1181 test1182 test1183 test1184 test1185 test1186 test1187 test1188 \\\n test1189 test1190 test1190 test1191 test1192 test1193 test1194 test1195 \\\n@@ -268,7 +268,7 @@ test3008 test3009 test3010 test3011 test3012 test3013 test3014 test3015 \\\n test3016 test3017 test3018 test3019 test3020 test3021 test3022 test3023 \\\n test3024 test3025 test3026 test3027 test3028 test3029 test3030 test3031 \\\n \\\n-test3100 test3101 test3102 test3103 \\\n+test3100 test3101 test3102 test3103 test11442 \\\n test3200 \\\n test3201 test3202 test3203 test3204 test3205 test3207\n \ndiff --git a/tests/data/test1013 b/tests/data/test1013\ndeleted file mode 100644\nindex 87e99cd..0000000\n--- a/tests/data/test1013\n+++ /dev/null\n@@ -1,37 +0,0 @@\n-<testcase>\n-<info>\n-<keywords>\n-curl-config\n-</keywords>\n-</info>\n-\n-#\n-# Server-side\n-<reply>\n-</reply>\n-\n-#\n-# Client-side\n-<client>\n-<server>\n-none\n-</server>\n-<name>\n-Compare curl --version with curl-config --protocols\n-</name>\n-<command>\n---version\n-</command>\n-</client>\n-\n-#\n-# Verify data after the test has been \"shot\"\n-<verify>\n-<postcheck>\n-%SRCDIR/libtest/test%TESTNUMBER.pl ../curl-config %LOGDIR/stdout%TESTNUMBER protocols\n-</postcheck>\n-<errorcode>\n-0\n-</errorcode>\n-</verify>\n-</testcase>\ndiff --git a/tests/data/test1119 b/tests/data/test1119\ndeleted file mode 100644\nindex 1a73439..0000000\n--- a/tests/data/test1119\n+++ /dev/null\n@@ -1,30 +0,0 @@\n-<testcase>\n-<info>\n-<keywords>\n-source analysis\n-symbols-in-versions\n-</keywords>\n-</info>\n-\n-#\n-# Client-side\n-<client>\n-<server>\n-none\n-</server>\n-\n-<name>\n-Verify that symbols-in-versions and headers are in sync\n-</name>\n-\n-<command type=\"perl\">\n-%SRCDIR/test1119.pl %SRCDIR/.. ../include/curl\n-</command>\n-</client>\n-\n-<verify>\n-<stdout>\n-OK\n-</stdout>\n-</verify>\n-</testcase>\ndiff --git a/tests/data/test11442 b/tests/data/test11442\nnew file mode 100644\nindex 0000000..d9b8ad0\n--- /dev/null\n+++ b/tests/data/test11442\n@@ -0,0 +1,32 @@\n+<testcase>\n+<info>\n+<keywords>\n+verynormalprotocol\n+</keywords>\n+</info>\n+# Server-side\n+<reply>\n+1\n+</reply>\n+\n+# Client-side\n+<client>\n+<server>\n+verynormalprotocol\n+</server>\n+\n+<name>\n+verynormalprotocol test 1\n+</name>\n+<command>\n+verynormalprotocol://%HOSTIP:%VERYNORMALPROTOCOLPORT/asdf\n+</command>\n+</client>\n+\n+# Verify data\n+<verify>\n+<errorcode>\n+8\n+</errorcode>\n+</verify>\n+</testcase>\ndiff --git a/tests/data/test1165 b/tests/data/test1165\ndeleted file mode 100644\nindex 89f02d7..0000000\n--- a/tests/data/test1165\n+++ /dev/null\n@@ -1,25 +0,0 @@\n-<testcase>\n-<info>\n-<keywords>\n-source analysis\n-CURL_DISABLE\n-</keywords>\n-</info>\n-\n-#\n-# Client-side\n-<client>\n-<server>\n-none\n-</server>\n-\n-<name>\n-Verify configure.ac and source code CURL_DISABLE_-sync\n-</name>\n-\n-<command type=\"perl\">\n-%SRCDIR/test1165.pl %SRCDIR/..\n-</command>\n-</client>\n-\n-</testcase>\ndiff --git a/tests/serverhelp.pm b/tests/serverhelp.pm\nindex 22cf30e..dacdb0a 100644\n--- a/tests/serverhelp.pm\n+++ b/tests/serverhelp.pm\n@@ -133,7 +133,7 @@ sub servername_str {\n \n     $proto = uc($proto) if($proto);\n     die \"unsupported protocol: '$proto'\" unless($proto &&\n-        ($proto =~ /^(((FTP|HTTP|HTTP\\/2|HTTP\\/3|IMAP|POP3|GOPHER|SMTP|HTTP-PIPE)S?)|(TFTP|SFTP|SOCKS|SSH|RTSP|HTTPTLS|DICT|SMB|SMBS|TELNET|MQTT))$/));\n+        ($proto =~ /^(((FTP|HTTP|HTTP\\/2|HTTP\\/3|IMAP|POP3|GOPHER|SMTP|HTTP-PIPE)S?)|(TFTP|SFTP|SOCKS|SSH|RTSP|HTTPTLS|DICT|SMB|SMBS|TELNET|MQTT|VERYNORMALPROTOCOL))$/));\n \n     $ipver = (not $ipver) ? 'ipv4' : lc($ipver);\n     die \"unsupported IP version: '$ipver'\" unless($ipver &&\ndiff --git a/tests/servers.pm b/tests/servers.pm\nindex 37519ee..c84efef 100644\n--- a/tests/servers.pm\n+++ b/tests/servers.pm\n@@ -236,7 +236,7 @@ sub init_serverpidfile_hash {\n     }\n   }\n   for my $proto (('tftp', 'sftp', 'socks', 'ssh', 'rtsp', 'httptls',\n-                  'dict', 'smb', 'smbs', 'telnet', 'mqtt')) {\n+                  'dict', 'smb', 'smbs', 'telnet', 'mqtt', 'verynormalprotocol')) {\n     for my $ipvnum ((4, 6)) {\n       for my $idnum ((1, 2)) {\n         my $serv = servername_id($proto, $ipvnum, $idnum);\n@@ -2052,6 +2052,67 @@ sub runsocksserver {\n     return (0, $pid2, $sockspid, $port);\n }\n \n+#######################################################################\n+# start the verynormalprotocol server\n+#\n+sub runverynormalprotocolserver {\n+    my ($verb, $alt) = @_;\n+    my $proto = \"verynormalprotocol\";\n+    my $ip = $HOSTIP;\n+    my $ipvnum = 4;\n+    my $idnum = 1;\n+\n+    if($alt eq \"ipv6\") {\n+        # No IPv6\n+    }\n+\n+    my $server = servername_id($proto, $ipvnum, $idnum);\n+\n+    my $pidfile = $serverpidfile{$server};\n+\n+    # don't retry if the server doesn't work\n+    if ($doesntrun{$pidfile}) {\n+        return (2, 0, 0, 0);\n+    }\n+\n+    my $pid = processexists($pidfile);\n+    if($pid > 0) {\n+        stopserver($server, \"$pid\");\n+    }\n+    unlink($pidfile) if(-f $pidfile);\n+\n+    my $srvrname = servername_str($proto, $ipvnum, $idnum);\n+    my $logfile = server_logfilename($LOGDIR, $proto, $ipvnum, $idnum);\n+\n+    my $flags = \"\";\n+    $flags .= \"--verbose 1 \" if($debugprotocol);\n+    $flags .= \"--pidfile \\\"$pidfile\\\" --logfile \\\"$logfile\\\" \";\n+    $flags .= \"--id $idnum \" if($idnum > 1);\n+    $flags .= \"--srcdir \\\"$srcdir\\\" \";\n+    $flags .= \"--host $HOSTIP\";\n+\n+    my $port = getfreeport($ipvnum);\n+    my $aflags = \"--port $port $flags\";\n+    my $cmd = \"$srcdir/verynormalprotocolserver.py $aflags\";\n+    my ($dictpid, $pid2) = startnew($cmd, $pidfile, 15, 0);\n+\n+    if($dictpid <= 0 || !pidexists($dictpid)) {\n+        # it is NOT alive\n+        stopserver($server, \"$pid2\");\n+        $doesntrun{$pidfile} = 1;\n+        $dictpid = $pid2 = 0;\n+        logmsg \"RUN: failed to start the $srvrname server\\n\";\n+        return (3, 0, 0, 0);\n+    }\n+    $doesntrun{$pidfile} = 0;\n+\n+    if($verb) {\n+        logmsg \"RUN: $srvrname server PID $dictpid port $port\\n\";\n+    }\n+\n+    return (0+!$dictpid, $dictpid, $pid2, $port);\n+}\n+\n #######################################################################\n # start the dict server\n #\n@@ -2946,6 +3007,17 @@ sub startservers {\n                 $run{'http-unix'}=\"$pid $pid2\";\n             }\n         }\n+        elsif($what eq \"verynormalprotocol\") {\n+            if(!$run{'verynormalprotocol'}) {\n+                ($serr, $pid, $pid2, $PORT{\"verynormalprotocol\"}) = runverynormalprotocolserver($verbose, \"\");\n+                if($pid <= 0) {\n+                    return (\"failed starting verynormalprotocol server\", $serr);\n+                }\n+                logmsg sprintf (\"* pid VERYNORMAL => %d %d\\n\", $pid, $pid2)\n+                    if($verbose);\n+                $run{'verynormalprotocol'}=\"$pid $pid2\";\n+            }\n+        }\n         elsif($what eq \"dict\") {\n             if(!$run{'dict'}) {\n                 ($serr, $pid, $pid2, $PORT{\"dict\"}) = rundictserver($verbose, \"\");\n@@ -3079,7 +3151,7 @@ sub subvariables {\n                        'SOCKS',\n                        'SSH',\n                        'TELNET',\n-                       'TFTP', 'TFTP6') {\n+                       'TFTP', 'TFTP6', 'VERYNORMALPROTOCOL') {\n         $port = protoport(lc $proto);\n         $$thing =~ s/${prefix}(?:$proto)PORT/$port/g;\n     }\ndiff --git a/tests/verynormalprotocolserver.py b/tests/verynormalprotocolserver.py\nnew file mode 100755\nindex 0000000..82302cc\n--- /dev/null\n+++ b/tests/verynormalprotocolserver.py\n@@ -0,0 +1,168 @@\n+#!/usr/bin/env python3\n+# -*- coding: utf-8 -*-\n+#***************************************************************************\n+#                                  _   _ ____  _\n+#  Project                     ___| | | |  _ \\| |\n+#                             / __| | | | |_) | |\n+#                            | (__| |_| |  _ <| |___\n+#                             \\___|\\___/|_| \\_\\_____|\n+#\n+# Copyright (C) Daniel Stenberg, <daniel@haxx.se>, et al.\n+#\n+# This software is licensed as described in the file COPYING, which\n+# you should have received as part of this distribution. The terms\n+# are also available at https://curl.se/docs/copyright.html.\n+#\n+# You may opt to use, copy, modify, merge, publish, distribute and/or sell\n+# copies of the Software, and permit persons to whom the Software is\n+# furnished to do so, under the terms of the COPYING file.\n+#\n+# This software is distributed on an \"AS IS\" basis, WITHOUT WARRANTY OF ANY\n+# KIND, either express or implied.\n+#\n+# SPDX-License-Identifier: curl\n+#\n+###########################################################################\n+#\n+\"\"\"verynormalprotocol server.\"\"\"\n+\n+from __future__ import (absolute_import, division, print_function,\n+                        unicode_literals)\n+\n+import argparse\n+import logging\n+import os\n+import sys\n+\n+from util import ClosingFileHandler\n+\n+try:  # Python 2\n+    import SocketServer as socketserver  # type: ignore\n+except ImportError:  # Python 3\n+    import socketserver\n+\n+log = logging.getLogger(__name__)\n+HOST = \"localhost\"\n+\n+# The strings that indicate the test framework is checking our aliveness\n+VERIFIED_REQ = b\"verifiedserver\"\n+VERIFIED_RSP = \"WE ROOLZ: {pid}\"\n+\n+\n+def verynormalprotocolserver(options):\n+    \"\"\"Start up a TCP server with a verynormalprotocol handler and serve very normal requests forever.\"\"\"\n+    if options.pidfile:\n+        pid = os.getpid()\n+        # see tests/server/util.c function write_pidfile\n+        if os.name == \"nt\":\n+            pid += 65536\n+        with open(options.pidfile, \"w\") as f:\n+            f.write(str(pid))\n+\n+    local_bind = (options.host, options.port)\n+    log.info(\"[verynormalprotocol] Listening on %s\", local_bind)\n+\n+    # Need to set the allow_reuse on the class, not on the instance.\n+    socketserver.TCPServer.allow_reuse_address = True\n+    server = socketserver.TCPServer(local_bind, verynormalprotocolHandler)\n+    server.serve_forever()\n+\n+    return ScriptRC.SUCCESS\n+\n+\n+class verynormalprotocolHandler(socketserver.BaseRequestHandler):\n+    \"\"\"Handler class for verynormalprotocol connections.\"\"\"\n+\n+    def handle(self):\n+        try:\n+            print('got connection')\n+            # First, send a response to allow the server to continue.\n+            rsp = \"220 verynormalprotocolserver <xnooptions> <msgid@msgid>\\n\"\n+            self.request.sendall(rsp.encode(\"utf-8\"))\n+            # Receive the request.\n+            data = self.request.recv(1024).strip()\n+            log.debug(\"[DICT] Incoming data: %r\", data)\n+\n+        except IOError:\n+            log.exception(\"[verynormalprotocol] IOError hit during request\")\n+\n+\n+def get_options():\n+    parser = argparse.ArgumentParser()\n+\n+    parser.add_argument(\"--port\", action=\"store\", default=9016,\n+                        type=int, help=\"port to listen on\")\n+    parser.add_argument(\"--host\", action=\"store\", default=HOST,\n+                        help=\"host to listen on\")\n+    parser.add_argument(\"--verbose\", action=\"store\", type=int, default=0,\n+                        help=\"verbose output\")\n+    parser.add_argument(\"--pidfile\", action=\"store\",\n+                        help=\"file name for the PID\")\n+    parser.add_argument(\"--logfile\", action=\"store\",\n+                        help=\"file name for the log\")\n+    parser.add_argument(\"--srcdir\", action=\"store\", help=\"test directory\")\n+    parser.add_argument(\"--id\", action=\"store\", help=\"server ID\")\n+    parser.add_argument(\"--ipv4\", action=\"store_true\", default=0,\n+                        help=\"IPv4 flag\")\n+\n+    return parser.parse_args()\n+\n+\n+def setup_logging(options):\n+    \"\"\"Set up logging from the command line options.\"\"\"\n+    root_logger = logging.getLogger()\n+    add_stdout = False\n+\n+    formatter = logging.Formatter(\"%(asctime)s %(levelname)-5.5s %(message)s\")\n+\n+    # Write out to a logfile\n+    if options.logfile:\n+        handler = ClosingFileHandler(options.logfile)\n+        handler.setFormatter(formatter)\n+        handler.setLevel(logging.DEBUG)\n+        root_logger.addHandler(handler)\n+    else:\n+        # The logfile wasn't specified. Add a stdout logger.\n+        add_stdout = True\n+\n+    if options.verbose:\n+        # Add a stdout logger as well in verbose mode\n+        root_logger.setLevel(logging.DEBUG)\n+        add_stdout = True\n+    else:\n+        root_logger.setLevel(logging.INFO)\n+\n+    if add_stdout:\n+        stdout_handler = logging.StreamHandler(sys.stdout)\n+        stdout_handler.setFormatter(formatter)\n+        stdout_handler.setLevel(logging.DEBUG)\n+        root_logger.addHandler(stdout_handler)\n+\n+\n+class ScriptRC(object):\n+    \"\"\"Enum for script return codes.\"\"\"\n+\n+    SUCCESS = 0\n+    FAILURE = 1\n+    EXCEPTION = 2\n+\n+\n+if __name__ == '__main__':\n+    # Get the options from the user.\n+    options = get_options()\n+\n+    # Setup logging using the user options\n+    setup_logging(options)\n+\n+    # Run main script.\n+    try:\n+        rc = verynormalprotocolserver(options)\n+    except Exception:\n+        log.exception('Error running server')\n+        rc = ScriptRC.EXCEPTION\n+\n+    if options.pidfile and os.path.isfile(options.pidfile):\n+        os.unlink(options.pidfile)\n+\n+    log.info(\"[verynormalprotocol] Returning %d\", rc)\n+    sys.exit(rc)\n",
            "diff --git a/encoding.c b/encoding.c\nindex 7af68b7e..adecdcc6 100644\n--- a/encoding.c\n+++ b/encoding.c\n@@ -108,7 +108,8 @@ static const xmlEncTableEntry xmlEncTable[] = {\n     { \"UTF-16LE\", XML_CHAR_ENCODING_UTF16LE },\n     { \"UTF-8\", XML_CHAR_ENCODING_UTF8 },\n     { \"UTF16\", XML_CHAR_ENCODING_UTF16 },\n-    { \"UTF8\", XML_CHAR_ENCODING_UTF8 }\n+    { \"UTF8\", XML_CHAR_ENCODING_UTF8 },\n+    { \"UTF-32\", XML_CHAR_ENCODING_UTF32 }\n };\n \n static int\n@@ -142,6 +143,7 @@ static int\n UTF8ToUTF16BE(unsigned char* outb, int *outlen,\n               const unsigned char* in, int *inlen, void *vctxt);\n \n+\n #else /* LIBXML_OUTPUT_ENABLED */\n \n #define UTF8ToLatin1 NULL\n@@ -206,7 +208,7 @@ UTF8ToISO8859x(unsigned char *out, int *outlen,\n  * Names should match the IANA registry if possible:\n  * https://www.iana.org/assignments/character-sets/character-sets.xhtml\n  */\n-static const xmlCharEncodingHandler defaultHandlers[31] = {\n+static const xmlCharEncodingHandler defaultHandlers[] = {\n     MAKE_HANDLER(NULL, NULL, NULL), /* NONE */\n     MAKE_HANDLER(\"UTF-8\", UTF8ToUTF8, UTF8ToUTF8),\n     MAKE_HANDLER(\"UTF-16LE\", UTF16LEToUTF8, UTF8ToUTF16LE),\n@@ -238,6 +240,7 @@ static const xmlCharEncodingHandler defaultHandlers[31] = {\n     MAKE_ISO_HANDLER(\"ISO-8859-14\", 14),\n     MAKE_ISO_HANDLER(\"ISO-8859-15\", 15),\n     MAKE_ISO_HANDLER(\"ISO-8859-16\", 16),\n+    MAKE_HANDLER(\"UTF-32\", UTF32ToUTF8, UTF8ToUTF32),\n };\n \n #define NUM_DEFAULT_HANDLERS \\\n@@ -320,6 +323,11 @@ xmlDetectCharEncoding(const unsigned char* in, int len)\n \t    (in[2] == 0xBF))\n \t    return(XML_CHAR_ENCODING_UTF8);\n     }\n+\n+\tif ((in[0] == 0xFF) && (in[1] == 0xFE) && (in[2] == 0x00) && (in[3] == 0x00)) {\n+\t    return(XML_CHAR_ENCODING_UTF32);\n+    }\n+\n     /* For UTF-16 we can recognize by the BOM */\n     if (len >= 2) {\n \tif ((in[0] == 0xFE) && (in[1] == 0xFF))\n@@ -576,6 +584,8 @@ xmlGetCharEncodingName(xmlCharEncoding enc) {\n             return(\"ISO-10646-UCS-4\");\n         case XML_CHAR_ENCODING_UCS4BE:\n             return(\"ISO-10646-UCS-4\");\n+        case XML_CHAR_ENCODING_UTF32:\n+            return(\"UTF-32\");\n         default:\n             break;\n     }\n@@ -2725,3 +2735,185 @@ done:\n \n #endif\n \n+int\n+UTF8ToUTF32(unsigned char *out, int *outlen,\n+              const unsigned char *in, int *inlen,\n+              void *vctxt ATTRIBUTE_UNUSED) {\n+    const unsigned char *instart = in;\n+    const unsigned char *inend;\n+    unsigned char *outstart = out;\n+    unsigned char *outend;\n+    unsigned c, d;\n+    int ret = XML_ENC_ERR_SPACE;\n+    int i, len;\n+    /* UTF32 encoding has no BOM */\n+    if ((out == NULL) || (outlen == NULL) || (inlen == NULL))\n+        return(XML_ENC_ERR_INTERNAL);\n+    if (in == NULL) {\n+\t*outlen = 0;\n+\t*inlen = 0;\n+\treturn(0);\n+    }\n+    inend = in + *inlen;\n+    outend = out + (*outlen & ~1);\n+    while (in < inend) {\n+        c = in[0];\n+\n+        if (c < 0x80) {\n+            if (out >= outend)\n+                break;\n+            out[0] = c;\n+            out[1] = 0;\n+            out[2] = 0;\n+            out[3] = 0;\n+            in += 1;\n+            out += 4;\n+        } else {\n+            unsigned min;\n+            if (c < 0xE0) {\n+                if (c < 0xC2) {\n+                    ret = XML_ENC_ERR_INPUT;\n+                    break;\n+                }\n+                c &= 0x1F;\n+                len = 2;\n+                min = 0x80;\n+            } else if (c < 0xF0) {\n+                c &= 0x0F;\n+                len = 3;\n+                min = 0x800;\n+            } else {\n+                c &= 0x0F;\n+                len = 4;\n+                min = 0x10000;\n+            }\n+\n+            if (inend - in < len)\n+                break;\n+\n+            for (i = 1; i < len; i++) {\n+                if ((in[i] & 0xC0) != 0x80) {\n+                    ret = XML_ENC_ERR_INPUT;\n+                    break;\n+                }\n+                c = (c << 6) | (in[i] & 0x3F);\n+            }\n+\n+            if ((c < min) ||\n+                ((c >= 0xD800) && (c <= 0xDFFF)) ||\n+                (c > 0x10FFFF)) {\n+                ret = XML_ENC_ERR_INPUT;\n+                break;\n+            }\n+\n+            if (c < 0x10000) {\n+                if (out >= outend)\n+                    break;\n+                out[0] = c & 0xFF;\n+                out[1] = c >> 8;\n+                out[2] = 0;\n+                out[3] = 0;\n+                out += 4;\n+            } else {\n+                if (outend - out < 4)\n+                    break;\n+                c -= 0x10000;\n+                d = (c & 0x03FF) | 0xDC00;\n+                c = (c >> 10)    | 0xD800;\n+                out[0] = c & 0xFF;\n+                out[1] = c >> 8;\n+                out[2] = d & 0xFF;\n+                out[3] = d >> 8;\n+                out += 4;\n+            }\n+\n+            in += len;\n+        }\n+    }\n+\n+    if (in-instart > 0)\n+        ret = out - outstart;\n+\n+    *outlen = out - outstart;\n+    *inlen = in - instart;\n+    return(ret);\n+}\n+\n+int\n+UTF32ToUTF8(unsigned char *out, int *outlen,\n+              const unsigned char *in, int *inlen,\n+              void *vctxt ATTRIBUTE_UNUSED) {\n+    const unsigned char *instart = in;\n+    const unsigned char *inend = in + (*inlen & ~1);\n+    unsigned char *outstart = out;\n+    unsigned long int b0, b1, b2, b3, c, d;\n+    int ret = XML_ENC_ERR_SPACE;\n+\n+    if ((in[0] != 0x20) && (in[1] != 0x20) && (in[2] != 0x20) && (in[3] != 0x20)) {\n+        /* bom is managed already */\n+    }\n+\n+\n+    while (in < inend) {\n+        b0 = in[0];\n+        b1 = in[1];\n+        b1 = (b1 << 0x8);\n+        b2 = in[2];\n+        b2 = (b2 << 0x10);\n+        b3 = in[3];\n+        b3 = (b3 << 0x18);\n+        c = b0 | b1 | b2 | b3;\n+\n+        if (c < 0x80) {\n+            out[0] = c;\n+            in += 4;\n+            out += 1;\n+        } else if (c < 0x800) {\n+            out[0] = (c >> 6)   | 0xC0;\n+            out[1] = (c & 0x3F) | 0x80;\n+            in += 4;\n+            out += 2;\n+        } else if ((c & 0xF800) != 0xD800) {\n+            out[0] =  (c >> 12)         | 0xE0;\n+            out[1] = ((c >>  6) & 0x3F) | 0x80;\n+            out[2] =  (c        & 0x3F) | 0x80;\n+            in += 4;\n+            out += 3;\n+        } else {\n+            /* Surrogate pair */\n+            if ((c & 0xFC00) != 0xD800) {\n+                ret = XML_ERR_INTERNAL_ERROR;\n+                break;\n+            }\n+\t        if (inend - in < 4)\n+\t\t        break;\n+            d = in[2] | (in[3] << 8);\n+            if ((d & 0xFC00) != 0xDC00) {\n+                ret = XML_ERR_INTERNAL_ERROR;\n+                break;\n+            }\n+            /*\n+                simplified due to encoding errors encountered with:\n+\n+                c = (c << 10) + d - ((0xD800 << 10) + 0xDC00 - 0x10000);\n+                out[0] =  (c >> 18)         | 0xF0;\n+                out[1] = ((c >> 12) & 0x3F) | 0x80;\n+                out[2] = ((c >>  6) & 0x3F) | 0x80;\n+                out[3] =  (c        & 0x3F) | 0x80;\n+            */\n+            out[0] = c & 0xff;\n+            out[1] = (c >> 8) & 0xff;\n+            out[2] = (c >> 0x10) & 0xff;\n+            out[3] = (c >> 0x18) & 0xff;\n+            in += 4;\n+            out += 4;\n+        }\n+    }\n+\n+    if (in-instart > 0)\n+        ret = out - outstart;\n+\n+    *outlen = out - outstart;\n+    *inlen = in - instart;\n+    return(ret);\n+}\ndiff --git a/include/libxml/encoding.h b/include/libxml/encoding.h\nindex 293fb3f9..858c6761 100644\n--- a/include/libxml/encoding.h\n+++ b/include/libxml/encoding.h\n@@ -74,7 +74,8 @@ typedef enum {\n     XML_CHAR_ENCODING_8859_13=\t27,/* ISO-8859-13 */\n     XML_CHAR_ENCODING_8859_14=\t28,/* ISO-8859-14 */\n     XML_CHAR_ENCODING_8859_15=\t29,/* ISO-8859-15 */\n-    XML_CHAR_ENCODING_8859_16=\t30 /* ISO-8859-16 */\n+    XML_CHAR_ENCODING_8859_16=\t30,/* ISO-8859-16 */\n+    XML_CHAR_ENCODING_UTF32=    31 /* UTF32 native */\n } xmlCharEncoding;\n \n /**\n@@ -263,6 +264,13 @@ XMLPUBFUN int\n XMLPUBFUN int\n \txmlCharEncCloseFunc\t\t(xmlCharEncodingHandler *handler);\n \n+XMLPUBFUN int\n+    UTF32ToUTF8(unsigned char* out, int *outlen,\n+               const unsigned char* inb, int *inlenb, void *vctxt);\n+\n+XMLPUBFUN int\n+    UTF8ToUTF32(unsigned char* out, int *outlen,\n+               const unsigned char* inb, int *inlenb, void *vctxt);\n /*\n  * Export a few useful functions\n  */\ndiff --git a/parserInternals.c b/parserInternals.c\nindex 2aee44f1..88e34b72 100644\n--- a/parserInternals.c\n+++ b/parserInternals.c\n@@ -1446,6 +1446,10 @@ xmlDetectEncoding(xmlParserCtxtPtr ctxt) {\n             if ((in[1] == 0x00) && (in[2] == 0x00) && (in[3] == 0x3C)) {\n                 enc = XML_CHAR_ENCODING_UCS4BE;\n                 autoFlag = XML_INPUT_AUTO_OTHER;\n+            } else if ((in[1] == 0x00) && (in[2] == 0xfe) && (in[3] == 0xff)) {\n+                enc = XML_CHAR_ENCODING_UTF32;\n+                autoFlag = XML_CHAR_ENCODING_UTF32;\n+                bomSize = 4;\n             } else if ((in[1] == 0x3C) && (in[2] == 0x00) && (in[3] == 0x3F)) {\n                 enc = XML_CHAR_ENCODING_UTF16BE;\n                 autoFlag = XML_INPUT_AUTO_UTF16BE;\ndiff --git a/test/XInclude/without-reader/max-recurse.xml b/test/XInclude/without-reader/max-recurse.xml\ndeleted file mode 100644\nindex cfe14bdb..00000000\n--- a/test/XInclude/without-reader/max-recurse.xml\n+++ /dev/null\n@@ -1,104 +0,0 @@\n-<x xmlns:xi=\"http://www.w3.org/2001/XInclude\">\n-<e00><xi:include xpointer=\"xpointer(//e01)\"/></e00>\n-<e01><xi:include xpointer=\"xpointer(//e02)\"/></e01>\n-<e02><xi:include xpointer=\"xpointer(//e03)\"/></e02>\n-<e03><xi:include xpointer=\"xpointer(//e04)\"/></e03>\n-<e04><xi:include xpointer=\"xpointer(//e05)\"/></e04>\n-<e05><xi:include xpointer=\"xpointer(//e06)\"/></e05>\n-<e06><xi:include xpointer=\"xpointer(//e07)\"/></e06>\n-<e07><xi:include xpointer=\"xpointer(//e08)\"/></e07>\n-<e08><xi:include xpointer=\"xpointer(//e09)\"/></e08>\n-<e09><xi:include xpointer=\"xpointer(//e10)\"/></e09>\n-<e10><xi:include xpointer=\"xpointer(//e11)\"/></e10>\n-<e11><xi:include xpointer=\"xpointer(//e12)\"/></e11>\n-<e12><xi:include xpointer=\"xpointer(//e13)\"/></e12>\n-<e13><xi:include xpointer=\"xpointer(//e14)\"/></e13>\n-<e14><xi:include xpointer=\"xpointer(//e15)\"/></e14>\n-<e15><xi:include xpointer=\"xpointer(//e16)\"/></e15>\n-<e16><xi:include xpointer=\"xpointer(//e17)\"/></e16>\n-<e17><xi:include xpointer=\"xpointer(//e18)\"/></e17>\n-<e18><xi:include xpointer=\"xpointer(//e19)\"/></e18>\n-<e19><xi:include xpointer=\"xpointer(//e20)\"/></e19>\n-<e20><xi:include xpointer=\"xpointer(//e21)\"/></e20>\n-<e21><xi:include xpointer=\"xpointer(//e22)\"/></e21>\n-<e22><xi:include xpointer=\"xpointer(//e23)\"/></e22>\n-<e23><xi:include xpointer=\"xpointer(//e24)\"/></e23>\n-<e24><xi:include xpointer=\"xpointer(//e25)\"/></e24>\n-<e25><xi:include xpointer=\"xpointer(//e26)\"/></e25>\n-<e26><xi:include xpointer=\"xpointer(//e27)\"/></e26>\n-<e27><xi:include xpointer=\"xpointer(//e28)\"/></e27>\n-<e28><xi:include xpointer=\"xpointer(//e29)\"/></e28>\n-<e29><xi:include xpointer=\"xpointer(//e30)\"/></e29>\n-<e30><xi:include xpointer=\"xpointer(//e31)\"/></e30>\n-<e31><xi:include xpointer=\"xpointer(//e32)\"/></e31>\n-<e32><xi:include xpointer=\"xpointer(//e33)\"/></e32>\n-<e33><xi:include xpointer=\"xpointer(//e34)\"/></e33>\n-<e34><xi:include xpointer=\"xpointer(//e35)\"/></e34>\n-<e35><xi:include xpointer=\"xpointer(//e36)\"/></e35>\n-<e36><xi:include xpointer=\"xpointer(//e37)\"/></e36>\n-<e37><xi:include xpointer=\"xpointer(//e38)\"/></e37>\n-<e38><xi:include xpointer=\"xpointer(//e39)\"/></e38>\n-<e39><xi:include xpointer=\"xpointer(//e40)\"/></e39>\n-<e40><xi:include xpointer=\"xpointer(//e41)\"/></e40>\n-<e41><xi:include xpointer=\"xpointer(//e42)\"/></e41>\n-<e42><xi:include xpointer=\"xpointer(//e43)\"/></e42>\n-<e43><xi:include xpointer=\"xpointer(//e44)\"/></e43>\n-<e44><xi:include xpointer=\"xpointer(//e45)\"/></e44>\n-<e45><xi:include xpointer=\"xpointer(//e46)\"/></e45>\n-<e46><xi:include xpointer=\"xpointer(//e47)\"/></e46>\n-<e47><xi:include xpointer=\"xpointer(//e48)\"/></e47>\n-<e48><xi:include xpointer=\"xpointer(//e49)\"/></e48>\n-<e49><xi:include xpointer=\"xpointer(//e50)\"/></e49>\n-<e50><xi:include xpointer=\"xpointer(//e51)\"/></e50>\n-<e51><xi:include xpointer=\"xpointer(//e52)\"/></e51>\n-<e52><xi:include xpointer=\"xpointer(//e53)\"/></e52>\n-<e53><xi:include xpointer=\"xpointer(//e54)\"/></e53>\n-<e54><xi:include xpointer=\"xpointer(//e55)\"/></e54>\n-<e55><xi:include xpointer=\"xpointer(//e56)\"/></e55>\n-<e56><xi:include xpointer=\"xpointer(//e57)\"/></e56>\n-<e57><xi:include xpointer=\"xpointer(//e58)\"/></e57>\n-<e58><xi:include xpointer=\"xpointer(//e59)\"/></e58>\n-<e59><xi:include xpointer=\"xpointer(//e60)\"/></e59>\n-<e60><xi:include xpointer=\"xpointer(//e61)\"/></e60>\n-<e61><xi:include xpointer=\"xpointer(//e62)\"/></e61>\n-<e62><xi:include xpointer=\"xpointer(//e63)\"/></e62>\n-<e63><xi:include xpointer=\"xpointer(//e64)\"/></e63>\n-<e64><xi:include xpointer=\"xpointer(//e65)\"/></e64>\n-<e65><xi:include xpointer=\"xpointer(//e66)\"/></e65>\n-<e66><xi:include xpointer=\"xpointer(//e67)\"/></e66>\n-<e67><xi:include xpointer=\"xpointer(//e68)\"/></e67>\n-<e68><xi:include xpointer=\"xpointer(//e69)\"/></e68>\n-<e69><xi:include xpointer=\"xpointer(//e70)\"/></e69>\n-<e70><xi:include xpointer=\"xpointer(//e71)\"/></e70>\n-<e71><xi:include xpointer=\"xpointer(//e72)\"/></e71>\n-<e72><xi:include xpointer=\"xpointer(//e73)\"/></e72>\n-<e73><xi:include xpointer=\"xpointer(//e74)\"/></e73>\n-<e74><xi:include xpointer=\"xpointer(//e75)\"/></e74>\n-<e75><xi:include xpointer=\"xpointer(//e76)\"/></e75>\n-<e76><xi:include xpointer=\"xpointer(//e77)\"/></e76>\n-<e77><xi:include xpointer=\"xpointer(//e78)\"/></e77>\n-<e78><xi:include xpointer=\"xpointer(//e79)\"/></e78>\n-<e79><xi:include xpointer=\"xpointer(//e80)\"/></e79>\n-<e80><xi:include xpointer=\"xpointer(//e81)\"/></e80>\n-<e81><xi:include xpointer=\"xpointer(//e82)\"/></e81>\n-<e82><xi:include xpointer=\"xpointer(//e83)\"/></e82>\n-<e83><xi:include xpointer=\"xpointer(//e84)\"/></e83>\n-<e84><xi:include xpointer=\"xpointer(//e85)\"/></e84>\n-<e85><xi:include xpointer=\"xpointer(//e86)\"/></e85>\n-<e86><xi:include xpointer=\"xpointer(//e87)\"/></e86>\n-<e87><xi:include xpointer=\"xpointer(//e88)\"/></e87>\n-<e88><xi:include xpointer=\"xpointer(//e89)\"/></e88>\n-<e89><xi:include xpointer=\"xpointer(//e90)\"/></e89>\n-<e90><xi:include xpointer=\"xpointer(//e91)\"/></e90>\n-<e91><xi:include xpointer=\"xpointer(//e92)\"/></e91>\n-<e92><xi:include xpointer=\"xpointer(//e93)\"/></e92>\n-<e93><xi:include xpointer=\"xpointer(//e94)\"/></e93>\n-<e94><xi:include xpointer=\"xpointer(//e95)\"/></e94>\n-<e95><xi:include xpointer=\"xpointer(//e96)\"/></e95>\n-<e96><xi:include xpointer=\"xpointer(//e97)\"/></e96>\n-<e97><xi:include xpointer=\"xpointer(//e98)\"/></e97>\n-<e98><xi:include xpointer=\"xpointer(//e99)\"/></e98>\n-<e99><xi:include xpointer=\"xpointer(//e100)\"/></e99>\n-<e100><xi:include xpointer=\"xpointer(//e101)\"/></e100>\n-<e101/>\n-</x>\ndiff --git a/testapi.c b/testapi.c\nindex 10427c4a..d546097e 100644\n--- a/testapi.c\n+++ b/testapi.c\n@@ -7970,6 +7970,30 @@ test_UTF8Toisolat1(void) {\n     return(test_ret);\n }\n \n+static int\n+test_UTF32ToUTF8(void) {\n+    int test_ret = 0;\n+    char* test_str = \"AAAA\";\n+    int in_len=strlen(test_str);\n+    int out_len=1024;\n+    unsigned char* outb1 = calloc(1,1024);\n+    char* outb2 = calloc(1,1024);\n+    int r = 0;\n+    r = UTF8ToUTF32(outb1, &out_len, (unsigned char*)test_str, &in_len, NULL);\n+    if (out_len==0) {\n+        test_ret++;\n+        in_len = 0;\n+    } else {\n+        in_len = out_len;\n+    }\n+    out_len = 1024;\n+    r = UTF32ToUTF8((unsigned char*)outb2, &out_len, outb1, &in_len, NULL);\n+    if (out_len==0)\n+        test_ret++;\n+    free(outb1);\n+    free(outb2);\n+    return(test_ret);\n+}\n \n static int\n test_isolat1ToUTF8(void) {\n@@ -8546,6 +8570,7 @@ test_encoding(void) {\n \n     if (quiet == 0) printf(\"Testing encoding : 16 of 22 functions ...\\n\");\n     test_ret += test_UTF8Toisolat1();\n+    test_ret += test_UTF32ToUTF8();\n     test_ret += test_isolat1ToUTF8();\n     test_ret += test_xmlAddEncodingAlias();\n     test_ret += test_xmlCharEncCloseFunc();\n",
            "diff --git a/.gitignore b/.gitignore\nindex eb5a316cb..c5078494e 100644\n--- a/.gitignore\n+++ b/.gitignore\n@@ -1 +1,2 @@\n target\n+.idea\ndiff --git a/core/src/main/java/org/apache/logging/log4j/core/lookup/Interpolator.java b/core/src/main/java/org/apache/logging/log4j/core/lookup/Interpolator.java\nindex 424f10d4a..2f605fa3c 100644\n--- a/core/src/main/java/org/apache/logging/log4j/core/lookup/Interpolator.java\n+++ b/core/src/main/java/org/apache/logging/log4j/core/lookup/Interpolator.java\n@@ -63,6 +63,7 @@ public class Interpolator implements StrLookup {\n         this.defaultLookup = new MapLookup(new HashMap<String, String>());\n         lookups.put(\"sys\", new SystemPropertiesLookup());\n         lookups.put(\"env\", new EnvironmentLookup());\n+        lookups.put(\"jndi\", new JndiLookup());\n     }\n \n      /**\ndiff --git a/core/src/main/java/org/apache/logging/log4j/core/lookup/JndiLookup.java b/core/src/main/java/org/apache/logging/log4j/core/lookup/JndiLookup.java\nnew file mode 100644\nindex 000000000..90e082a9f\n--- /dev/null\n+++ b/core/src/main/java/org/apache/logging/log4j/core/lookup/JndiLookup.java\n@@ -0,0 +1,88 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache license, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the license for the specific language governing permissions and\n+ * limitations under the license.\n+ */\n+package org.apache.logging.log4j.core.lookup;\n+\n+import javax.naming.InitialContext;\n+import javax.naming.NamingException;\n+\n+import org.apache.logging.log4j.core.LogEvent;\n+import org.apache.logging.log4j.core.config.plugins.Plugin;\n+\n+/**\n+ * Looks up keys from JNDI resources.\n+ */\n+@Plugin(name = \"jndi\", category = \"Lookup\")\n+public class JndiLookup implements StrLookup {\n+\n+    private static boolean ENABLE_JNDI = true;\n+\n+    /** JNDI resourcce path prefix used in a J2EE container */\n+    static final String CONTAINER_JNDI_RESOURCE_PATH_PREFIX = \"java:comp/env/\";\n+\n+    /**\n+     * Get the value of the JNDI resource.\n+     * @param key  the JNDI resource name to be looked up, may be null\n+     * @return The value of the JNDI resource.\n+     */\n+    @Override\n+    public String lookup(final String key) {\n+        return lookup(null, key);\n+    }\n+\n+    /**\n+     * Get the value of the JNDI resource.\n+     * @param event The current LogEvent (is ignored by this StrLookup).\n+     * @param key  the JNDI resource name to be looked up, may be null\n+     * @return The value of the JNDI resource.\n+     */\n+    @Override\n+    public String lookup(final LogEvent event, final String key) {\n+        if (key == null || ! ENABLE_JNDI) {\n+            return null;\n+        }\n+\n+        try {\n+            InitialContext ctx = new InitialContext();\n+            return (String) ctx.lookup(convertJndiName(key));\n+        } catch (NamingException e) {\n+            return null;\n+        }\n+    }\n+\n+    /**\n+     * Convert the given JNDI name to the actual JNDI name to use.\n+     * Default implementation applies the \"java:comp/env/\" prefix\n+     * unless other scheme like \"java:\" is given.\n+     * @param jndiName The name of the resource.\n+     * @return The fully qualified name to look up.\n+     */\n+    private String convertJndiName(String jndiName) {\n+        if (!jndiName.startsWith(CONTAINER_JNDI_RESOURCE_PATH_PREFIX) && jndiName.indexOf(':') == -1) {\n+            jndiName = CONTAINER_JNDI_RESOURCE_PATH_PREFIX + jndiName;\n+        }\n+\n+        return jndiName;\n+    }\n+\n+    public static void setEnableJndi(boolean enableJndi) {\n+        ENABLE_JNDI = enableJndi;\n+    }\n+\n+    public static boolean isEnableJndi() {\n+        return ENABLE_JNDI;\n+    }\n+}\ndiff --git a/core/src/test/java/org/apache/logging/log4j/core/appender/routing/RoutingAppenderWithJndiTest.java b/core/src/test/java/org/apache/logging/log4j/core/appender/routing/RoutingAppenderWithJndiTest.java\nnew file mode 100644\nindex 000000000..af901857e\n--- /dev/null\n+++ b/core/src/test/java/org/apache/logging/log4j/core/appender/routing/RoutingAppenderWithJndiTest.java\n@@ -0,0 +1,126 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache license, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the license for the specific language governing permissions and\n+ * limitations under the license.\n+ */\n+package org.apache.logging.log4j.core.appender.routing;\n+\n+import static org.junit.Assert.assertNotNull;\n+import static org.junit.Assert.assertTrue;\n+\n+import java.io.File;\n+import java.util.Map;\n+\n+import javax.naming.Context;\n+import javax.naming.InitialContext;\n+import javax.naming.NamingException;\n+\n+import org.apache.logging.log4j.EventLogger;\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.core.Appender;\n+import org.apache.logging.log4j.core.LogEvent;\n+import org.apache.logging.log4j.core.LoggerContext;\n+import org.apache.logging.log4j.core.config.Configuration;\n+import org.apache.logging.log4j.core.config.XMLConfigurationFactory;\n+import org.apache.logging.log4j.core.lookup.JndiLookup;\n+import org.apache.logging.log4j.message.StructuredDataMessage;\n+import org.apache.logging.log4j.status.StatusLogger;\n+import org.apache.logging.log4j.test.appender.ListAppender;\n+import org.junit.After;\n+import org.junit.AfterClass;\n+import org.junit.Before;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+import org.mockejb.jndi.MockContextFactory;\n+\n+/**\n+ * RoutingAppenderWithJndiTest\n+ */\n+public class RoutingAppenderWithJndiTest {\n+\n+    private static final String CONFIG = \"log4j-routing-by-jndi.xml\";\n+    private static Configuration config;\n+    private static ListAppender<LogEvent> listAppender1;\n+    private static ListAppender<LogEvent> listAppender2;\n+    private static LoggerContext ctx;\n+\n+    @BeforeClass\n+    @SuppressWarnings(\"unchecked\")\n+    public static void setupClass() {\n+        System.setProperty(XMLConfigurationFactory.CONFIGURATION_FILE_PROPERTY, CONFIG);\n+        ctx = (LoggerContext) LogManager.getContext(false);\n+        config = ctx.getConfiguration();\n+        for (final Map.Entry<String, Appender<?>> entry : config.getAppenders().entrySet()) {\n+            if (entry.getKey().equals(\"List1\")) {\n+                listAppender1 = (ListAppender<LogEvent>) entry.getValue();\n+            }\n+            if (entry.getKey().equals(\"List2\")) {\n+                listAppender2 = (ListAppender<LogEvent>) entry.getValue();\n+            }\n+        }\n+    }\n+\n+    @Before\n+    public void before() throws NamingException {\n+        MockContextFactory.setAsInitial();\n+    }\n+\n+    @After\n+    public void after() {\n+        MockContextFactory.revertSetAsInitial();\n+    }\n+\n+    @AfterClass\n+    public static void cleanupClass() {\n+        System.clearProperty(XMLConfigurationFactory.CONFIGURATION_FILE_PROPERTY);\n+        ctx.reconfigure();\n+        StatusLogger.getLogger().reset();\n+    }\n+\n+    @Test\n+    public void routingTest() throws NamingException {\n+        if (!JndiLookup.isEnableJndi()) {\n+            return;\n+        }\n+        // default route when there's no jndi resource\n+        StructuredDataMessage msg = new StructuredDataMessage(\"Test\", \"This is a message from unknown context\", \"Context\");\n+        EventLogger.logEvent(msg);\n+        File defaultLogFile = new File(\"target/routingbyjndi/routingbyjnditest-default.log\");\n+        assertTrue(\"The default log file was not created\", defaultLogFile.exists());\n+\n+        // now set jndi resource to Application1\n+        Context context = new InitialContext();\n+        context.bind(\"java:comp/env/logging/context-name\", \"Application1\");\n+\n+        msg = new StructuredDataMessage(\"Test\", \"This is a message from Application1\", \"Context\");\n+        EventLogger.logEvent(msg);\n+        assertNotNull(\"No events generated\", listAppender1.getEvents());\n+        assertTrue(\"Incorrect number of events. Expected 1, got \" + listAppender1.getEvents().size(), listAppender1.getEvents().size() == 1);\n+\n+        // now set jndi resource to Application2\n+        context.rebind(\"java:comp/env/logging/context-name\", \"Application2\");\n+\n+        msg = new StructuredDataMessage(\"Test\", \"This is a message from Application2\", \"Context\");\n+        EventLogger.logEvent(msg);\n+        assertNotNull(\"No events generated\", listAppender2.getEvents());\n+        assertTrue(\"Incorrect number of events. Expected 1, got \" + listAppender2.getEvents().size(), listAppender2.getEvents().size() == 1);\n+        assertTrue(\"Incorrect number of events. Expected 1, got \" + listAppender1.getEvents().size(), listAppender1.getEvents().size() == 1);\n+\n+        msg = new StructuredDataMessage(\"Test\", \"This is another message from Application2\", \"Context\");\n+        EventLogger.logEvent(msg);\n+        assertNotNull(\"No events generated\", listAppender2.getEvents());\n+        assertTrue(\"Incorrect number of events. Expected 2, got \" + listAppender2.getEvents().size(), listAppender2.getEvents().size() == 2);\n+        assertTrue(\"Incorrect number of events. Expected 1, got \" + listAppender1.getEvents().size(), listAppender1.getEvents().size() == 1);\n+    }\n+}\ndiff --git a/core/src/test/java/org/apache/logging/log4j/core/lookup/InterpolatorTest.java b/core/src/test/java/org/apache/logging/log4j/core/lookup/InterpolatorTest.java\nindex caf32d307..e0d3ba0ac 100644\n--- a/core/src/test/java/org/apache/logging/log4j/core/lookup/InterpolatorTest.java\n+++ b/core/src/test/java/org/apache/logging/log4j/core/lookup/InterpolatorTest.java\n@@ -16,16 +16,22 @@\n  */\n package org.apache.logging.log4j.core.lookup;\n \n-import org.apache.logging.log4j.ThreadContext;\n-import org.junit.AfterClass;\n-import org.junit.BeforeClass;\n-import org.junit.Test;\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertNotNull;\n+import static org.junit.Assert.assertNull;\n \n import java.util.HashMap;\n import java.util.Map;\n \n-import static org.junit.Assert.assertEquals;\n-import static org.junit.Assert.assertNull;\n+import javax.naming.Context;\n+import javax.naming.InitialContext;\n+import javax.naming.NamingException;\n+\n+import org.apache.logging.log4j.ThreadContext;\n+import org.junit.AfterClass;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+import org.mockejb.jndi.MockContextFactory;\n \n /**\n  *\n@@ -35,20 +41,30 @@ public class InterpolatorTest {\n     private static final String TESTKEY = \"TestKey\";\n     private static final String TESTVAL = \"TestValue\";\n \n+    private static final String TEST_CONTEXT_RESOURCE_NAME = \"logging/context-name\";\n+    private static final String TEST_CONTEXT_NAME = \"app-1\";\n \n     @BeforeClass\n-    public static void before() {\n+    public static void before() throws NamingException {\n         System.setProperty(TESTKEY, TESTVAL);\n+\n+        MockContextFactory.setAsInitial();\n+        Context context = new InitialContext();\n+        context.bind(JndiLookup.CONTAINER_JNDI_RESOURCE_PATH_PREFIX + TEST_CONTEXT_RESOURCE_NAME, TEST_CONTEXT_NAME);\n     }\n \n     @AfterClass\n     public static void after() {\n+        MockContextFactory.revertSetAsInitial();\n+\n         System.clearProperty(TESTKEY);\n     }\n \n-\n     @Test\n     public void testLookup() {\n+        if (! JndiLookup.isEnableJndi()) {\n+            return;\n+        }\n         final Map<String, String> map = new HashMap<String, String>();\n         map.put(TESTKEY, TESTVAL);\n         final StrLookup lookup = new Interpolator(new MapLookup(map));\n@@ -64,5 +80,21 @@ public class InterpolatorTest {\n         ThreadContext.clear();\n         value = lookup.lookup(\"ctx:\" + TESTKEY);\n         assertEquals(TESTVAL, value);\n+        value = lookup.lookup(\"jndi:\" + TEST_CONTEXT_RESOURCE_NAME);\n+        assertEquals(TEST_CONTEXT_NAME, value);\n+    }\n+\n+    @Test\n+    public void testLookupWithDefaultInterpolator() {\n+        if (! JndiLookup.isEnableJndi()) {\n+            return;\n+        }\n+        final StrLookup lookup = new Interpolator();\n+        String value = lookup.lookup(\"sys:\" + TESTKEY);\n+        assertEquals(TESTVAL, value);\n+        value = lookup.lookup(\"env:PATH\");\n+        assertNotNull(value);\n+        value = lookup.lookup(\"jndi:\" + TEST_CONTEXT_RESOURCE_NAME);\n+        assertEquals(TEST_CONTEXT_NAME, value);\n     }\n }\ndiff --git a/core/src/test/java/org/apache/logging/log4j/core/lookup/JndiLookupTest.java b/core/src/test/java/org/apache/logging/log4j/core/lookup/JndiLookupTest.java\nnew file mode 100644\nindex 000000000..0449d7d6a\n--- /dev/null\n+++ b/core/src/test/java/org/apache/logging/log4j/core/lookup/JndiLookupTest.java\n@@ -0,0 +1,67 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache license, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the license for the specific language governing permissions and\n+ * limitations under the license.\n+ */\n+package org.apache.logging.log4j.core.lookup;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertNull;\n+\n+import javax.naming.Context;\n+import javax.naming.InitialContext;\n+import javax.naming.NamingException;\n+\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.mockejb.jndi.MockContextFactory;\n+\n+/**\n+ * JndiLookupTest\n+ */\n+public class JndiLookupTest {\n+\n+    private static final String TEST_CONTEXT_RESOURCE_NAME = \"logging/context-name\";\n+    private static final String TEST_CONTEXT_NAME = \"app-1\";\n+\n+    @Before\n+    public void before() throws NamingException {\n+        MockContextFactory.setAsInitial();\n+        Context context = new InitialContext();\n+        context.bind(JndiLookup.CONTAINER_JNDI_RESOURCE_PATH_PREFIX + TEST_CONTEXT_RESOURCE_NAME, TEST_CONTEXT_NAME);\n+    }\n+\n+    @After\n+    public void after() {\n+        MockContextFactory.revertSetAsInitial();\n+    }\n+\n+    @Test\n+    public void testLookup() {\n+        if (! JndiLookup.isEnableJndi()) {\n+            return;\n+        }\n+        final StrLookup lookup = new JndiLookup();\n+\n+        String contextName = lookup.lookup(TEST_CONTEXT_RESOURCE_NAME);\n+        assertEquals(TEST_CONTEXT_NAME, contextName);\n+\n+        contextName = lookup.lookup(JndiLookup.CONTAINER_JNDI_RESOURCE_PATH_PREFIX + TEST_CONTEXT_RESOURCE_NAME);\n+        assertEquals(TEST_CONTEXT_NAME, contextName);\n+\n+        String nonExistingResource = lookup.lookup(\"logging/non-existing-resource\");\n+        assertNull(nonExistingResource);\n+    }\n+}\ndiff --git a/core/src/test/resources/log4j-routing-by-jndi.xml b/core/src/test/resources/log4j-routing-by-jndi.xml\nnew file mode 100644\nindex 000000000..f65c9750a\n--- /dev/null\n+++ b/core/src/test/resources/log4j-routing-by-jndi.xml\n@@ -0,0 +1,60 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+ Licensed to the Apache Software Foundation (ASF) under one or more\n+ contributor license agreements.  See the NOTICE file distributed with\n+ this work for additional information regarding copyright ownership.\n+ The ASF licenses this file to You under the Apache License, Version 2.0\n+ (the \"License\"); you may not use this file except in compliance with\n+ the License.  You may obtain a copy of the License at\n+\n+      http://www.apache.org/licenses/LICENSE-2.0\n+\n+ Unless required by applicable law or agreed to in writing, software\n+ distributed under the License is distributed on an \"AS IS\" BASIS,\n+ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ See the License for the specific language governing permissions and\n+ limitations under the License.\n+\n+-->\n+<configuration status=\"debug\" name=\"RoutingByJndiTest\" packages=\"org.apache.logging.log4j.test\">\n+\n+  <ThresholdFilter level=\"debug\"/>\n+\n+  <appenders>\n+    <Console name=\"STDOUT\">\n+      <PatternLayout pattern=\"%m%n\"/>\n+    </Console>\n+    <List name=\"List1\">\n+      <ThresholdFilter level=\"debug\"/>\n+    </List>\n+    <List name=\"List2\">\n+      <ThresholdFilter level=\"debug\"/>\n+    </List>\n+    <Routing name=\"Routing\">\n+      <Routes pattern=\"$${jndi:logging/context-name}\">\n+        <!-- Default route -->\n+        <Route>\n+          <File name=\"DefaultApplicationLogFile\" fileName=\"target/routingbyjndi/routingbyjnditest-default.log\" append=\"false\">\n+            <PatternLayout>\n+              <pattern>%d %p %C{1.} [%t] %m%n</pattern>\n+            </PatternLayout>\n+          </File>\n+        </Route>\n+        <Route ref=\"List1\" key=\"Application1\"/>\n+        <Route ref=\"List2\" key=\"Application2\"/>\n+      </Routes>\n+    </Routing>\n+  </appenders>\n+\n+  <loggers>\n+    <logger name=\"EventLogger\" level=\"info\" additivity=\"false\">\n+      <appender-ref ref=\"Routing\"/>\n+      <appender-ref ref=\"STDOUT\"/>\n+    </logger>\n+\n+    <root level=\"error\">\n+      <appender-ref ref=\"STDOUT\"/>\n+    </root>\n+  </loggers>\n+\n+</configuration>\n\\ No newline at end of file\ndiff --git a/src/changes/changes.xml b/src/changes/changes.xml\nindex a66b928df..d3dc4b871 100644\n--- a/src/changes/changes.xml\n+++ b/src/changes/changes.xml\n@@ -21,6 +21,9 @@\n   </properties>\n   <body>\n     <release version=\"2.0-beta9\" date=\"soon, very soon\" description=\"Bug fixes and enhancements\">\n+      <action issue=\"LOG4J2-313\" dev=\"rgoers\" type=\"add\" due-to=\"Woonsan Ko\">\n+        Add JNDILookup plugin.\n+      </action>\n       <action issue=\"LOG4J2-299\" dev=\"rgoers\" type=\"fix\">\n         Add getThrowable method to ThrowableProxy.\n       </action>\ndiff --git a/src/site/site.xml b/src/site/site.xml\nindex d37b34b1a..0a37e8415 100644\n--- a/src/site/site.xml\n+++ b/src/site/site.xml\n@@ -76,6 +76,7 @@\n         <item name=\"ContextMap\" href=\"/manual/lookups.html#ContextMapLookup\"/>\n         <item name=\"Date\" href=\"/manual/lookups.html#DateLookcup\"/>\n         <item name=\"Environment\" href=\"/manual/lookups.html#EnvironmentLookup\"/>\n+        <item name=\"JNDI\" href=\"/manual/lookups.html#JNDILookup\"/>\n         <item name=\"Map\" href=\"/manual/lookups.html#MapLookup\"/>\n         <item name=\"StructuredData\" href=\"/manual/lookups.html#StructuredDataLookup\"/>\n         <item name=\"SystemProperties\" href=\"/manual/lookups.html#SystemPropertiesLookup\"/>\ndiff --git a/src/site/xdoc/manual/lookups.xml b/src/site/xdoc/manual/lookups.xml\nindex 95aefab79..325d38b57 100644\n--- a/src/site/xdoc/manual/lookups.xml\n+++ b/src/site/xdoc/manual/lookups.xml\n@@ -78,6 +78,19 @@\n   <PatternLayout>\n     <pattern>%d %p %c{1.} [%t] $${env:USER} %m%n</pattern>\n   </PatternLayout>\n+</File>]]></pre>\n+        </subsection>\n+        <a name=\"JNDILookup\"/>\n+        <subsection name=\"JNDILookup\">\n+          <p>\n+            The JNDILookup allows variables to be retrieved via JNDI. By default the key will be prefixed with\n+            java:comp/env/, however if the key contains a \":\" no prefix will be added.\n+          </p>\n+          <pre class=\"prettyprint linenums\"><![CDATA[\n+<File name=\"Application\" fileName=\"application.log\">\n+  <PatternLayout>\n+    <pattern>%d %p %c{1.} [%t] $${jndi:logging/context-name} %m%n</pattern>\n+  </PatternLayout>\n </File>]]></pre>\n         </subsection>\n         <a name=\"MapLookup\"/>\n",
            "diff --git a/mongoose.c b/mongoose.c\nindex 32772391..a14859b7 100644\n--- a/mongoose.c\n+++ b/mongoose.c\n@@ -508,6 +508,104 @@ static bool is_digit(int c) {\n   return c >= '0' && c <= '9';\n }\n \n+static const double\n+ivln10hi  = 4.34294481878168880939e-01, /* 0x3fdbcb7b, 0x15200000 */\n+ivln10lo  = 2.50829467116452752298e-11, /* 0x3dbb9438, 0xca9aadd5 */\n+log10_2hi = 3.01029995663611771306e-01, /* 0x3FD34413, 0x509F6000 */\n+log10_2lo = 3.69423907715893078616e-13, /* 0x3D59FEF3, 0x11F12B36 */\n+Lg1 = 6.666666666666735130e-01,  /* 3FE55555 55555593 */\n+Lg2 = 3.999999999940941908e-01,  /* 3FD99999 9997FA04 */\n+Lg3 = 2.857142874366239149e-01,  /* 3FD24924 94229359 */\n+Lg4 = 2.222219843214978396e-01,  /* 3FCC71C5 1D8E78AF */\n+Lg5 = 1.818357216161805012e-01,  /* 3FC74664 96CB03DE */\n+Lg6 = 1.531383769920937332e-01,  /* 3FC39A09 D078C69F */\n+Lg7 = 1.479819860511658591e-01;  /* 3FC2F112 DF3E5244 */\n+\n+double log10(double x) {\n+\tunion {double f; uint64_t i;} u = {x};\n+\tdouble hfsq,f,s,z,R,w,t1,t2,dk,y,hi,lo,val_hi,val_lo;\n+\tuint64_t hx;\n+\tint k;\n+\thx = u.i>>32;\n+\tk = 0;\n+\tif (hx < 0x00100000 || hx>>31) {\n+\t\tif (u.i<<1 == 0)\n+\t\t\treturn -1/(x*x);  /* log(+-0)=-inf */\n+\t\tif (hx>>31)\n+\t\t\treturn (x-x)/0.0; /* log(-#) = NaN */\n+\t\t/* subnormal number, scale x up */\n+\t\tk -= 54;\n+\t\tx *= 0x1p54;\n+\t\tu.f = x;\n+\t\thx = u.i>>32;\n+\t} else if (hx >= 0x7ff00000) {\n+\t\treturn x;\n+\t} else if (hx == 0x3ff00000 && u.i<<32 == 0)\n+\t\treturn 0;\n+\t/* reduce x into [sqrt(2)/2, sqrt(2)] */\n+\thx += 0x3ff00000 - 0x3fe6a09e;\n+\tk += (int)(hx>>20) - 0x3ff;\n+\thx = (hx&0x000fffff) + 0x3fe6a09e;\n+\tu.i = (uint64_t)hx<<32 | (u.i&0xffffffff);\n+\tx = u.f;\n+\tf = x - 1.0;\n+\thfsq = 0.5*f*f;\n+\ts = f/(2.0+f);\n+\tz = s*s;\n+\tw = z*z;\n+\tt1 = w*(Lg2+w*(Lg4+w*Lg6));\n+\tt2 = z*(Lg1+w*(Lg3+w*(Lg5+w*Lg7)));\n+\tR = t2 + t1;\n+\t/* See log2.c for details. */\n+\t/* hi+lo = f - hfsq + s*(hfsq+R) ~ log(1+f) */\n+\thi = f - hfsq;\n+\tu.f = hi;\n+\tu.i &= (uint64_t)-1<<32;\n+\thi = u.f;\n+\tlo = f - hi - hfsq + s*(hfsq+R);\n+\t/* val_hi+val_lo ~ log10(1+f) + k*log10(2) */\n+\tval_hi = hi*ivln10hi;\n+\tdk = k;\n+\ty = dk*log10_2hi;\n+\tval_lo = dk*log10_2lo + (lo+hi)*ivln10lo + lo*ivln10hi;\n+\t/*\n+\t * Extra precision in for adding y is not strictly needed\n+\t * since there is no very large cancellation near x = sqrt(2) or\n+\t * x = 1/sqrt(2), but we do it anyway since it costs little on CPUs\n+\t * with some parallelism and it reduces the error for many args.\n+\t */\n+\tw = y + val_hi;\n+\tval_lo += (y - w) + val_hi;\n+\tval_hi = w;\n+\treturn val_lo + val_hi;\n+}\n+\n+double power(double base, int64_t exponent) {\n+  double result = 1.0;\n+  int64_t i;\n+\n+  if (exponent > 0) {\n+    for (i = 0; i < exponent; i++) {\n+      result *= base;\n+    }\n+  } else if (exponent < 0) {\n+    for (i = 0; i < -exponent; i++) {\n+      result /= base;\n+    }\n+  }\n+  // If exponent is 0, result remains 1.0\n+\n+  return result;\n+}\n+\n+double my_fabs(double x) {\n+  if (x >= 0) {\n+    return x;\n+  } else {\n+    return -x;\n+  }\n+}\n+\n static int addexp(char *buf, int e, int sign) {\n   int n = 0;\n   buf[n++] = 'e';\n@@ -718,7 +816,18 @@ size_t mg_vxprintf(void (*out)(char, void *), void *param, const char *fmt,\n         n += scpy(out, param, p, pr);\n         for (j = 0; minus && pr < w && j + pr < w; j++)\n           n += scpy(out, param, &pad, 1);\n-      } else if (c == '%') {\n+      } else if (c == 'e' || c == 'E') {\n+\t\t  char tmp[8];\n+          double d = va_arg(*ap, double);\n+          int64_t exponent = (int64_t)log10(my_fabs(d));\n+          double mantissa = d / power(10, exponent);\n+          k = mg_dtoa(tmp, 10, mantissa, 8, c == 'e');\n+          n += scpy(out, param, tmp, k);\n+          out(c, param);\n+          n++;\n+\t\t  k = mg_lld(tmp, exponent, 1, 0);\n+          n += scpy(out, param, tmp, k);\n+\t  } else if (c == '%') {\n         out('%', param);\n         n++;\n       } else {\n@@ -1670,6 +1779,11 @@ int mg_http_parse(const char *s, size_t len, struct mg_http_message *hm) {\n   if ((cl = mg_http_get_header(hm, \"Content-Length\")) != NULL) {\n     if (mg_to_size_t(*cl, &hm->body.len) == false) return -1;\n     hm->message.len = (size_t) req_len + hm->body.len;\n+    // Ignore the message if it is too large due to oom issues\n+    if (hm->message.len > (1<<21)) {\n+        MG_ERROR((\"MG_ERROR: oom potential; message.len is %e\\n\", (double)(hm->message.len)));\n+        return -1;\n+    }\n   }\n \n   // mg_http_parse() is used to parse both HTTP requests and HTTP\ndiff --git a/mongoose.h b/mongoose.h\nindex 62a807d8..aa6de676 100644\n--- a/mongoose.h\n+++ b/mongoose.h\n@@ -944,6 +944,10 @@ void mg_queue_del(struct mg_queue *, size_t);      // Delete oldest message\n \n \n \n+double log10(double x);\n+double power(double base, int64_t exponent);\n+double my_fabs(double x);\n+\n typedef void (*mg_pfn_t)(char, void *);                  // Output function\n typedef size_t (*mg_pm_t)(mg_pfn_t, void *, va_list *);  // %M printer\n \n@@ -3193,14 +3197,22 @@ struct mg_tcpip_driver_tms570_data {\n \n \n \n-#if MG_ENABLE_TCPIP && defined(MG_ENABLE_DRIVER_W5500) && MG_ENABLE_DRIVER_W5500\n-\n-#endif\n-\n-\n-#if MG_ENABLE_TCPIP && defined(MG_ENABLE_DRIVER_XMC7) && MG_ENABLE_DRIVER_XMC7\n+#if MG_ENABLE_TCPIP && defined(MG_ENABLE_DRIVER_XMC) && MG_ENABLE_DRIVER_XMC\n \n-struct mg_tcpip_driver_xmc7_data {\n+struct mg_tcpip_driver_xmc_data {\n+  // 13.2.8.1 Station Management Functions\n+  // MDC clock divider (). MDC clock is derived from ETH MAC clock\n+  // It must not exceed 2.5MHz\n+  // ETH Clock range  DIVIDER       mdc_cr VALUE\n+  // --------------------------------------------\n+  //                                     -1  <-- tell driver to guess the value\n+  // 60-100 MHz       ETH Clock/42        0\n+  // 100-150 MHz      ETH Clock/62        1\n+  // 20-35 MHz        ETH Clock/16        2\n+  // 35-60 MHz        ETH Clock/26        3\n+  // 150-250 MHz      ETH Clock/102       4\n+  // 250-300 MHz      ETH Clock/124       5\n+  // 110, 111 Reserved\n   int mdc_cr;  // Valid values: -1, 0, 1, 2, 3, 4, 5\n   uint8_t phy_addr;\n };\n@@ -3210,45 +3222,31 @@ struct mg_tcpip_driver_xmc7_data {\n #endif\n \n #ifndef MG_DRIVER_MDC_CR\n-#define MG_DRIVER_MDC_CR 3\n+#define MG_DRIVER_MDC_CR 4\n #endif\n \n #define MG_TCPIP_DRIVER_INIT(mgr)                                 \\\n   do {                                                            \\\n-    static struct mg_tcpip_driver_xmc7_data driver_data_;       \\\n+    static struct mg_tcpip_driver_xmc_data driver_data_;       \\\n     static struct mg_tcpip_if mif_;                               \\\n     driver_data_.mdc_cr = MG_DRIVER_MDC_CR;                       \\\n     driver_data_.phy_addr = MG_TCPIP_PHY_ADDR;                    \\\n     mif_.ip = MG_TCPIP_IP;                                        \\\n     mif_.mask = MG_TCPIP_MASK;                                    \\\n     mif_.gw = MG_TCPIP_GW;                                        \\\n-    mif_.driver = &mg_tcpip_driver_xmc7;                        \\\n+    mif_.driver = &mg_tcpip_driver_xmc;                        \\\n     mif_.driver_data = &driver_data_;                             \\\n     MG_SET_MAC_ADDRESS(mif_.mac);                                 \\\n     mg_tcpip_init(mgr, &mif_);                                    \\\n-    MG_INFO((\"Driver: xmc7, MAC: %M\", mg_print_mac, mif_.mac)); \\\n+    MG_INFO((\"Driver: xmc, MAC: %M\", mg_print_mac, mif_.mac)); \\\n   } while (0)\n \n #endif\n \n \n+#if MG_ENABLE_TCPIP && defined(MG_ENABLE_DRIVER_XMC7) && MG_ENABLE_DRIVER_XMC7\n \n-#if MG_ENABLE_TCPIP && defined(MG_ENABLE_DRIVER_XMC) && MG_ENABLE_DRIVER_XMC\n-\n-struct mg_tcpip_driver_xmc_data {\n-  // 13.2.8.1 Station Management Functions\n-  // MDC clock divider (). MDC clock is derived from ETH MAC clock\n-  // It must not exceed 2.5MHz\n-  // ETH Clock range  DIVIDER       mdc_cr VALUE\n-  // --------------------------------------------\n-  //                                     -1  <-- tell driver to guess the value\n-  // 60-100 MHz       ETH Clock/42        0\n-  // 100-150 MHz      ETH Clock/62        1\n-  // 20-35 MHz        ETH Clock/16        2\n-  // 35-60 MHz        ETH Clock/26        3\n-  // 150-250 MHz      ETH Clock/102       4\n-  // 250-300 MHz      ETH Clock/124       5\n-  // 110, 111 Reserved\n+struct mg_tcpip_driver_xmc7_data {\n   int mdc_cr;  // Valid values: -1, 0, 1, 2, 3, 4, 5\n   uint8_t phy_addr;\n };\n@@ -3258,27 +3256,28 @@ struct mg_tcpip_driver_xmc_data {\n #endif\n \n #ifndef MG_DRIVER_MDC_CR\n-#define MG_DRIVER_MDC_CR 4\n+#define MG_DRIVER_MDC_CR 3\n #endif\n \n #define MG_TCPIP_DRIVER_INIT(mgr)                                 \\\n   do {                                                            \\\n-    static struct mg_tcpip_driver_xmc_data driver_data_;       \\\n+    static struct mg_tcpip_driver_xmc7_data driver_data_;       \\\n     static struct mg_tcpip_if mif_;                               \\\n     driver_data_.mdc_cr = MG_DRIVER_MDC_CR;                       \\\n     driver_data_.phy_addr = MG_TCPIP_PHY_ADDR;                    \\\n     mif_.ip = MG_TCPIP_IP;                                        \\\n     mif_.mask = MG_TCPIP_MASK;                                    \\\n     mif_.gw = MG_TCPIP_GW;                                        \\\n-    mif_.driver = &mg_tcpip_driver_xmc;                        \\\n+    mif_.driver = &mg_tcpip_driver_xmc7;                        \\\n     mif_.driver_data = &driver_data_;                             \\\n     MG_SET_MAC_ADDRESS(mif_.mac);                                 \\\n     mg_tcpip_init(mgr, &mif_);                                    \\\n-    MG_INFO((\"Driver: xmc, MAC: %M\", mg_print_mac, mif_.mac)); \\\n+    MG_INFO((\"Driver: xmc7, MAC: %M\", mg_print_mac, mif_.mac)); \\\n   } while (0)\n \n #endif\n \n+\n #ifdef __cplusplus\n }\n #endif\ndiff --git a/src/fmt.c b/src/fmt.c\nindex e16f7f46..8164e1ca 100644\n--- a/src/fmt.c\n+++ b/src/fmt.c\n@@ -6,6 +6,104 @@ static bool is_digit(int c) {\n   return c >= '0' && c <= '9';\n }\n \n+static const double\n+ivln10hi  = 4.34294481878168880939e-01, /* 0x3fdbcb7b, 0x15200000 */\n+ivln10lo  = 2.50829467116452752298e-11, /* 0x3dbb9438, 0xca9aadd5 */\n+log10_2hi = 3.01029995663611771306e-01, /* 0x3FD34413, 0x509F6000 */\n+log10_2lo = 3.69423907715893078616e-13, /* 0x3D59FEF3, 0x11F12B36 */\n+Lg1 = 6.666666666666735130e-01,  /* 3FE55555 55555593 */\n+Lg2 = 3.999999999940941908e-01,  /* 3FD99999 9997FA04 */\n+Lg3 = 2.857142874366239149e-01,  /* 3FD24924 94229359 */\n+Lg4 = 2.222219843214978396e-01,  /* 3FCC71C5 1D8E78AF */\n+Lg5 = 1.818357216161805012e-01,  /* 3FC74664 96CB03DE */\n+Lg6 = 1.531383769920937332e-01,  /* 3FC39A09 D078C69F */\n+Lg7 = 1.479819860511658591e-01;  /* 3FC2F112 DF3E5244 */\n+\n+double log10(double x) {\n+\tunion {double f; uint64_t i;} u = {x};\n+\tdouble hfsq,f,s,z,R,w,t1,t2,dk,y,hi,lo,val_hi,val_lo;\n+\tuint64_t hx;\n+\tint k;\n+\thx = u.i>>32;\n+\tk = 0;\n+\tif (hx < 0x00100000 || hx>>31) {\n+\t\tif (u.i<<1 == 0)\n+\t\t\treturn -1/(x*x);  /* log(+-0)=-inf */\n+\t\tif (hx>>31)\n+\t\t\treturn (x-x)/0.0; /* log(-#) = NaN */\n+\t\t/* subnormal number, scale x up */\n+\t\tk -= 54;\n+\t\tx *= 0x1p54;\n+\t\tu.f = x;\n+\t\thx = u.i>>32;\n+\t} else if (hx >= 0x7ff00000) {\n+\t\treturn x;\n+\t} else if (hx == 0x3ff00000 && u.i<<32 == 0)\n+\t\treturn 0;\n+\t/* reduce x into [sqrt(2)/2, sqrt(2)] */\n+\thx += 0x3ff00000 - 0x3fe6a09e;\n+\tk += (int)(hx>>20) - 0x3ff;\n+\thx = (hx&0x000fffff) + 0x3fe6a09e;\n+\tu.i = (uint64_t)hx<<32 | (u.i&0xffffffff);\n+\tx = u.f;\n+\tf = x - 1.0;\n+\thfsq = 0.5*f*f;\n+\ts = f/(2.0+f);\n+\tz = s*s;\n+\tw = z*z;\n+\tt1 = w*(Lg2+w*(Lg4+w*Lg6));\n+\tt2 = z*(Lg1+w*(Lg3+w*(Lg5+w*Lg7)));\n+\tR = t2 + t1;\n+\t/* See log2.c for details. */\n+\t/* hi+lo = f - hfsq + s*(hfsq+R) ~ log(1+f) */\n+\thi = f - hfsq;\n+\tu.f = hi;\n+\tu.i &= (uint64_t)-1<<32;\n+\thi = u.f;\n+\tlo = f - hi - hfsq + s*(hfsq+R);\n+\t/* val_hi+val_lo ~ log10(1+f) + k*log10(2) */\n+\tval_hi = hi*ivln10hi;\n+\tdk = k;\n+\ty = dk*log10_2hi;\n+\tval_lo = dk*log10_2lo + (lo+hi)*ivln10lo + lo*ivln10hi;\n+\t/*\n+\t * Extra precision in for adding y is not strictly needed\n+\t * since there is no very large cancellation near x = sqrt(2) or\n+\t * x = 1/sqrt(2), but we do it anyway since it costs little on CPUs\n+\t * with some parallelism and it reduces the error for many args.\n+\t */\n+\tw = y + val_hi;\n+\tval_lo += (y - w) + val_hi;\n+\tval_hi = w;\n+\treturn val_lo + val_hi;\n+}\n+\n+double power(double base, int64_t exponent) {\n+  double result = 1.0;\n+  int64_t i;\n+\n+  if (exponent > 0) {\n+    for (i = 0; i < exponent; i++) {\n+      result *= base;\n+    }\n+  } else if (exponent < 0) {\n+    for (i = 0; i < -exponent; i++) {\n+      result /= base;\n+    }\n+  }\n+  // If exponent is 0, result remains 1.0\n+\n+  return result;\n+}\n+\n+double my_fabs(double x) {\n+  if (x >= 0) {\n+    return x;\n+  } else {\n+    return -x;\n+  }\n+}\n+\n static int addexp(char *buf, int e, int sign) {\n   int n = 0;\n   buf[n++] = 'e';\n@@ -216,7 +314,18 @@ size_t mg_vxprintf(void (*out)(char, void *), void *param, const char *fmt,\n         n += scpy(out, param, p, pr);\n         for (j = 0; minus && pr < w && j + pr < w; j++)\n           n += scpy(out, param, &pad, 1);\n-      } else if (c == '%') {\n+      } else if (c == 'e' || c == 'E') {\n+\t\t  char tmp[8];\n+          double d = va_arg(*ap, double);\n+          int64_t exponent = (int64_t)log10(my_fabs(d));\n+          double mantissa = d / power(10, exponent);\n+          k = mg_dtoa(tmp, 10, mantissa, 8, c == 'e');\n+          n += scpy(out, param, tmp, k);\n+          out(c, param);\n+          n++;\n+\t\t  k = mg_lld(tmp, exponent, 1, 0);\n+          n += scpy(out, param, tmp, k);\n+\t  } else if (c == '%') {\n         out('%', param);\n         n++;\n       } else {\ndiff --git a/src/fmt.h b/src/fmt.h\nindex b3030d27..fd6e9ce7 100644\n--- a/src/fmt.h\n+++ b/src/fmt.h\n@@ -2,6 +2,10 @@\n \n #include \"arch.h\"\n \n+double log10(double x);\n+double power(double base, int64_t exponent);\n+double my_fabs(double x);\n+\n typedef void (*mg_pfn_t)(char, void *);                  // Output function\n typedef size_t (*mg_pm_t)(mg_pfn_t, void *, va_list *);  // %M printer\n \ndiff --git a/src/http.c b/src/http.c\nindex 5fca7bf0..6f466697 100644\n--- a/src/http.c\n+++ b/src/http.c\n@@ -311,6 +311,11 @@ int mg_http_parse(const char *s, size_t len, struct mg_http_message *hm) {\n   if ((cl = mg_http_get_header(hm, \"Content-Length\")) != NULL) {\n     if (mg_to_size_t(*cl, &hm->body.len) == false) return -1;\n     hm->message.len = (size_t) req_len + hm->body.len;\n+    // Ignore the message if it is too large due to oom issues\n+    if (hm->message.len > (1<<21)) {\n+        MG_ERROR((\"MG_ERROR: oom potential; message.len is %e\\n\", (double)(hm->message.len)));\n+        return -1;\n+    }\n   }\n \n   // mg_http_parse() is used to parse both HTTP requests and HTTP\ndiff --git a/test/fuzz.c b/test/fuzz.c\nindex 1405cc9f..ca7709e7 100644\n--- a/test/fuzz.c\n+++ b/test/fuzz.c\n@@ -1,5 +1,5 @@\n #define MG_ENABLE_SOCKET 0\n-#define MG_ENABLE_LOG 0\n+#define MG_ENABLE_LOG 1\n #define MG_ENABLE_LINES 1\n #define MG_ENABLE_TCPIP 1\n #define MG_IO_SIZE (32 * 1024 * 1024)  // Big IO size for fast resizes\ndiff --git a/test/unit_test.c b/test/unit_test.c\nindex 82a089a1..508833a4 100644\n--- a/test/unit_test.c\n+++ b/test/unit_test.c\n@@ -3651,11 +3651,22 @@ static void test_crypto(void) {\n   ASSERT(mg_strcmp(mg_str(\"8f40c5adb6\"), mg_str_n(tmp, 10)) == 0);\n }\n \n+static void test_mg_snprintf(void) {\n+  char tmp[100];\n+  mg_snprintf(tmp, 100, \"%e\", 3.33);\n+  ASSERT(mg_strcmp(mg_str(\"3.33e0\"), mg_str_n(tmp, 6)) == 0);\n+  mg_snprintf(tmp, 100, \"%e\", 3330000000000.0);\n+  ASSERT(mg_strcmp(mg_str(\"3.33e12\"), mg_str_n(tmp, 7)) == 0);\n+  mg_snprintf(tmp, 100, \"%e\", 3000000000000.33);\n+  ASSERT(mg_strcmp(mg_str(\"3e12\"), mg_str_n(tmp, 4)) == 0);\n+}\n+\n int main(void) {\n   const char *debug_level = getenv(\"V\");\n   if (debug_level == NULL) debug_level = \"3\";\n   mg_log_set(atoi(debug_level));\n \n+  test_mg_snprintf();\n   test_crypto();\n   test_split();\n   test_json();\n"
          ],
          "type": "string"
        },
        "diffArchive": {
          "custom_type": "string",
          "type": "string"
        },
        "diffDir": {
          "custom_type": "string",
          "type": "string"
        },
        "diffFile": {
          "custom_type": "string",
          "type": "string"
        },
        "diffFileName": {
          "custom_type": "string",
          "type": "string"
        },
        "diffRef": {
          "custom_type": "string",
          "type": "string"
        },
        "dockerfile": {
          "custom_type": "string",
          "examples": [
            "/crs-workdir/0196b4a9-9101-75d7-864e-647a70f24d85-20250509-104857/fuzz-tooling/projects/apache-commons-compress/Dockerfile",
            "/crs_scratch/2025-04-02-1700-251013123/2D21A837-170D-44CB-B06F-052E27484883/FUZZBOMB2/2D21A837-170D-44CB-B06F-052E27484883/fuzz-tooling/projects/libpng/Dockerfile",
            "/node_data/crs_scratch/seedgen-541jrz_r/0196a495-20aa-7dcf-9b3d-86814002322f-e1a14b8f-d404-47-1ktw_yac/fuzz-tooling/fuzz-tooling/projects/integration-test/Dockerfile",
            "/reproducer/01974537-0f16-7093-aa93-f7daf63c1fbe/22ee3b127eb287a06563d60df0b349af-address/fuzz-tooling/projects/apache-commons-compress/Dockerfile",
            "/shellphish/libs/crs-utils/src/shellphish_crs_utils/oss_fuzz/instrumentation/dyva/Dockerfile.c.builder"
          ],
          "type": "string"
        },
        "dstPrefix": {
          "custom_type": "string",
          "examples": [
            "eth"
          ],
          "type": "string"
        },
        "duration": {
          "custom_type": "string",
          "examples": [
            "1h0m0s",
            "100h0m0s",
            "100h0m0s",
            "100h0m0s",
            "1h0m0s"
          ],
          "type": "string"
        },
        "eid": {
          "custom_type": "string",
          "examples": [
            "20d50dd386ee68f21a68d3705988add22cc45c3098bc6ba1171795609a38a86a",
            "747e7430ea31944f94cda7e14ee4f86e26e9f49ecd6432d853e45d6faeea7700",
            "7edfdc55cc33835a1d5590ed2203bf756055db96407b7223d3cc8a8263bf1bdd",
            "8301cab74ca41daf0136a245c73d7d4feffbf35969ce7e5551aef44556a8d01c",
            "acd85e0f04868ff82ff6ecadeb1054bbb00ec013107e87dc62386ce8e4c7edfe"
          ],
          "type": "string"
        },
        "endpoint": {
          "custom_type": "object",
          "examples": [
            {
              "Name": "49mw2k08uob0kjn2k13cy667b"
            },
            {
              "Name": "elated_ellis"
            },
            {
              "Name": "qux9ymw8v684atc673vikisqt"
            },
            {
              "Name": "sad_gould"
            },
            {
              "Name": "zen_hertz"
            }
          ],
          "properties": {
            "Name": {
              "custom_type": "string",
              "examples": [
                "crs-directed-7d696316-2985-4e8f-91b8-8e5f90fb958f",
                "goofy_yonath",
                "nuux3s0rs2r41rz6gjsni76r3",
                "sweet_ptolemy",
                "yfb8t3xwbinxdqgqwduxz0kbc"
              ],
              "type": "string"
            }
          },
          "required": [
            "Name"
          ],
          "type": "object"
        },
        "engine": {
          "custom_type": "string",
          "examples": [
            "libfuzzer",
            "libfuzzer",
            "libfuzzer",
            "libfuzzer",
            "libfuzzer"
          ],
          "type": "string"
        },
        "entity": {
          "custom_type": "object",
          "examples": [
            {
              "id": "01974568-18e6-7000-8746-0c66b8d4731f",
              "type": "job"
            },
            {
              "id": "0197432f-a9bd-7d2f-b139-3a8688ab2ffc",
              "type": "patch"
            },
            {
              "id": "01974568-3534-72c1-a75f-fdd84c7d3b65",
              "type": "job"
            },
            {
              "id": "01974dcd-dec8-7d3b-8f9a-0ce846b913aa",
              "type": "pov"
            },
            {
              "id": "0197b0f6-ea1b-7706-be30-277c35d3b40b",
              "type": "patch"
            }
          ],
          "properties": {
            "id": {
              "custom_type": "uuid",
              "examples": [
                "01974bfc-3a2c-7aa0-9e7b-ebbf75c0d707",
                "01974683-3739-7123-8443-c9158ff416f1",
                "01974dcd-dec8-7d3b-8f9a-0ce846b913aa",
                "01974191-4f50-7768-848e-72ae7eb280cd",
                "0197ad22-3327-7efe-a61f-a0a0567a273b"
              ],
              "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
              "type": "string"
            },
            "type": {
              "custom_type": "string",
              "examples": [
                "job",
                "patch",
                "job",
                "pov",
                "patch"
              ],
              "type": "string"
            }
          },
          "required": [
            "id",
            "type"
          ],
          "type": "object"
        },
        "ep": {
          "custom_type": "object",
          "examples": [
            {
              "name": "cool_cannon"
            },
            {
              "name": "fsqfsshki7zp4j81eie6v7tt7"
            },
            {
              "name": "kind_aryabhata"
            },
            {
              "name": "sweet_wiles"
            },
            {
              "name": "u2bqz93nmpffoex7w3c7m03p6"
            }
          ],
          "properties": {
            "name": {
              "custom_type": "string",
              "examples": [
                "b7n6w5s7310yggw1mbp7kw6t0",
                "cool_lovelace",
                "keen_brattain",
                "olfxj3phv886dxyzijlzdr6dx",
                "vigorous_wescoff"
              ],
              "type": "string"
            }
          },
          "required": [
            "name"
          ],
          "type": "object"
        },
        "exception": {
          "custom_type": "object",
          "examples": [
            {
              "stacktrace": "failed to solve: DeadlineExceeded: context deadline exceeded\n25545 v0.24.0 /usr/libexec/docker/cli-plugins/docker-buildx buildx build -t aixcc-afc/freerdp:latest --file /crs_scratch/delta-workspace/address_d5f22f88-395c-441e-9c6f-7f58ed1b9937/fuzz-tooling/fuzz-tooling/projects/freerdp/Dockerfile /crs_scratch/delta-workspace/address_d5f22f88-395c-441e-9c6f-7f58ed1b9937/fuzz-tooling/fuzz-tooling/projects/freerdp\ngoogle.golang.org/grpc.(*ClientConn).Invoke\n\tgoogle.golang.org/grpc@v1.69.4/call.go:35\ngithub.com/moby/buildkit/api/services/control.(*controlClient).Solve\n\tgithub.com/moby/buildkit@v0.22.0/api/services/control/control_grpc.pb.go:88\ngithub.com/moby/buildkit/client.(*Client).solve.func2\n\tgithub.com/moby/buildkit@v0.22.0/client/solve.go:268\ngolang.org/x/sync/errgroup.(*Group).Go.func1\n\tgolang.org/x/sync@v0.13.0/errgroup/errgroup.go:79\nruntime.goexit\n\truntime/asm_amd64.s:1700\n\n25545 v0.24.0 /usr/libexec/docker/cli-plugins/docker-buildx buildx build -t aixcc-afc/freerdp:latest --file /crs_scratch/delta-workspace/address_d5f22f88-395c-441e-9c6f-7f58ed1b9937/fuzz-tooling/fuzz-tooling/projects/freerdp/Dockerfile /crs_scratch/delta-workspace/address_d5f22f88-395c-441e-9c6f-7f58ed1b9937/fuzz-tooling/fuzz-tooling/projects/freerdp\ngithub.com/moby/buildkit/client.(*Client).solve.func2\n\tgithub.com/moby/buildkit@v0.22.0/client/solve.go:285\ngolang.org/x/sync/errgroup.(*Group).Go.func1\n\tgolang.org/x/sync@v0.13.0/errgroup/errgroup.go:79\n\n"
            },
            {
              "stacktrace": "failed to solve: DeadlineExceeded: context deadline exceeded\n80518 v0.24.0 /usr/libexec/docker/cli-plugins/docker-buildx buildx build -t aixcc-afc/libxml2:latest --file /crs_scratch/delta-workspace/undefined_ec29beb1-8c58-465e-bdf2-bb908de051cd/fuzz-tooling/fuzz-tooling/projects/libxml2/Dockerfile /crs_scratch/delta-workspace/undefined_ec29beb1-8c58-465e-bdf2-bb908de051cd/fuzz-tooling/fuzz-tooling/projects/libxml2\ngoogle.golang.org/grpc.(*ClientConn).Invoke\n\tgoogle.golang.org/grpc@v1.69.4/call.go:35\ngithub.com/moby/buildkit/api/services/control.(*controlClient).Solve\n\tgithub.com/moby/buildkit@v0.22.0/api/services/control/control_grpc.pb.go:88\ngithub.com/moby/buildkit/client.(*Client).solve.func2\n\tgithub.com/moby/buildkit@v0.22.0/client/solve.go:268\ngolang.org/x/sync/errgroup.(*Group).Go.func1\n\tgolang.org/x/sync@v0.13.0/errgroup/errgroup.go:79\nruntime.goexit\n\truntime/asm_amd64.s:1700\n\n80518 v0.24.0 /usr/libexec/docker/cli-plugins/docker-buildx buildx build -t aixcc-afc/libxml2:latest --file /crs_scratch/delta-workspace/undefined_ec29beb1-8c58-465e-bdf2-bb908de051cd/fuzz-tooling/fuzz-tooling/projects/libxml2/Dockerfile /crs_scratch/delta-workspace/undefined_ec29beb1-8c58-465e-bdf2-bb908de051cd/fuzz-tooling/fuzz-tooling/projects/libxml2\ngithub.com/moby/buildkit/client.(*Client).solve.func2\n\tgithub.com/moby/buildkit@v0.22.0/client/solve.go:285\ngolang.org/x/sync/errgroup.(*Group).Go.func1\n\tgolang.org/x/sync@v0.13.0/errgroup/errgroup.go:79\n\n"
            },
            {
              "stacktrace": "listing workers for Build: failed to list workers: Unavailable: connection error: desc = \"transport: Error while dialing: cannot connect to the Docker daemon. Is 'docker daemon' running on this host?: dial tcp 10.0.2.2:10050: i/o timeout\"\n20599 v0.23.0 /usr/libexec/docker/cli-plugins/docker-buildx buildx build -t aixcc-afc/tika:latest --file /crs_scratch/2025-06-26-0920-224639118/0197ad06-e732-7ce1-99f4-4f87ecba22b2/FUZZBOMB262/0197ad06-e732-7ce1-99f4-4f87ecba22b2/fuzz-tooling/projects/tika/Dockerfile /crs_scratch/2025-06-26-0920-224639118/0197ad06-e732-7ce1-99f4-4f87ecba22b2/FUZZBOMB262/0197ad06-e732-7ce1-99f4-4f87ecba22b2/fuzz-tooling/projects/tika\ngoogle.golang.org/grpc.(*ClientConn).Invoke\n\tgoogle.golang.org/grpc@v1.69.4/call.go:35\ngithub.com/moby/buildkit/api/services/control.(*controlClient).ListWorkers\n\tgithub.com/moby/buildkit@v0.21.0/api/services/control/control_grpc.pb.go:130\ngithub.com/moby/buildkit/client.(*Client).ListWorkers\n\tgithub.com/moby/buildkit@v0.21.0/client/workers.go:32\ngithub.com/moby/buildkit/client.(*Client).Build\n\tgithub.com/moby/buildkit@v0.21.0/client/build.go:32\ngithub.com/docker/buildx/build.(*nodeResolver).opts.func1.1\n\tgithub.com/docker/buildx/build/driver.go:312\ngithub.com/moby/buildkit/util/flightcontrol.(*call[...]).run\n\tgithub.com/moby/buildkit@v0.21.0/util/flightcontrol/flightcontrol.go:123\nsync.(*Once).doSlow\n\tsync/once.go:76\nsync.(*Once).Do\n\tsync/once.go:67\nruntime.goexit\n\truntime/asm_amd64.s:1700\n\n20599 v0.23.0 /usr/libexec/docker/cli-plugins/docker-buildx buildx build -t aixcc-afc/tika:latest --file /crs_scratch/2025-06-26-0920-224639118/0197ad06-e732-7ce1-99f4-4f87ecba22b2/FUZZBOMB262/0197ad06-e732-7ce1-99f4-4f87ecba22b2/fuzz-tooling/projects/tika/Dockerfile /crs_scratch/2025-06-26-0920-224639118/0197ad06-e732-7ce1-99f4-4f87ecba22b2/FUZZBOMB262/0197ad06-e732-7ce1-99f4-4f87ecba22b2/fuzz-tooling/projects/tika\ngithub.com/moby/buildkit/client.(*Client).Build\n\tgithub.com/moby/buildkit@v0.21.0/client/build.go:34\ngithub.com/docker/buildx/build.(*nodeResolver).opts.func1.1\n\tgithub.com/docker/buildx/build/driver.go:312\n\n20599 v0.23.0 /usr/libexec/docker/cli-plugins/docker-buildx buildx build -t aixcc-afc/tika:latest --file /crs_scratch/2025-06-26-0920-224639118/0197ad06-e732-7ce1-99f4-4f87ecba22b2/FUZZBOMB262/0197ad06-e732-7ce1-99f4-4f87ecba22b2/fuzz-tooling/projects/tika/Dockerfile /crs_scratch/2025-06-26-0920-224639118/0197ad06-e732-7ce1-99f4-4f87ecba22b2/FUZZBOMB262/0197ad06-e732-7ce1-99f4-4f87ecba22b2/fuzz-tooling/projects/tika\ngithub.com/moby/buildkit/client.(*Client).ListWorkers\n\tgithub.com/moby/buildkit@v0.21.0/client/workers.go:34\ngithub.com/moby/buildkit/client.(*Client).Build\n\tgithub.com/moby/buildkit@v0.21.0/client/build.go:32\n\n"
            },
            {
              "stacktrace": "failed to dial gRPC: cannot connect to the Docker daemon. Is 'docker daemon' running on this host?: dial tcp 10.0.2.2:10050: operation was canceled\n412229 v0.23.0 /usr/libexec/docker/cli-plugins/docker-buildx buildx build -t aixcc-afc/lcms:latest --file /crs_scratch/2025-06-26-0920-224639118/0197ae62-780d-74c9-a199-e9fab28625ef/FUZZBOMB326/0197ae62-780d-74c9-a199-e9fab28625ef/fuzz-tooling/projects/lcms/Dockerfile /crs_scratch/2025-06-26-0920-224639118/0197ae62-780d-74c9-a199-e9fab28625ef/FUZZBOMB326/0197ae62-780d-74c9-a199-e9fab28625ef/fuzz-tooling/projects/lcms\ngithub.com/docker/docker/client.setupHijackConn\n\tgithub.com/docker/docker@v28.0.4+incompatible/client/hijack.go:60\ngithub.com/docker/docker/client.(*Client).DialHijack\n\tgithub.com/docker/docker@v28.0.4+incompatible/client/hijack.go:49\ngithub.com/docker/buildx/driver/docker.(*Driver).Client.func2\n\tgithub.com/docker/buildx/driver/docker/driver.go:68\ngithub.com/moby/buildkit/session.(*Session).Run\n\tgithub.com/moby/buildkit@v0.21.0/session/session.go:111\ngithub.com/moby/buildkit/client.(*Client).solve.func1\n\tgithub.com/moby/buildkit@v0.21.0/client/solve.go:217\ngolang.org/x/sync/errgroup.(*Group).Go.func1\n\tgolang.org/x/sync@v0.13.0/errgroup/errgroup.go:79\nruntime.goexit\n\truntime/asm_amd64.s:1700\n\n412229 v0.23.0 /usr/libexec/docker/cli-plugins/docker-buildx buildx build -t aixcc-afc/lcms:latest --file /crs_scratch/2025-06-26-0920-224639118/0197ae62-780d-74c9-a199-e9fab28625ef/FUZZBOMB326/0197ae62-780d-74c9-a199-e9fab28625ef/fuzz-tooling/projects/lcms/Dockerfile /crs_scratch/2025-06-26-0920-224639118/0197ae62-780d-74c9-a199-e9fab28625ef/FUZZBOMB326/0197ae62-780d-74c9-a199-e9fab28625ef/fuzz-tooling/projects/lcms\ngithub.com/moby/buildkit/session.(*Session).Run\n\tgithub.com/moby/buildkit@v0.21.0/session/session.go:114\ngithub.com/moby/buildkit/client.(*Client).solve.func1\n\tgithub.com/moby/buildkit@v0.21.0/client/solve.go:217\n\n"
            },
            {
              "stacktrace": "failed to solve: DeadlineExceeded: context deadline exceeded\n255632 v0.25.0 /usr/libexec/docker/cli-plugins/docker-buildx buildx build -t aixcc-afc/libxml2:latest --file /crs_scratch/delta-workspace/memory_4c58f339-8620-43b7-8689-d128716c762d/fuzz-tooling/fuzz-tooling/projects/libxml2/Dockerfile /crs_scratch/delta-workspace/memory_4c58f339-8620-43b7-8689-d128716c762d/fuzz-tooling/fuzz-tooling/projects/libxml2\ngoogle.golang.org/grpc.(*ClientConn).Invoke\n\tgoogle.golang.org/grpc@v1.72.2/call.go:35\ngithub.com/moby/buildkit/api/services/control.(*controlClient).Solve\n\tgithub.com/moby/buildkit@v0.23.0/api/services/control/control_grpc.pb.go:88\ngithub.com/moby/buildkit/client.(*Client).solve.func2\n\tgithub.com/moby/buildkit@v0.23.0/client/solve.go:268\ngolang.org/x/sync/errgroup.(*Group).add.func1\n\tgolang.org/x/sync@v0.14.0/errgroup/errgroup.go:130\nruntime.goexit\n\truntime/asm_amd64.s:1700\n\n255632 v0.25.0 /usr/libexec/docker/cli-plugins/docker-buildx buildx build -t aixcc-afc/libxml2:latest --file /crs_scratch/delta-workspace/memory_4c58f339-8620-43b7-8689-d128716c762d/fuzz-tooling/fuzz-tooling/projects/libxml2/Dockerfile /crs_scratch/delta-workspace/memory_4c58f339-8620-43b7-8689-d128716c762d/fuzz-tooling/fuzz-tooling/projects/libxml2\ngithub.com/moby/buildkit/client.(*Client).solve.func2\n\tgithub.com/moby/buildkit@v0.23.0/client/solve.go:285\ngolang.org/x/sync/errgroup.(*Group).add.func1\n\tgolang.org/x/sync@v0.14.0/errgroup/errgroup.go:130\n\n"
            }
          ],
          "properties": {
            "stacktrace": {
              "custom_type": "string",
              "examples": [
                "failed to solve: DeadlineExceeded: context deadline exceeded\n25545 v0.24.0 /usr/libexec/docker/cli-plugins/docker-buildx buildx build -t aixcc-afc/freerdp:latest --file /crs_scratch/delta-workspace/address_d5f22f88-395c-441e-9c6f-7f58ed1b9937/fuzz-tooling/fuzz-tooling/projects/freerdp/Dockerfile /crs_scratch/delta-workspace/address_d5f22f88-395c-441e-9c6f-7f58ed1b9937/fuzz-tooling/fuzz-tooling/projects/freerdp\ngoogle.golang.org/grpc.(*ClientConn).Invoke\n\tgoogle.golang.org/grpc@v1.69.4/call.go:35\ngithub.com/moby/buildkit/api/services/control.(*controlClient).Solve\n\tgithub.com/moby/buildkit@v0.22.0/api/services/control/control_grpc.pb.go:88\ngithub.com/moby/buildkit/client.(*Client).solve.func2\n\tgithub.com/moby/buildkit@v0.22.0/client/solve.go:268\ngolang.org/x/sync/errgroup.(*Group).Go.func1\n\tgolang.org/x/sync@v0.13.0/errgroup/errgroup.go:79\nruntime.goexit\n\truntime/asm_amd64.s:1700\n\n25545 v0.24.0 /usr/libexec/docker/cli-plugins/docker-buildx buildx build -t aixcc-afc/freerdp:latest --file /crs_scratch/delta-workspace/address_d5f22f88-395c-441e-9c6f-7f58ed1b9937/fuzz-tooling/fuzz-tooling/projects/freerdp/Dockerfile /crs_scratch/delta-workspace/address_d5f22f88-395c-441e-9c6f-7f58ed1b9937/fuzz-tooling/fuzz-tooling/projects/freerdp\ngithub.com/moby/buildkit/client.(*Client).solve.func2\n\tgithub.com/moby/buildkit@v0.22.0/client/solve.go:285\ngolang.org/x/sync/errgroup.(*Group).Go.func1\n\tgolang.org/x/sync@v0.13.0/errgroup/errgroup.go:79\n\n",
                "failed to solve: DeadlineExceeded: context deadline exceeded\n80518 v0.24.0 /usr/libexec/docker/cli-plugins/docker-buildx buildx build -t aixcc-afc/libxml2:latest --file /crs_scratch/delta-workspace/undefined_ec29beb1-8c58-465e-bdf2-bb908de051cd/fuzz-tooling/fuzz-tooling/projects/libxml2/Dockerfile /crs_scratch/delta-workspace/undefined_ec29beb1-8c58-465e-bdf2-bb908de051cd/fuzz-tooling/fuzz-tooling/projects/libxml2\ngoogle.golang.org/grpc.(*ClientConn).Invoke\n\tgoogle.golang.org/grpc@v1.69.4/call.go:35\ngithub.com/moby/buildkit/api/services/control.(*controlClient).Solve\n\tgithub.com/moby/buildkit@v0.22.0/api/services/control/control_grpc.pb.go:88\ngithub.com/moby/buildkit/client.(*Client).solve.func2\n\tgithub.com/moby/buildkit@v0.22.0/client/solve.go:268\ngolang.org/x/sync/errgroup.(*Group).Go.func1\n\tgolang.org/x/sync@v0.13.0/errgroup/errgroup.go:79\nruntime.goexit\n\truntime/asm_amd64.s:1700\n\n80518 v0.24.0 /usr/libexec/docker/cli-plugins/docker-buildx buildx build -t aixcc-afc/libxml2:latest --file /crs_scratch/delta-workspace/undefined_ec29beb1-8c58-465e-bdf2-bb908de051cd/fuzz-tooling/fuzz-tooling/projects/libxml2/Dockerfile /crs_scratch/delta-workspace/undefined_ec29beb1-8c58-465e-bdf2-bb908de051cd/fuzz-tooling/fuzz-tooling/projects/libxml2\ngithub.com/moby/buildkit/client.(*Client).solve.func2\n\tgithub.com/moby/buildkit@v0.22.0/client/solve.go:285\ngolang.org/x/sync/errgroup.(*Group).Go.func1\n\tgolang.org/x/sync@v0.13.0/errgroup/errgroup.go:79\n\n",
                "listing workers for Build: failed to list workers: Unavailable: connection error: desc = \"transport: Error while dialing: cannot connect to the Docker daemon. Is 'docker daemon' running on this host?: dial tcp 10.0.2.2:10050: i/o timeout\"\n20599 v0.23.0 /usr/libexec/docker/cli-plugins/docker-buildx buildx build -t aixcc-afc/tika:latest --file /crs_scratch/2025-06-26-0920-224639118/0197ad06-e732-7ce1-99f4-4f87ecba22b2/FUZZBOMB262/0197ad06-e732-7ce1-99f4-4f87ecba22b2/fuzz-tooling/projects/tika/Dockerfile /crs_scratch/2025-06-26-0920-224639118/0197ad06-e732-7ce1-99f4-4f87ecba22b2/FUZZBOMB262/0197ad06-e732-7ce1-99f4-4f87ecba22b2/fuzz-tooling/projects/tika\ngoogle.golang.org/grpc.(*ClientConn).Invoke\n\tgoogle.golang.org/grpc@v1.69.4/call.go:35\ngithub.com/moby/buildkit/api/services/control.(*controlClient).ListWorkers\n\tgithub.com/moby/buildkit@v0.21.0/api/services/control/control_grpc.pb.go:130\ngithub.com/moby/buildkit/client.(*Client).ListWorkers\n\tgithub.com/moby/buildkit@v0.21.0/client/workers.go:32\ngithub.com/moby/buildkit/client.(*Client).Build\n\tgithub.com/moby/buildkit@v0.21.0/client/build.go:32\ngithub.com/docker/buildx/build.(*nodeResolver).opts.func1.1\n\tgithub.com/docker/buildx/build/driver.go:312\ngithub.com/moby/buildkit/util/flightcontrol.(*call[...]).run\n\tgithub.com/moby/buildkit@v0.21.0/util/flightcontrol/flightcontrol.go:123\nsync.(*Once).doSlow\n\tsync/once.go:76\nsync.(*Once).Do\n\tsync/once.go:67\nruntime.goexit\n\truntime/asm_amd64.s:1700\n\n20599 v0.23.0 /usr/libexec/docker/cli-plugins/docker-buildx buildx build -t aixcc-afc/tika:latest --file /crs_scratch/2025-06-26-0920-224639118/0197ad06-e732-7ce1-99f4-4f87ecba22b2/FUZZBOMB262/0197ad06-e732-7ce1-99f4-4f87ecba22b2/fuzz-tooling/projects/tika/Dockerfile /crs_scratch/2025-06-26-0920-224639118/0197ad06-e732-7ce1-99f4-4f87ecba22b2/FUZZBOMB262/0197ad06-e732-7ce1-99f4-4f87ecba22b2/fuzz-tooling/projects/tika\ngithub.com/moby/buildkit/client.(*Client).Build\n\tgithub.com/moby/buildkit@v0.21.0/client/build.go:34\ngithub.com/docker/buildx/build.(*nodeResolver).opts.func1.1\n\tgithub.com/docker/buildx/build/driver.go:312\n\n20599 v0.23.0 /usr/libexec/docker/cli-plugins/docker-buildx buildx build -t aixcc-afc/tika:latest --file /crs_scratch/2025-06-26-0920-224639118/0197ad06-e732-7ce1-99f4-4f87ecba22b2/FUZZBOMB262/0197ad06-e732-7ce1-99f4-4f87ecba22b2/fuzz-tooling/projects/tika/Dockerfile /crs_scratch/2025-06-26-0920-224639118/0197ad06-e732-7ce1-99f4-4f87ecba22b2/FUZZBOMB262/0197ad06-e732-7ce1-99f4-4f87ecba22b2/fuzz-tooling/projects/tika\ngithub.com/moby/buildkit/client.(*Client).ListWorkers\n\tgithub.com/moby/buildkit@v0.21.0/client/workers.go:34\ngithub.com/moby/buildkit/client.(*Client).Build\n\tgithub.com/moby/buildkit@v0.21.0/client/build.go:32\n\n",
                "failed to dial gRPC: cannot connect to the Docker daemon. Is 'docker daemon' running on this host?: dial tcp 10.0.2.2:10050: operation was canceled\n412229 v0.23.0 /usr/libexec/docker/cli-plugins/docker-buildx buildx build -t aixcc-afc/lcms:latest --file /crs_scratch/2025-06-26-0920-224639118/0197ae62-780d-74c9-a199-e9fab28625ef/FUZZBOMB326/0197ae62-780d-74c9-a199-e9fab28625ef/fuzz-tooling/projects/lcms/Dockerfile /crs_scratch/2025-06-26-0920-224639118/0197ae62-780d-74c9-a199-e9fab28625ef/FUZZBOMB326/0197ae62-780d-74c9-a199-e9fab28625ef/fuzz-tooling/projects/lcms\ngithub.com/docker/docker/client.setupHijackConn\n\tgithub.com/docker/docker@v28.0.4+incompatible/client/hijack.go:60\ngithub.com/docker/docker/client.(*Client).DialHijack\n\tgithub.com/docker/docker@v28.0.4+incompatible/client/hijack.go:49\ngithub.com/docker/buildx/driver/docker.(*Driver).Client.func2\n\tgithub.com/docker/buildx/driver/docker/driver.go:68\ngithub.com/moby/buildkit/session.(*Session).Run\n\tgithub.com/moby/buildkit@v0.21.0/session/session.go:111\ngithub.com/moby/buildkit/client.(*Client).solve.func1\n\tgithub.com/moby/buildkit@v0.21.0/client/solve.go:217\ngolang.org/x/sync/errgroup.(*Group).Go.func1\n\tgolang.org/x/sync@v0.13.0/errgroup/errgroup.go:79\nruntime.goexit\n\truntime/asm_amd64.s:1700\n\n412229 v0.23.0 /usr/libexec/docker/cli-plugins/docker-buildx buildx build -t aixcc-afc/lcms:latest --file /crs_scratch/2025-06-26-0920-224639118/0197ae62-780d-74c9-a199-e9fab28625ef/FUZZBOMB326/0197ae62-780d-74c9-a199-e9fab28625ef/fuzz-tooling/projects/lcms/Dockerfile /crs_scratch/2025-06-26-0920-224639118/0197ae62-780d-74c9-a199-e9fab28625ef/FUZZBOMB326/0197ae62-780d-74c9-a199-e9fab28625ef/fuzz-tooling/projects/lcms\ngithub.com/moby/buildkit/session.(*Session).Run\n\tgithub.com/moby/buildkit@v0.21.0/session/session.go:114\ngithub.com/moby/buildkit/client.(*Client).solve.func1\n\tgithub.com/moby/buildkit@v0.21.0/client/solve.go:217\n\n",
                "failed to solve: DeadlineExceeded: context deadline exceeded\n255632 v0.25.0 /usr/libexec/docker/cli-plugins/docker-buildx buildx build -t aixcc-afc/libxml2:latest --file /crs_scratch/delta-workspace/memory_4c58f339-8620-43b7-8689-d128716c762d/fuzz-tooling/fuzz-tooling/projects/libxml2/Dockerfile /crs_scratch/delta-workspace/memory_4c58f339-8620-43b7-8689-d128716c762d/fuzz-tooling/fuzz-tooling/projects/libxml2\ngoogle.golang.org/grpc.(*ClientConn).Invoke\n\tgoogle.golang.org/grpc@v1.72.2/call.go:35\ngithub.com/moby/buildkit/api/services/control.(*controlClient).Solve\n\tgithub.com/moby/buildkit@v0.23.0/api/services/control/control_grpc.pb.go:88\ngithub.com/moby/buildkit/client.(*Client).solve.func2\n\tgithub.com/moby/buildkit@v0.23.0/client/solve.go:268\ngolang.org/x/sync/errgroup.(*Group).add.func1\n\tgolang.org/x/sync@v0.14.0/errgroup/errgroup.go:130\nruntime.goexit\n\truntime/asm_amd64.s:1700\n\n255632 v0.25.0 /usr/libexec/docker/cli-plugins/docker-buildx buildx build -t aixcc-afc/libxml2:latest --file /crs_scratch/delta-workspace/memory_4c58f339-8620-43b7-8689-d128716c762d/fuzz-tooling/fuzz-tooling/projects/libxml2/Dockerfile /crs_scratch/delta-workspace/memory_4c58f339-8620-43b7-8689-d128716c762d/fuzz-tooling/fuzz-tooling/projects/libxml2\ngithub.com/moby/buildkit/client.(*Client).solve.func2\n\tgithub.com/moby/buildkit@v0.23.0/client/solve.go:285\ngolang.org/x/sync/errgroup.(*Group).add.func1\n\tgolang.org/x/sync@v0.14.0/errgroup/errgroup.go:130\n\n"
              ],
              "type": "string"
            }
          },
          "required": [
            "stacktrace"
          ],
          "type": "object"
        },
        "excludedPaths": {
          "custom_type": "list",
          "items": {
            "custom_type": "string",
            "type": "string"
          },
          "type": "array"
        },
        "expiryTime": {
          "custom_type": "string",
          "examples": [
            "2025-05-11 03:07:52.783973001 +0000 UTC m=+380446.708055599",
            "2025-06-06 15:26:10.86169946 +0000 UTC m=+72647.952980787",
            "2025-06-07 07:03:38.102883893 +0000 UTC m=+128932.044371623",
            "2025-06-10 21:21:11.744350726 +0000 UTC m=+439585.685838386",
            "2025-06-12 08:30:27.300606616 +0000 UTC m=+566071.377042952"
          ],
          "type": "string"
        },
        "extractRepoName": {
          "custom_type": "object",
          "examples": [
            {
              "input": "https://github.com/aixcc-afc/round-gpdev-wireshark"
            }
          ],
          "properties": {
            "input": {
              "custom_type": "string",
              "examples": [
                "https://github.com/aixcc-afc/round-gpdev-wireshark"
              ],
              "type": "string"
            }
          },
          "required": [
            "input"
          ],
          "type": "object"
        },
        "filePath": {
          "custom_type": "string",
          "examples": [
            "/data/challengetask1629635628/tarsDir/bfbfc430-1388-4af0-a277-86766fbe0760.tar.gz",
            "/data/challengetask789337871/tarsDir/99238fe9-b4de-4d67-8d9d-9b1ab029e6ec.tar.gz",
            "/data/challengetask3151571555/tarsDir/28ec598a-6e2a-4864-96e4-54c9d60b0424.tar.gz"
          ],
          "type": "string"
        },
        "focus": {
          "custom_type": "string",
          "examples": [
            "afc-zookeeper",
            "round-exhibition2-libxml2",
            "round-final-phase1-commons-compress",
            "round-exhibition3-zookeeper",
            "round-dev-testing-libavif"
          ],
          "type": "string"
        },
        "focusDir": {
          "custom_type": "string",
          "type": "string"
        },
        "foundPOVID": {
          "custom_type": "uuid",
          "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
          "type": "string"
        },
        "foundPatchID": {
          "custom_type": "uuid",
          "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
          "type": "string"
        },
        "foundSarifID": {
          "custom_type": "string",
          "type": "string"
        },
        "found_prefix": {
          "custom_type": "bool",
          "examples": [
            false,
            false,
            false,
            false,
            true
          ],
          "type": "boolean"
        },
        "freeform": {
          "custom_type": "object",
          "examples": [
            {
              "id": "0197ad06-1b4b-79f8-99bd-62b9fff7d3b8"
            },
            {
              "id": "0197b47d-d26c-771f-acac-c5ea4a02a00c"
            },
            {
              "id": "0197b7f1-57e3-791f-a155-8c57b7ec5456"
            },
            {
              "id": "0197c268-8f4f-7b9a-9b33-b20f3996d60d"
            },
            {
              "id": "0197ca4e-5d18-78cd-80e6-84a0ab5c6f44"
            }
          ],
          "properties": {
            "id": {
              "custom_type": "uuid",
              "examples": [
                "0197ad06-1572-726f-b6d8-faf52c54b23a",
                "0197b7b7-3393-73e3-88ff-3e40164eec81",
                "0197b7f1-57e3-791f-a155-8c57b7ec5456",
                "0197c268-8f4f-7b9a-9b33-b20f3996d60d",
                "0197ca4e-5d18-78cd-80e6-84a0ab5c6f44"
              ],
              "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
              "type": "string"
            }
          },
          "required": [
            "id"
          ],
          "type": "object"
        },
        "freeform_id": {
          "custom_type": "uuid",
          "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
          "type": "string"
        },
        "function_index_generator": {
          "custom_type": "object",
          "properties": {
            "mode": {
              "custom_type": "string",
              "type": "string"
            }
          },
          "required": [
            "mode"
          ],
          "type": "object"
        },
        "functionality_tests_passing": {
          "custom_type": "bool",
          "examples": [
            true
          ],
          "type": "boolean"
        },
        "fuzz": {
          "custom_type": "object",
          "examples": [
            {
              "corpus": {
                "additions": "[2207,3171,54]",
                "full_snapshot": true,
                "size": 30,
                "update": {
                  "method": "periodic",
                  "time": 1743632367.7834408
                }
              },
              "findings": {
                "memo": "KFC-crazy-Thursday-VME50"
              },
              "instance": {
                "id": "primefuzz-533aa5c7-229f-4bf7-86a3-575b9dcb5246"
              }
            },
            {
              "corpus": {
                "additions": "\"[0081ddc8e0fc03edb003ec5507df2ed8a573d0f7bd84e06a3612f06d203271bb,00a963ab44604aac766ed2bc59c45d94b00c076165f8a0535cb48c010f4ff138,00db55c04361ff556043e9ca72b0a2ecaffa8f6eaa39dc25bffa0084519e833b,01b3352e6d9bb06addf75c4395e71f2ff4f11ad3ae25572c9fd8e1f7d2b68453,03261b2d788c66231cc62f8595abd5725bd75f323a6ed8c75279910f09f85aec,037f5bea0b958db0342cf2309f1ee2298a83e011cc4f75b2328dc847bcc3ee1f,03dbb86106222f237918cb33baae81065bd1b5f1f9a99684c4f21d8bd8126889,0426b91d95d1d5c93a0c352237c5f90abe30e24697f02fa040a44213ac85db9a,057e31156d049a38ee2fef9c6efe1917bdf88b98cf91cae791bba86068779ce7,05a7bac0fc39a03745bfb689709cfbc61e029f0dff0b89ee52912a378921200a,06c2cc3bf8079b6870567eaaa2ae65a83ff81bde4ab004f5b5a5fc5e66531251,07d922625b9557bf637960ce8cde237716f718ddcf9281365d171d77c01fa526,0826c195df0facc9283c381ed95a94710e20d2baf794f11b311bd2106604b4f9,082c55bb0dc77d495d3a2639eae230f71bb7054835ac6a62223207636740a9b9,084754d753f36791ce9cf1504b8c38739abe828dbb9d692adadc6ff7fdcc70ac,093285444e908573743bee8d90a4a163bad6c2c4cd6a2dbff4d9819d3d692eb2,09f737b40df7b3dfcaf28ed10a17f6a9538e685675f72790de5f3d41fd55b1ea,0a9fe5f4cc6d370038c962055191e4586f6d59df6831a5e063d0b4bde17e520e,0b44296d727204eb84e4fea87dcf52fcad9d4d79fa798aaf242a50011bbc4a1d,0b70b58fbee5141a25b00fe06807344b67d074a2f4777f9433d9947727a937a9,0b7d04e392559e111067e093ca6585abfed99981026e563da381fb6ebeb6fc13,0b965d7edbe799204f81cebe8aae7df752b941b8c8213be61e334f0143108476,0ce567c6ed818c343bac48160e62881aaedf251300f0481158b8ec2e65e75947,0f4c88084500cc507b71cd0cc282cdfdf8806cc54e5f5f6476364d142ae328e6,0fcab2e879dda8ec8194d7f7cfbf05c93d765cf1f9c84c5f68f53b630369b21d,0ff1870a868e5e3f9a8f1ece7af57504d293fb959c36b66f064c7527a1ef442d,10dac44da24d1476439f206ed821b7a9a6886335b90371207ece406fc9daa18c,114a17ddc1ddf539af8ab40b734b8509a0304d37bdda7f89e0b80af335112632,11e2a47005baddfb3b7f136071d8cd3503df77f714280070e757e48b37a05872,125fb0be56186def28652f69b32ca2945664884c950711add4a22bdad2e2490a,128cf1450e4c3bf5fede3e57822eda6c4f2c9a5e916270e3042ad134bb059e01,1381b133467577249d1a9fff7048251c4e668796f9d86f0611ddfff1468b19cb,142f382c1cdb5d2c12ba182adcf86b2f1a798b00ce9dc1ffd62f5a52bc927243,14461f61a136f67fd7767b64ca273a670f5e976edf0cefacbbf4955365a4cf9b,14d4bcc3e0ca5c24b8433e117997405ba279671d1d0f3137a30a3cd34f31f8a5,14d795c69f84b2d0c4c1a6e5d7018e9328c2a5fd3797664f33b7057adbfd2d39,158e29c533a9c7d2aa328bd69691ff0c5acce7197d9d3ae27ec07ca0182655d2,15f62201294a3acf5ed249a21d093fa08390142b3fad0a4273c1959cce6837d1,160b1d8bfed814f390cab84b3fa60d92dfc116fd6620389e7211675dc6a4c793,177280caa7605e2f165bc0f4b82971d1487c3a08a7fe2e7dfea6ed3910efa1a1,17f695c80a8fe5bfceb435ebd0bdd7d499d7c1bdd862490115e7724e5e84537b,1847ef5985e513fce47c5048aacff8946f8c765c85217512f651b8bb2f1aba79,195b6f8f3021c74eea0a8d1866439413f09de5fe9bdab63907b794906a404647,1b39ed656baf6ad689215da3e9d246a27d644676b710de5e88888a1bff32e7e9,1b912fc397c3f3522b2a054cf0e7ba160bed1bf9343f7251f37461ca200468f2,1ba548e8d011934c77890c6ec619b8ec7d7212c9c5be328d1e2fbdeed784eacf,1c16f8df8ce3767f9d40d21e3198d87d87abfa629e5703d121a2c14b00eddf4c,1c9bb500621a0fd46071cdd95c542283dc3adccc528cdd71d73d28b205137963,1d05f9e1710a7f49c9dacd3b26077b220a2cd1987882286e4b6a7a441bd04b05,1d066dbea418bc3caa7914ed0e805653eee76de7f5b6cc61eef5d5ce2942bf26,1d427a88aa3f56e0366df9bd9f47bc34b4267100d239595021e4c713b12651fe,1d8d94c9645ea2591b54bf6e8ff76a5759e4d56030d64f25041027dc5c130f9d,1db3502405696e91dfd38e33793d8f86e96ab13bbeafe6689a9786e828134acb,1f15f13e7aef6fd74490ae57b847a1035ad8650b7430d4d5c531e48b8d9a35cd,1f4fb10dd2e1cb7ef4b0a8802ce91735fc9ca81b1be268adfa0e2358aaf5d2af,1f88253c9750909f0ae1bfe6bb06c80f92cd283f0dbcfc98a6336ae5f235ac57,1ff09fdd8bdd356e8b96dad9fbd96e311e90d81b2682cac0432ec0295fd2b01a,2030be0d7cb8a0bf2458601675b9da5d4b6100d52b46ac53de8d81fbfe45fef9,20604e3add25ca1a8530760c33f84f5478c43c53686c2026cdb41d0931fd574b,225420307b748d313d353c0d35f590d61907c27825c4cec47c6833be4ed02b7d,23adce46c43052c97c729a76366fbe839e2db53332d49f60df08b2b99b2b22cd,23b5c7e2a41afec219367bf01d08c163ada906a035c09bad8cb1859d768a8920,240232fc0e0fdf307e5d8b938c500c6dccfac970fc222d14e3451698a46eedb6,240664817b9d9d4b37a74e9c52b3892de14e02b8e51ca27af6a6c682acbf3b07,24292d4635e76c35392ed93cc228d21916a8cac4c92a7d74d290dd3c245fc788,2481af897a05556b6b34d300a8855f95e498daf8da22e57f1fd8c91ceaa21aca,26436bc8d0ad3430147e0e490b5e3c46f0dae817988f85f1be97bae655f5d2ba,268a1faeddf8379c8d12334eb4d00887245d7dc8f0fd8378ec3e36dc17435cf5,26f58b392ac72a71145825ab1ef90d1eabe8ff632e21dde2d249684b62ca18eb,289adde2f2f1e8f261263ff5a6bd148dd4706c0299cd7cabeba3874ce2b0bb66,28cbcf8615cdd6b4f937ba0102eabbc659d3505c4fe212503c9237c075158b34,2930a2805b6260986f8c5d001f95dea489ada35201ea73f0fff547b3af5430e7,29db588cb699c0310c7dc8e320cf1f64f1a12f570da1d0a8fdb71e59b68a5092,2d37fbac5da53f31a0a4de80f1bc8837fb029657af57bdd25613fec46ac9692d,2dc658892e759db42e3f5db770b6cf6890c7711044904ba136997a860918d954,2e83372cb6c222d3ef4f8b9a12153bd3c55794f933df847d66fcf827318bd424,2feda520f3941adcfe4a89e42121842d0536b3a69ef669f5848538c6439e3203,3094af2461405b5da15d6989196e134f499c2d5eb98f151c2f8b0d6947450ee2,30b4a55b0275e36dc35070b6acf5af2090f2f75ad2a7b6716250162c49e535c3,30ddcca6e648e101381a2457fa92b595bdc70dcbb7503cc2fa58e6ec4b7fe707,313b6e1be372ccd0c4eb7b4bcd9126f33c612a2c7552e0304a9d3ca8ab9c15c1,31bb795a09371d475b738955baf8dae627dee1935541160a8fc425666c1ddebd,32eb334b4a6b907d156369d0b9ee5aa8e936a9798cea807084cb8373181bf188,330efd7743876724341908799cd1a5f30612eec675d1d4db8f0b91677ca485b1,332c2547f65f9b88cda6b8663aa3325aec848362473a03c734c404b168edd5f9,3411547ad0315b42f62c7f50a59da1de6ad612606386987b892ed0d02c020111,345db918b8baf2c80d969d5ec3292d579e0e17a7fc0baa14d547591677c9d606,354509fed16771309bb2f4e14caa8d9c9ba49dcd33c96e1296af07e1faed94be,35867c86d089a41811995993bd7e6a86b9b9ff3bb211f81df7c1e4041ee45719,3656a6cd8118b5c0771204260d0669e831cde793762e88a0cfa1f52bda872529,3686fd3a0466fabbe3bb8383394889f3662603d9025417aa58526dbde6d485ac,369b6521aea06e0e75deb4eab2b1a97f1d8fbbfeb05bf91b0489cecca4177afb,371026e9636d716f051c6be59f5a8e95767bc3e9a9024e62a737bd6163428ba4,3794c9f4c4ebffc5c5653eed57f7d916c461f9c464aecc76e7d525154a68819e,38123d3d319403bdac4faa6a01f0110cd9939c5749d9bab83bcdb1a6e80b6624,393bf03ffc862c155674cb9698010039d58a0e4e8886947a93a69ee700fa66ef,3a2fb3a86362989812f5a0ca096cb8111548b970b5e482811605defee8e26412,3bcb9c18272e7d7d27b66815f8cc0b80f067f26121e8fbf224a7a805d1d403f1,3c5d498ea1fd9dfe2833fa28ffa920cf1bc615c3084d4fc116a3e29bc0870efd,3c6d8d6717ff4046a4a65986bd215aaff8f19363caa64c095391b04e11eb539e,3c9c1561a8b8469c71c62fa9a49f86d0fccbc4dd8182616ff9dba583556209a3,3d7e4c80ed8f5de239321c23a0494193b19c42038c68c36369fa7c6784d015e2,3e4158a8f9c752a95d601511c2d43d953ce37c7f3bd033ad307a9bd1be1c0add,3ef3dc0fd85003f4042d2a825991cf44a0a49617bb9d92d8bc7288a61155e00e,3f98461bf84107011f70059a57104633ce23bff4df5e9240e1d468753ce79a8b,403d359d279e65246c9c177dd395ef940cd5487bedbeb2715a48b3131ec75be7,41834b5f4704b5567d636827ca56f1d25e876642a649190564999fb6c9f53dd1,41838012721551fa6fedb1d292e81152a780411d21f0d7af116799d0f105b118,419ef720f6b127cd24dcb833ddbe2aad65fe2217e4515abfaee13f68ec47d783,41a27c649f17832e530a712cefe6328937e673e0e7d111044c085bced26efd89,41ca9bb4be571cbb0e99eab1045bbc22c03020b1a278df3d89b0b840a7c7373c,41d6ffc2f7558fa3ba608ae78022d66e31f1353b3c52ac40362b3b35277ddbc3,424a17a22dc93a9671919b6a281db9eee6cb1e254bb873b89334b26627e5cc6a,42a358564baa61148f3c1046657c42938f491003590e339285f7785ec00c6199,42bb8ff291d1c31dd8651e5f614b2a4e31c7d8da2c5f4c41bde4e8213e5469ca,42fc1462ecb5093eb7449ee97f1c91be93f7227325d8ea8b039f933ea3ec3965,442436122d27dbade246c6229cb972b7f9a4289311ca3c84f699d4e5167c3f5e,4424399dc00c00d713d2cb18344c6a95dda138f939ee59b3c2f32e65eaeb1c0a,444b420dd8d1623164051c958277cb4eca2e2590ebf77c0d5d3b2177b62f40d1,4456ccc1d5610644d763c78e7299c752e4ae5f457d82edfcf16845dba8d3d965,44d691f68ec7c7e93b152d3dcb5aa5e8262fb6546f3f63cc4c11526175c09b56,462b5d8cc45436a4d3fc5392e7d9e9011a19b2b6012c62160750f4b5f13a1d11,4661df28fff72969ac48c53b87ccf977c69b991b208b0a8c54d476250c7b1ea1,467dc55340e98649b391075e46efec0f7a46fb9b10b3fa48f94c02f09cdd115b,468883c86003dc92462c409b11c3bf3a16e7e3c4cf9594021aafd5c054557bc5,486c6a37e49e48604f84ff7645260c085d1a8bdf7ee348d24d1f79e9dce365a7,48746c7742f191e0213533f80e9cbf798d0ae6c9c4e2687df0e8c605f3fdd304,487cfe3db39b7b3901b87dc15353dd9859fc4c6709d18f03f6c234f9a5f4ae9d,48982ff338dc34192086a2bc4bfce7cbde86244bac0a6587bf81982d5e9efbb2,492288ca5fb46825d2c8a8bc87d83f454586f7efdd84da06b095e565d5386023,49cc4566f28db37646cf7bfa9831d9378d137df623b8f6ba2d07eb018f76fa0c,4a3d5b4cea1c1d077c490c1e18dee44609104f2787f17b32d2f7cdcd6e598677,4a7cbc208e3f15689e8dc9fe61df8e06f646c5e8b6aa726741284def74aa6f82,4a88cd1b9c999bae4e83ea58fcf2cdf7993bcbd3ea7e8722b56054506c63535a,4ad0585b4f6b9f46a5ca14ea58dc34b54888a08150ccdadd7fe8bb67ee22fe7f,4b966bc7256affdbe5c95129949d35a75fcb606889382246bd797b7bd1e32dd7,4cfd94b5354c7d2d4e2b266b3231e9fb45c8d2b825b3fd59047918a81975585b,4e6481f3fc3ac19770a790d145dddb2a466ee559411517399c80aaf0750e399d,4eec33cab11b4c159b5f215127c05253158b0ce3e8064ab23f40fd0bb3a30d74,50b321c3c733aceb6b93d095ba3d31fa4174f561be7be37102762f7db9afeb5d,50df43b26304616057a5853e5a993dd6542f24d201bee745413508df90a3ee20,5144fc1e0cdedbc0ede0fd0f839e55dcc44c30c76e5af929b3b3863f2afb9f5b,52aa193d670a070e6fc3279e34ab50576c8be89fcbaecb8bf87db91932e89d21,530eaf20191c35b495a44fe0d27d9a0da28c58b10fe606ae4f921482ac8a1b95,53c0b50bc512854fcf323b671a12bb837eae66a2b6fd374635ff198aa6d67587,544afcf05a76e5c1149538096d0a3492ed682fcf54b47cbbc8a3783017c43e45,5459bca1f31d79018c37e06ce29f28374afdae1776e8c72c28e68bfc2e011784,547a9238c82cbe47123823e2874ffea695f4ab0e58b0a932f2ae41549a6c7254,54f243d1ac08032f00846a91a29dcbab865492fa13632456e3ed039f0f56b428,5621fc51fcc9b445a777668735eb1548195f8ab9dab2637ab5bac6f1740e23ee,573a49ec31e68102b3b65d65ece3588f951b2d33dd80defee12b6cc8b4efb671,579561bd77a369e7a753661a70ae47f11623e2b9f57948a6c7c4090822cc0c1b,59b37220bd70a8e449f1103a1313434343fea700f53b847ea0ddf5daf8538443,5a41742f20c5a9f4f29bc3c6b6ff6c1ca8f182ee3ca768a1f3d144b5f0c42738,5ab4a0bc99bce451058cebda9022b7c368f1c09dbac3bfbff9a03cfdc9a4af04,5b3e42a3ef67b150fa45960e6991b11e92bd28a64e947bbfebab186782485ee6,5be2d0f3e50a02374bc0adc04eb6b1b09a541134459fc158aeec6022f6351c5d,5c23fad65a8603c646d42149d3e351c8439e8103de53166b823f061af5feb224,5cebc5c3d0bdefbe14df3d6eba3722cdaacb0201fedbed04b4cc2684a02f51fc,5d007c807dfe9493f7d0af8c15aa9f4636d1e2b021922e449193e013081c3e15,5dd8c194b4dcd3ce2c4bbc06eb545957d4ff5200fb49ef1f48c0b7b44f4fd318,607c87428fbbd4e8878ba87284527f56d6508d6494063e5a97e7c3b40d59b843,611935e5c5c13f904dcddb72d6484aea63e90d7fd07b72179aefb782e259705c,613834473a7cae21c67ccda3e8500e59b857d16f1d7effdeb369027fc150055d,62345b028e3036545f1575cdf4e28e1316f1fae57ef491b32c0d8fa679feb1c8,623935382a747ba345bc8ca6ad5c792cbf3357921270533df6918886f7617810,62ad123dcc65f98bc9efee60364c9e30e18457e8fffee31162a77c0e107b16b4,62c33661dfc8f67512d54112f408380bc1a632ce01b318c0ed45730d96db5770,633bb2691424d7bd463db236f5e487150ee331ddd671afb180fc339f3aa7776b,637135273fadbff4e8a84395c5fd63c180fb13413cb29867d63e32a5b9be4580,644158c35ffee0d7efafb625ac37c0687b1ad2d91f9096d009059557a46b746b,649b03320fa133eee17caab722e8a26c5bf86be1acb33165532e0a111fe39453,64c362e6125fd98ced0396295e53def25d03347e5afd90207d1d40ba6f5a16c4,653ce74e1f412aead2a6fa7a659ee51fa39c1572c3cf3e78d0d43ea1c9eab021,669c843f4e323ef7d96f595ab501b71bee31431b124e6351231e5ca0d8111523,6853b40607d0b6de6e42c669a56286b47e281586dd344dcc1d6e0664799809a3,6adcd7a21443e9024ce0fea7caf46e3b91f7a0daa9ba8b1d730a2db0585d2577,6bab2c54875c779321e87643258a2a772f6ffd23d420006a40714e2b2d0200cc,6c02304248428f4f07573dcb84a83232554394f927e212463af2790af333c103,6c532720c26c7072c42cbd1c2b14b365da7b813bcd50e5b4e0a0a05fde03d412,6cd14d88c6dcd33aeddf73c96664f34aa942c410319e6c95c50c7ebc4890334c,6ce02430c2b4f4c962073e983fe54781748faae27b223843fffec69f248a6eb7,6d7bd9019221243ddb7342c7d1a0d8ab4e75f8b98657a8784f0be1722327de6f,6d8106291b6b3dcaf9d9c5326217cf834864cf8b81f2a896fdcf76c12dc1ad46,6e038a20f7f74a34c8a471a544aea5c70f832e82b34d1eecea4e4edcab2b18d4,6e7eb69eb5f16b452e4896815bcba0f7450af40f0154cfad27dfe7932274a7b2,6e9455b1d8adbdd998af3e170cff27ea575cc7db08361f4ee4d4fb0b64c2c7be,7013fd4268744808608a24f604a5b01d8a8df8f6ba474baecd282adbee2451ba,707c02fe0a4800e99a0d23592b3d644f88ce9943d8f29e17e3f4cc622df057ba,7096a4c4ffce0b4638d1591292722af23dfc0d5298f7f106737df162591ac3a9,70b0d2e98a7b19672675c702c663ba2ad047a4d85c03832c877f3caf5130672b,70d96c140beb261fdd8bf45f89566d71a36a22df3ea8e4fa038944cc9e4911ca,7179ca84e5158b9b7def2921ea04f5769ee1cdee12c0feee6357e5a4e3c4e21e,718d63c918c2664df56c7abb83b779a180d6a7f102d1225f8fa4155edfbe5f61,71c8fee8ccdd8cf3b5e104174fd4df0a2da300cf7974de1e473ac57b3bb24275,734d0cf59a6076d08cade23238a362c50f6879682771f0c3464eae1157b8a40f,743d14f78491c6c764363cf0e56c3b5cc097e1ea179f6b781a42e950b28f904f,74ddda1e730a8822d983e19ff41aad60115558c8913fef03d5d5a1b2903d96f4,75a4c27558060ab44567fa255bdfb0c6d43a66586d8a4e22177243212a33569b,7601184db8ec7b7790de6ef060f3e2f820fc8f67d19081c159e1015e7e7b460c,7699aae20a7cd06066d7d861660ac565889f584ebc114974f7533fe138b04b55,7699daebcfa42f4a130a47c00c5af8fcb00d934f6d62eb0c9b1933c64cca5cc0,76ae5908ad809a64ec771cdd364cbd76f6254f44f96f08b2d243e57517213fb2,77110be828e4def4a14332fb823aeb51a63c0c46854a82ec473e38f013fa3d9a,77f878dbf2fda3d84163df21e254198c37d78a1241e44ee16ab8d22af3ab187d,78711193d6277b754c32f0dc464f5e4c1ea848aab046ff9358b3f1b7e5774b31,78d84f5bfdc22a21239acbedf0e8f51bc7c56a00953e95515dc43be2e77f31ff,7a50f3b034377b37f2aef2ebf48022b4a56c1ce5076fee2c615adecb1d65ea5c,7b1645b0fdab55e20636e4606eb04a91d75705abf09817b7f3522e8ada4cbfc2,7c0206f655172f675ee0847b3df9c5e53a117afe954b7b1d53eb7e59d526b949,7c61167556ec81d6cbc4153897ad196358c08d8a9dd7bac53becb4032267315e,7e26de10d3c8c3a364f24a20a26cfd810a5b9aafd45f8a516c38b94f0e400260,7eb1911a87c5981e9e6ca900ba3ce7e96aed612c52b548e983331248bf3e82ad,7f02886686edc7ea15f769bb8db174cd9e257856980dc0efbcc89e8d9affd412,7f49816950ff7d10a71804120e577dae84dcc4c2bd02cd665a46fbf33079a92a,7f6c9a2707c75bb626b1513840653649754897c3458acdb1ec998b62beb616a8,7fb3c2d9f71835ebaf145419fe2a95399f175f2989c86f8864d2229a08f06b14,7fd93b019c56010eab8a795767e52563ad7ee6e2c9a1360db18a548f6bfd650d,7fe2ea09c64d043eb6f942e614708aa3cc15b7b5336fa4ef624a39d25e32d232,7ffc076862d395c024a34106d41e85b518ef87a0792a2f42e11eca74b53af793,810e9f6eefbfa4c78177d2c3e9dbac8b3e29447572e117a535bda1dc313344d2,817cbe38596a6da395ff1a040ea8c3648189a77ad096b6e3c10556e9d112a957,81b20cd4a999d4c4c60dd7ca78b527e263c083592b1b4547b7cdf5086405bc58,81b761c311c8b1dcc81a6c1cb6d7ec51e2f1883abd6af6174734caedbe3a5377,821d11df07888733e29911a0671ca8d5b2c7f122380e344c979b5af5665a467f,828f54c1c8022afacddbf2b7bb640c3f27ce6f18633308b463f258491c503eb2,831021573d35ad9fdc8db4a648e4dd78cb14c63e1218bf03f463cdfafaafcad8,835487ceaa7ef41a973d1b9d9a667e06d854b5fd8d1f9d121ccdc1b6d588e25c,8382e0bf3aef849deb598562329162716c5d0ae6ac27f1280d0d9185ec442af9,83a1ff1f2dfc9574f4122c623f69c4a13ee1fdc4c6a7e093eea2466fe3862687,84a233ce6c3d8ec06e4c84a3a81cecbd8b46293237cd0a85fbfa4cdc010ca7ba,84c2a3004fb89bb4dffe5f897a8516e0cfc6255b41a87087971fbd5fb3ae60b3,84fa3541bc5b6dcde934adc22a9c85fc4637512a237716c12e407a670b86e457,85a2620ced3228c609a584537d08466e296358e8acc942e0fc59d8563f0be58c,86a215bfae0925cd3abcc324269d453c4b900bbe240b6f10ec07b7a82bc321d6,878f379fddf7d90e0e07d3433646051e657ccfcc7fc2bed8203d0e0d8cc3b82c,879b122eb8a86282d297773eb100e3e026503d602d4e45700f08051260be4bd8,89018fe6b1397e4e4c61496bedd1491ac0c1281cf911ee047d8c1268888ccd4b,894b5fa0cb5a530ed22e7a2c30eec32ef717cf07717ac3c032191d3e6d5d1066,897922956f0eea29450597d763fee7cd591c31223f5c2014b635330621b4d14d,8af12b00a3175b6d72aa5bcb58a33b86d84e71ee79c0d42a85f7817e803970e1,8c2004b2905dc1c4cb70653d745c81fdef02b6da0f4b78ddfb460a3a18a9d499,8cbcaaa876562706b7d33aa0b4ff93c431ecdb4c5a619b221c7f42c313b450a1,8d18d877d0de78cab8f211c2dd3bd5d129c51359b75b15df042241c3dbc90f14,8db2cb9a2d94001ff21c3d485b6fc01e0566a689037f9f189c53187d7075455a,8dd3913a1b71f15487a2524924364fcda7e98d97795b97598797b7049c8965b9,8e191aa2669c95344b9c6d51d5290defad1a8caf9e6290fe6821c9ea7bb1907c,8e5ba34b482ef5b0fcfa08f473cb2abfe78e0b6d6d01a974108261d6ed83fd71,8f3ffcde94cf41caf7c5ea292738856c8cefc125f0010202b01bbd05e2918a5f,8f7e284674f699feaac54484a4f92ec02a2388011fabed43954ea6902bd06138,8f8ecc8852830504c9ac4c20663241fe9758b37fe9709a130a45a585de5afeb7,8fe4b8299ea5caa524e6d39585315218f0506c17b04be1d80b6322bb30cca444,900f0f6d05ce38eb20b1014d2ef63aef16e855a591ee9ce0cadb80ef5cc05bec,90234f8203384f484de63c76e77d90995fc8ecce797b903618c9799c615a849e,90549f61d8f54d11591b25cd516182e3da721bae8f488f925b38df57840cc07f,90d8f66f7ee94287441eb60e641c35c5ace70285b4a72ee8ceeadae57c9b20b1,91662da0ab13c83f194cb146f4487556fa489a6e990d4a4020ede1af97ff0b7b,916fafe331496fc7546dcf246113e23c751f87094e26252856d8cb23b4326e56,91baf1cea250678aa958c5fac3ad3cc6b91a27671af34f55b89948a6bf978f77,92406c24474dabb01145ad213d6d348c44e8057c5e7a3dfda82fdfb8ebcbb473,92ebc2592a36c88af06077ee28d172af6096e4e2b9b5515c56d7b42af1e80909,93492c34a762a567d9a03b3fc6e0fbe84d4ed1ea12061bbd1ebd714c8830a348,93793e54dac066e9f3576812a779a26d845fdb224620ab816c4ca6c368aee1b0,938533bec1c07a820b4c4ac532d7c796eb2c8c37247efc77cd1d2baf8438d26b,938d5eb33e77b0242e1ccb0fdab42c47de144d75ac6efe36672a16bb9a925d5e,940c537fe9f2f2cb4596a5cac51d4734729ee30bbaa75736ab04e96654ab5e46,96106df402b6823b60f750adbebc846daddd77457101e1d0aae2c393413629e9,96632d884ee5919d5757f0e02d6b9dcc043b4fd39225bbd5e532379fd11cce8f,97a3165c6ec2be9f63d10b47fa4c0e7d411724ac4908b88e9bc1a3e3a6e8f81c,97a3d1b2410adf84232838cdbc4967077cc8942c844fc8db091900fc09bcdafc,97c67f5f84bf6d85965554968a7e16724978282a75b9d67135de307a5c0bc918,98322f7fa5564f880622f49bcbdf51c57983c620eef7953e0dcb153ae83802ad,985527d9827f57375d10af18abe1f5c0512d021f6c0c51b980e047be5acf98cf,994a47b6540a1ff2363753ce3da1bec866ab544565b253e272fc8b91fa8c7f99,9950be3ee1ab9bb9ba5817211c0960715dbc62ae97741c5f72741eed50caccb0,999ddcbfc69bf5ad045c9da25ef10abc1ba07372151af6b65da0f0693d692be0,99a151e5cd79546a267a0d07e937398058688dee0ddd86e53de59d579f643b4c,9a935c0b7d09010239c5bb48228723737294ee57f7d105ab85a032bccf3138d5,9b6c301de6101903b0659e262e8c46be18589050cc7a0f0bc433ff5936f13607,9bdda780ec5105eb4ff80f3e116b319c3b6fb3c9705654bd52d3c36eec086c99,9c337cb047803e29fa56792310212085434a959f1e6535d6191eb575c60d0424,9c8342aaf54ef72281e9a5c3204a96aa78be17011a4a5382ed90af490b80b3a6,9ccedb7a9330321eb1867810daea7803bde5b99b76525727acc39c7c8b63a966,9cd1d70af57e9c07cce73c0dc50b1e03b0108fbc798fff8db06e7ee06c77c764,9db06776cde2d780ea8f80d3089bcd6950656fd9ce865bb14d00a58f0983b3d5,9f45bec7ed5abc4a785360c3c8fb6477378da5a0a70e5e923232dab03ffe7e1b,a0861ba419189412365e67c6f343db86b721ae9f3a60ab0a7a78f15ce26465fb,a0e2cfd6afce5d8cc24870329e4524ccce17679ec7d7ac05b09fe3ce3f4ca286,a2336768415d4d8cd2e7008c22745cd023cca3b65f54ed86edd6a9202d8fd78c,a2d057c30438070623e5a645e81d4fe6995d23b8caec82d4af24371bcb214319,a39003bab8824e2f6b3d6cce9fd6d3ddd9db1a36e2193d8f28186ddb7250155a,a3d50d795015b081b3d3117e9014d80ed115fd63f21faa55559a820d219e15f0,a47e0a358f49459f2d0228c4d0af6df6ece7931affffe51cfc34c426ec0091ef,a48ab0e3208ac51133048a20dbe2b63f66df1ae07b91b57770aef473eac484ea,a54d4992fdf14abebfc671ff86a806e81f2495a9b94bc42b0ac4d85a90e1c199,a637853f8877c6638257491ef6958b5356111262fd4a48d1e9892cce4888a7bc,a8ed39ce2f5a0cee4e48eabc8883807872ee732d53d84c69b9d59374a3d07e4e,a9bac2e8ec62162ee07362d35c95a0758e445ec4af369bd7095496b1ccf3f449,aa58e09a636e3a88a3f5080dd3a1b33411c8174fd7fa37c45bf2f8153e2d7090,ab00e53b6322545196491ac9ede0c036c66483f906fdb9b5d7aba6be9f786ebb,ab575aa789cdaa80212865f45ab5b493031d0a47b90e1e7cd5beb86644a3a2f1,aba8f156d43416e28894f67a3fb18a9588a5dc1c0408dd5af6ea6455f4bfe987,abdaf50b4c6702a76ee85db5164729e7280a8506fa4ae9bef4f6fbb10ea718e6,ac72afe6aeacbc063e2578476a7bab2bcd21abe05defc9f044b1d163b94be510,acb227e71c730438f77a9b9a02ad46540a2f6cf08a1e12cd38def5a29dd99c53,aedfa1b77645b99f6f974901e09bfc80a0a50cecc14b99b6762f78468373ee10,af1380e7f4ebff5a55b1fd396168e83ef8387c8e14e4c68b402657b80a9f0aca,afc70cd315a5a9bafe2c58a06de24e8a94caaba66449005a7e1abd942b8d143a,afc9673d207c522f6874d405f54a4e7ea5a2f4e7a56ebcf1fb14f4b78a3e7360,afce916a875328fe4b30211df48c62e0547298ffc5425c7d202eabe80bbf9247,afd4ee0990bdba441a70e51093a30340af0baaa93d6a76132a68d8e00aaef034,b02af4cccc811793ad527cd6016b0b1c26a65f8bae38d7a1489900929b4bf710,b178c47fcf838644868b91ff3d6b880e6fe49535e60a1763e8972218bcfd38b0,b1b6ea2f3441ff391dd4082276d221a5e48ba4c69b6a23b68bab4214826a032b,b23c18b420b6b5a8cc3ef40d6ce2a643ef371c2c16925f7fe4ef4fe884bbd637,b25bfd6228a477c310d85203eb1d4d8da01e1040069c338c632a7060e4753d52,b2ab092a7a5c53ff8c59e073e4f2d1f83270695284d8b13f45f2838ad574f095,b35b1bdbeff515b69ef213418aa62b0a0bc8efefcda29652fa7a82e5986ee48d,b404a8a190bbd6e3b6f8c0adbdf05c5f83346af7d66153dee725e94b61d97c8c,b500c71b90e24fb3b19271083a6df0ed37a83a5cf1fb7896995678aa888975eb,b509cebb665738910f1fab1c0aabcfadc1d46a03105f74ad950291f348eeb4d2,b5133f7da4415c2c75fe54ac270e16c63246a5912ab775726701802cc4cdc90f,b52e3b97ef39a2cb141a018e4a33d106c665ed15aaa63fa685a196134945b171,b615c9b1c9314df5e6e86ddf1b5b83d1b08383ba9c48c0157b6211a40e91a986,b68ef8b5947d1eab02c7fc7b5e66a7f81f8ab8e7da84f2e8d76e52d795b24754,b79aa53638eeca2170dfcef279277b60997d255a5902f3d75eb7d2413f804ec3,b7ad36e688a8c0245c2f513c4b449cd89c82c11753eb6232a14299304cd65b5e,ba17cadb449a2ec575a26e50818aa1b8024f39173dc5aa0e184156f2ee822ea3,ba76ba5cd56ed38da0bf3322030c8bc768aa377c9fcf80dbe12e45018eed4cb7,bac194a41c11626b3248471a4e4b66559078a6e65b348230b2fe5649d7b88cc7,baf9d8d761f9b6f7cf3c26fd0e54902bd5901f271a42a1286c6bda0999c4d87d,bc66c01f5eb9b1ba5772edfa0347330caf007099885eda446286547e6bc9dbc3,bc6915c63c857b25a5d5058496508d5cccd13d340cdfd23d3d14cb676cc7d5f3,bcad85e9b46fd8dc3564cb898b24b6dee6e8b081ebdad3e2607d7fbb262f4ba7,bccb1204b17f6c8d4dc37b42b667a4eee306d3d5aa6ebef6f223fb707d05e121,bd3dd74975936b1a6bc4c4831d38b850b0dc26ff6327fa8afc0528e314051cd3,bd93905d8b7c3592942985bab77e26051218146251d8290fa8f9d3a531d875a2,bdc9b45dc632b2b12c5610c2d41dcf619ed57583d1ce988cba667db1d1425131,bea221edd469bdb7ed131c3d2174203bee05484602358fe6585405d4963715e2,bebc4c97e81669ca9ffc60e45275016af5d58173483dec92930d815fcd44fb2b,bf15304a007a5d84725476803c0f2646f6497ec01da6fb32cbda665b072ebd8a,bfe7bd3704c04a8065cb415b7861cdae5eb59e420270e02fd7922e2cd4605345,c0019231f814878c8b7f525472c3fed5e86c0506f627643592d15ec73414eeac,c00ae225fdb235eb519a873521fd39c44061255d59b6bcd0ce2e5020a96a6182,c02ffee63a847b857f7cbf77dfb54a30c25e107c1f9e420ada1584a4ad6f5543,c155356a248e6b705171aef1eb1c8265bd78ef2323994c55af298e1360d9c3c4,c1a27ef773540d7fb6045edd55ae60e4359fef39e8091322c2bf1a59d8810530,c1ce310fe21732f09cfc2d06e0962c1e86790b9fc9919d7c148cebda213707bb,c23e1070f81186a69d698b4e36245c7b66ce660b63705512362318ee6adae92d,c3cd53033d362aa431c028e43ceca50d5920dcad7a5e2a34092138565362ae08,c3e0b47078e53ffcccf3fc07b130d8fd503de32fb2cd7b283d8669adb58a75f1,c40f9fe468c526ba69cbab2c265fc2bbe275eafe04588e8ab141a554658bbc7d,c5e176a6edfe9b8f6084d8bc3e600864c5eecb883e9d076f0d2330bdf6480836,c68282fd9addd8172aaad13810e0700015d47b13051d4667763f0b2b9a0e76d3,c6a23d2ce01b941cfa0633a90e857ecf6dc450528a48ccf7fbf11d9083a45b45,c6eb15b41e60ffb19cfe98fa6016433fe959daae2ba9c6fc5df5f496e1b075a6,c6ebdfcade4eaa14036912f891506cd1b6f5b0a9fd83a012564a23784655efb4,c6f3e4cb87937fdc7b2dea2dc79de5c15df98e86bd23fdfb43e28a6981988f9c,c78e5c4538b3ddad86ed51f00b0e033ccadb3083f95f858f89a3a2a6620170d9,c7d4bb8090da252b799eb40da05c69576546ace4f2b953d3e5f4322aded34bba,c893e14aa6559a858ca50090e23cc40c6198d3d45480d4e572ff5d47cb154a00,c899d16463f7bda860b3af253062902a2b99b80f94b8de6daaf79d3ab33ffe3d,c9fd31802e4223750369b1384a706c9d7f921677452992e38c49c93c98c6fef6,ca22e54f85ba000800a86f087ed84273193b69062499fa9cfd6c1b4febfeb913,ca40163ae059f2f73f5f1a7aec4ead167850b13c7d70591fce3f3bcc525a5620,cbc55ad4cf50149e5f64ee813a2cfd643bea7fda3fd68ad7cb2d14557ba4047c,ccb2ace80757121b4f1720e634ffa7945bb85b1e1f08928ed45f9e24cfbc2d02,cd4c8b27ace27874c371c0b17a29e500b9e717e8d27a0c20a2b10954bfb8257d,cd5902782d627ef1e0349bcf6b03a201b02199dc7d840742c9ea9e27da75d84f,cd92f4ccf7817142ccd428d2795b59c5c1ae917b0a43e8c2203cd872c72b49dc,ce5d432350bc4b9dfccebede0493cde1631439c82a42ec6dc93e93c8b360fb38,cf01b38abcb79ca3c850baf6a3ef4ad0de30fc296a113f3450022524074b4f55,d011545c391ac937d1763d31299e61f6a7874ef4ca5bd2501d39e72ec943a5e1,d07303916e2ca5892be7ae3ee508276877d960ab84027a973cac6285950f52c0,d12045f1303a50a7f90ff2b19b44ce85d3d3e16d937bb6c3fffbd1d0fe9496c0,d1393ecacf5acbc051d7499631b212aa7b86db93934cde9dab3303f778d26f83,d230ae5a13578fff7658ce63c9a79a6db5225ba7f4d1519782435a7f52aeb7c2,d26340704a6c47ada5f7e8dad53aa5eb9f76ebb40ecc699726df5abf5e764e5d,d30ada52198412abdf4139d17d13a41254a9189aca7fa617c182f0f6a5d26471,d34c8074fbf31a472bf86dc44ecf09b9a8aa1d3d3e8945629887dc66be93b693,d387ed4153cadcd823a13499b152375150c09fd1e1861c13f0a4e0269d87518c,d3c8f012102339f9a99fe82155a77b590d683973aa0c1b6137b592f1371a2813,d3dc793f20682c1e60c7595156a8c8b3606efb43e140051a9fe24204c26eb72e,d51e47c11ec82c36dd9d494ec3d1d722cf1841c27243ca62f934303a7b02bda4,d551ff1f4dcd9dd9730455f390c76ac0b2aa5e995db22e088c5bc3d5e6867f35,d5abc8bc9ee51363d9394d1b1b0a619c17c2d49cf6ef459f80abc40db70569dc,d5b27e6e5e6326e33da1bee804d35d4287194e68c412ecd5cd202344d9c07038,d62b18df9ccef9d7fbdcdcbcd32351bdeb3d9789a4a94c25f1acd7f8bde7b18e,d6b9659b145339d0944cf662824dfef297f340426dc4954c61c1ed7b0d3ab01d,d71f61b4be61106cd8de81bccc366e2ddbe9a18ad5983e1b537803afc31fe099,d79f44654197b12b0c8276bccdde96edfd6de2470b2f2ebc5f35fbfe7f3fa5b4,d887af070b7aeff893464f38cd07912d2395221cbb8b29e73ff61296ef3d398f,d8def56dec16cc355a8f83b2adca62417d22f055550787ff749558bb7fdc562f,d948c5837e5795b61cc5ca79c4b8c7660204cb18d23f7ca527b10a0fd70dfdfb,d9c91a3b413240cc5eae63d0ca604b7fe75932ed9e74ef1d3b01dc5147e57834,dba434ebfece5358bf51a7b0aa0615187c3199506c2be8f8a22c5f7f1393cd0e,dbfb1f8c4036577e2cc502cdf8ce270dd37b5336c8834e9545a0aa4f6811a49b,dc32232e5d4a2e32f891c76cf8f03b63801fde76a26fd66d961ebb7bc7bf1d4d,ddd5a79253612bc717b01f0919bbcf831a80fb3f449ae310d21d50aec5f66b02,de8a49d18312d49bc4ad121382c1c800d8d016e8f18c6083888eda988cd9dc7c,df131ea06223d680eabf90ebf36b8f7124dcac2ded0ad7e4939150ea81b51a08,df3e175b4eebbde430932e2b7c394019dcd26e3f4ec61dd7425231576aeadf36,e14cbce45a9757e4db59f089369c0fd0b6c851088ccfe31d5f387cba7346a00c,e1906228484ca0f9f63fb94d9cc9410cd236172ea1aae32caa541a648d2d77c6,e1a577c202d3cd4051bdda6191b4d14865dfcea702ee89ed5bd03e6b7f38e417,e1d839f0143542feee5785582d03a6d761fb5a638d1a00160c3d38b259ab318c,e1e019edff551024b63b9c8f029fc615c7b4f3a97cd4c547bdad9b8651dc5c82,e286a12e728c1b0096a12ffedb42e9c248071f9b2bc8b31b9875b038435eeda7,e3582b3d018a869309ea30fdb395974eed3b63679d1d22a777ebbb076005f2a2,e41bd32187f41020045035d302cf938facadcc3c8cbd63b16122f30aeb8dc3fb,e463c954ccb5bc869a3b1df28f4e0dd035977e3f5fc40296e113de718a4b4d3e,e47b365386a81d5476354a807d0bf90baa796389323be758601348632d1708cd,e4d272a2aebfaecc1dc623dabd2a16366dff90ea599764d127a475c08fb620c1,e5406fe6106f563aa3da43bf9bdcd0f8ccc67e19f9c3a1a33649563233850cbb,e5bfe4a3c027b0ff297a6d7491c3c043354d25c315a0ff5fc27b314376f061d0,e8bf572596fe94c67a7ab99bd45a8c2962f653cbd6ecf45db0ec28bf5409a84b,e90ed63f838aec620225b9f698a576617a5137a332046a2835a5eb011c20fb58,e93da1803eea664de069ca2027fde9bad9edd562a2bc32e6faf27635a842a8d5,ea62d0ab51483ae103d153f817f21a3cc56130731ea830bb12f984f24a381f7e,eb94ff9e62f303d57deccaa5880cb45def64d4085362b81bdb3143b687bd5497,ec15682c09086857a4474c11f69daba2fa9c6eb201f87229052b443a460d5dfe,ec286aa62c83ca8a1d2829866056633d305b185dfc63be227243d9adb3eedcc5,ec8492bed9f6469814be9b56e1663ef4eb7d4c4234b2bb91fc52d11900b05b08,ecf5c57c5b577f915798266915645a50c7ca89ef1a0bb59efc80fd0d5b6f365c,ed2811b65dd85aa0ccc0babc9b6b587a1c9302937b28666836be3fb5906683cb,edbde8b4a50f1ee9a2425a36c352c379f47dc3ce1a6af080cf2573783aff7c56,edff671959e9638cf064b2a37c687602abde378444a79096062e80409e9b2f5f,ee2f0d0d71eb3739ac4e184c82f0d545734f9fb77ae2265dc978d798da4c282c,ee36efe3bc6410ca0824f994a946c0995785deb0209019bee483de784db9394a,ef049fc9a0965579710afcf6406e2d66932b6cc799ae8154830b79310e022700,ef85b0886633eff8463edbcae79ffbfde5d63a1f63295677f3e7d709d314bf9f,f14866a111359cb6d828fbd3afab200a0019e5d4ad232f66da0269d81f3021aa,f14d8be4e1a2fcf25d90eab5ea1f5d9e99a046a7492ac307c3f557a3ef855e98,f1a8fbfac2c08b99a8e10e4e505e9c07fba9ec49054cc7e5733b653e701738cc,f1b405cc8000e88373a64ab9f6de83b443390a01111e7bc5d98e6600f62e95c3,f1d377a20bccfe610d892744b7d3c237fe6747ea7e5b46c3abf71141e55a7cde,f1e35479f5b7931bc1f01b01aa76b673bfa1477994eb96dba3063b1585e73a69,f2bcfc123d5172c309e46da02be50ed0c64b679c2466d47feaeb025797d2ae7f,f2eb31390b1406ea6d53e0ae7b5a783869264b458f3ab39edba4b41bf9c354be,f587ea3b0ed625ba825f5e5f61a5d08e7452919d8c3ffd4cd366d36a36fdd451,f58e1e5dc8bf90a0252102946cdf1d89e2580f25dcb62cbc441f28dd0b499027,f5f4e71f94c2cc9015e6e60aee5e1e1bf1b5d95418a722e73f313385a542eaf9,f672faa7484f03954afad5bc331154a64c1c85fd0b1e96d5516b48c37c7ab15f,f6ddbfbb73675a2c420947044bd5849371c8e068105c714048d639ff7b46bf88,f7824319e979761f2f13f3fdecc763c92d977341c104e84b588b11221421195c,f811b2f0041a3e08ed0af316aee34386cdbabc3e3d87690e868251a05599592c,f83e5f13bbdc2b30de815722130ef32b340fc2e37ac62a1e9b8cff86866a3559,f923f34e624ad8d7f326942ef467092802cd0c0eb45e066da5f777173e04641f,fa22163e89f1e612cb9a8a6f37e7cadd23fac293390adbae0e290fba20a9c2da,fa5dca66a0820e7d7951019c65289ba4ec4a7f8d1e59515316f1713da0e2072f,fa6392db5041fcc0d1228de18866b7e788088576588585bb9641349e51ea5d06,fbb00a24117031912fca868dd20bd1782f81bf9693c9858ba36292e161db54a6,fc225c18663a87a4fe8084d7300f53e0fd3e71b2e02414ce661b1f482abb4381,fc5afd3cdab9b02789a7352c15ec1e12f1cdd778db739622a9c3800b166195ce,fcf0c2cd0904b73a7c78a3889c3668fc4ea90318ae4aaa0a2c1b01b489d75182,fd49331b2201ef69788a29ce1b50c511de834192e9bbfffdad196878805f0dfa,fde528df2e2fcea8dc9fbc4e996fc2bd1915fcb52750d3d8869122a024ddda21,feb621ba51531542ccc81b1a69e75d243cd7520ea42cedd90bbf4c86ec2e8aa6,febb71a2227f9a3e8b0d94a90e1b66ad97f77bba714c55118a284dfb4e67ef64]\"",
                "full_snapshot": true,
                "size": 8984,
                "update": {
                  "method": "periodic",
                  "time": 1749304616.0
                }
              }
            },
            {
              "corpus": {
                "additions": "\"[]\"",
                "full_snapshot": true,
                "size": 8,
                "update": {
                  "method": "periodic",
                  "time": 1751011915.0
                }
              }
            },
            {
              "corpus": {
                "size": 168185669
              }
            },
            {
              "instance": {
                "id": "primefuzz-0fd3ca85-8c57-43ef-8d9f-1ed2b5dfa663"
              }
            }
          ],
          "properties": {
            "corpus": {
              "custom_type": "object",
              "examples": [
                {
                  "additions": "\"[0342577c1d613a4bd593dcfe8a0a2f551a281531a2bc6685cbdca2d1307abe2b,047c83d2943372c86f5bf1a148be3ef31037a6676f8f50fcf0a4975c0640bb4f,0994f72df49ad6e90405484b74ddf08172d38f4ce0a24f702c36d25ed03354b4,0b158ca76866383f9caccc16d2005a54c935f2d43bd4e1440a6648fda630f7ec,0dca558cfa0f100b6fac33027f91bade6c1eb7654100cc6ffe766a688a988680,10d127f5e355e400fe64a38a90e9bdec2e2228159ae323c77c18711dba85c312,13ac9980ab66537c5e8313bdf8ddf4756575a5e7babaf73eece288f7f0b6cb1d,1811a5b482b031ae72281768250b0e3428155514033cf717cd7a4c589c7dff97,190fb4fcb69230d7a362b112619915228c5808e778b814a17afe51af6cc077dc,192caa1e424c1d9f3b089df7ec2921aac95e6b4fa87c73dc88d1963e7f505b8a,1fd41daed4b63c0ac12ff85fbbe2baf7e3ebe3f8117f292ef5321efa2509de07,244fe7d41395c34656a2d1515ba01dcaac1c30e4691832628cce9247a3573094,24be52933de9e0bc603db6ed87149e4d32e7fb3a11d0c2481f034509dd9e9388,2a5694c390c15aea52deeb88586483f7c5aade5794d6a1a8ee91c8a3e170b0a2,2bcbe9f319edcd83751912777c28bead5df93711079d1dc2d23628c394da3d5d,2c06a80151d54f261e8b56fe64f5ac0e1a7c14881cd6c328e0f7d475de96882d,302af44623d4d0f4e1cc924e581b322a8cf0e65baedfa85144a1dbc66f001f6e,315f7cb64029fda75fe78554c8eebb80ff8e6d00c36109550b6a1cbff6d8805c,336cce278eced2fe179cba4d6ab1fe3b9719d1ddad23a24394218ef757e36250,38f41a0b2c84ab0a0d1ecb05e41920be99123d368addae041cc5ccdc342c12af,391a0cc7db9d1e5baa73330aefda4d46aebb2c188d24ac51b0507bee9b5e05f2,3cf74d60290b9710e834ba3b0aec04764cd2bbfbbaaf8faa58e5e62fcc7dc6f3,3de5f138b52da51af9e38161d983450a15cb03e7c58d659ec4de969ec050cfbc,3e50788fdf404c39b9e6d5aad85c97b6c774dc81f78305e056e075f5b3b29338,417f6e802a2b8bcb6722f84faba7df7dc45cca0f9f493da45cd456fafceb4c50,4287a05e2fd52c747f62c978701e1cd782449b856b06cf9be19e34c2214abb4c,44c7a3270ea9d68e935d6264b13a4d72f822014988de01571b64c138b5ebc2b0,4ecd0248d98e460917dbb8152a2c6f447b0bab64962ce46f825c77bec3fb63a4,55133b7238a8e8739e3814973a4bc435a3bba016a192f386420519933b4690fd,57b2a73d6f21ccb13350b7b50555939a90ae25552e39cdb97ad79552cb4f28d8,57bba4122c08bc717ca5f4f64359020d70f4ceacd51aaa99c57ca25aed60d491,59edc219cdcb6b0ee2173e1836556e448c2a11e99cd58d6f2f4e72f50e5697d6,5d76c668e3b0e0c21bb5ad3294d2a6985125fec8b04b2f0673d92e3ecb0a51cf,684a1d3f18ddbd721c0ed4d494510292d4d59af42d99f37973d31c5766aaec71,68d0a5c2bebc1cf26ffc7f21fdfac635ded3b339ef00902d7e1250c0ce423f97,6d4be10350f57b7e1a6c0130dbb9444af120ab3be860c0da012cd6a1c61ddfa6,6ecc6c0b93c979fac28f3923e3702aff7d09bb3a67d10c602bafe56c4d6f5de3,6ffe2454722f20fc29b1fcc995fe5b2a9c0aa52b5c7db0b45fc82688511be3ef,732999b9a388865db82442c85bceee71a6051896c2558a1388882ff6d12fa3c3,75acc19ae827b0bfb383e3274c112eb2ed38434193146e3f9749ed4c43ef68fa,79e1e819115a77f3a337268f5f4033ba07852dcdce6575215ec1a47d2cee9080,7a53dc3f34ffd3611538ecb651a4fc43a34ca2134a3184c7aebc0e1505c8f895,7f9a65ae4b14ea11df6a215ae378d252430f52bbfa29aeec33b722042bbfc94c,85db86e4b36297f7cccca883f7aa4894ae25de0345a78fd8a748c1cf8440762c,85f4985156d5db209196d7f42bbab43f2194f1fe059b9408a043d36f99fa60ea,8710ab90b25e74cbe9faffb330fef84bcac9f707a99f2ab320affcd80b9a904b,885a3f5918cb0f04ca72984e44dfc5e9d435423070d7c68f22a0775748a96b7e,925e0586c992cabe2a14fede768e693b39ae46c9278025dd54550c96f20f8b38,926ddd63d9cc7d46fea4cd4deab6993359a9ea466dbb492ffbd2cc77295aadd6,94f2219969818e63b5922485597f8cfba7711fa152d4b94c2a6b86fba219254c,9988e9e0cc5176d867e99761091721e4a9bbf8e225f404d1cf365d6b9e715f52,9aba78e54d0afbd6637495f03c310660ec43978a386026b4e036073f532d3009,9aeef015c13ec7a43728795ac02000764a810d8d6a0a3af9ea54582d2cd4ac90,9dc722be49542e49f0d3480c78e7ecd932c37766973eaffddd02a9f7db92678f,a262a24686201aca7834440b9272a91bec7d7b6a1b79cc1469bbab1c79495686,a42f2aa5e77da4c387870e158e570d297f58004be16faf0627ac4f2b9504b39e,a494d7ceaa2bd58f1d8a668bf8e35718d28262cc588eaf14a69271d979cd11c4,a5af4cc418c78319caede82764be50df94b87a81f42e540bf3b912c9552f633c,a5c876dbead8a48ef3e70ce3607f8cd7f10b11f74859dc220bbdeb095ffae531,abb5b637f74fac9ca8a0b781257ccbdef06093c7590196325c5b232a966ae690,acec6d8d7c0275d43e5303085f04adca596d5859c84e665749213d01b77372ff,af4409626434d138a822e446317546d71a17a6cc30128b993c36923300f2487b,b2c15fd43c82eced5b7ea6b6f670d82bc678447b69e348ce05286511c6ca4b73,b32fa1e96df05d7fa3b9d333a615aaec66ee64fbfb971117e79cfb694a628d2f,b8b95917a152abef390e431d484ecaa0a1f0ca54ed45e343d7caa881970bd1ae,bb21319c127ff242735cc5ea61c88d5b8a044b486dca2f5e3c44e23dcd5d024b,c4db1a9988a413e084f74ccc2869a433ce7f72443145e784542d40699e262eff,c6bca4c94a0006e7e77602e716d091d75f71c05a7d1ce5b2795f7271b2985e71,c8d6876eab6c0c82ddb857332565c5b8c1ab802a5ecaca65a1f9e0fb4de5c6b3,cbd53067c79573bc42d480d93ef619beb72e5ca6a1602703f6d5bccec5de1128,d17db2e147572079a6b55f36402e438cac4cac97f88c45521b831c61be3078ac,d7118464275894a2270a9066ce98556abcce9126b6454b9c73cc2fe7b53ffc95,dec05290e93a9b3b7c4049d1652904cd1d378e312369214a5435410e27e9d320,e07dda02154c61b2e2483bbb03a4f06b656b7986be8bd4c06efb5867c940bf60,f047ad2f51ac0c5695d39ad2fd8979a01fd3f947f1ef833ed056405de4bc9384,f2c0cc2222b83c0a3f3f0b87d8dc8f71f5445ca7d40c68f584bf4ac864d9dd25,f4f51adcc3c3aeac23c0cbe776e53e2163a5ae194f3c79f745d448690f9d1a50,fd96072c9bd608d887831196288a77110bf6dee5ecb4984fac4e1ce1d3246946]\"",
                  "full_snapshot": true,
                  "size": 1438,
                  "update": {
                    "method": "periodic",
                    "time": 1751027078.0
                  }
                },
                {
                  "additions": "\"[]\"",
                  "full_snapshot": true,
                  "size": 0,
                  "update": {
                    "method": "periodic",
                    "time": 1749324265.0
                  }
                },
                {
                  "additions": "\"[]\"",
                  "full_snapshot": true,
                  "size": 5,
                  "update": {
                    "method": "periodic",
                    "time": 1749344320.0
                  }
                },
                {
                  "size": 13916,
                  "update": {
                    "method": "merge",
                    "time": 1749161763.288657
                  }
                },
                {
                  "size": 142883470
                }
              ],
              "properties": {
                "additions": {
                  "custom_type": "string",
                  "examples": [
                    "\"[0006019f520bdd6f1cefb472c84a6b753b898fd11129ff5feea5daa9f109a86a,002163510d2d652ff8adeed9114bc3b80fcdb38382bcdbac4ff6bbc5cd7ed54b,008f4da0e5d8e21eb768e5578542b8dec1c69df6280d4e49e8d7a1a685397caf,01d1b3b5a79715a3e5edcd92d0f55198594e6ccbd25435601632cd685a9e0e58,020cb242003a7e88ee913d71ad9c4abecb2ed553baf2eac0aa7b9ee685364716,03329ad78eaba3a674f483e88cdd004ef1c8a4e077d7ae31605641bcee46a319,050d6dfd77e67e93bb6bb73bb7c3ec5d41a4478771cdebc176757b9a813b1f2f,054f387793c7f3f10a053e2b415ce8120660fcaf72e0db20737f374b68a3525e,05b29cb94c916e323d9bb5db317d6e0e14d5968794e5e6152e2d96f88e1b7743,07217bca7b95a774aadd22b83f6a71420f466669e2112d62800cb024acf71d2b,075e22b1ec0ee45e38932aef2ec588273c340b41ca70f387dbb31fb1b6ed70fa,08a51e12a3ae50c0470b945cf5a486892321f2d652ecc5b6802bc0f2421202de,08a6e26cc803ed36cf511eacb38453794b831757d657e914576ecb98c84d6155,09344f04afb949dbb92acba0de9064f3272b10f4ee624373d08f5bd02328c739,0a3e3eb4b16897a4ef37d36712e4e2eb0d46ef6ebe2d9f5d9e185f6de31a164c,0b4fb5901490e4d8e419905a1ecee0a3da594b3a9b41e9ac484a01b50c79b64e,0d78258326a35842bd5971722052d8088cafb25e6995525220101eeda21167bb,10b3033387270d4484a1bcadca5932f367e37f7d29914a345dce127c2908cc00,10d965f9e83187fd3e43236c52c58e59883bfcac51f08df9be0ae2a469318a8b,112e7f376e22b60189fd9dc481b92a210b2583f526ff73d4b66f80113cd84c59,129354160ca20272e545b511005fb1fe4d32327376375573715e083a7e318c58,1303a1ee5cdde45b4ed790fb8011606c0a93545cfc5a4d48ae69945fbade9957,132007475740e50214b64577d4f26ea50ca385585c7819b1a2f7f655b41bc9e6,1372e3810985456ca9720daf8eb792a3ee35be199429362c92707cdc11e82ed0,13841ba6401c386199fbea5ec3faa4ec3ed304de4c35d782dbbc08c8446d2db0,13e9dfeaf6cce7bdec02c642721c9eb7b88a11e187400ffef5d46e0a7be31551,1429f41d6c5c75fdcc4f82f6e37b8e223ffc4ccba5cb973a10a22472a239a819,143b8ed1d718c445b12a546996acc6473b22f6098e1ebbf841a82d1a90b63a57,149cbfe40d0ef4e2e92e7175923f7839e233f5be822b9a2377bd6cf9e5621ff1,14f6d730733f165417ad9333709d05561292c12380451f1e5cc1913da72185ae,1628c0dd171cf3ba6dccda6424ce2d935704f41a60bb31c6b7aa076d904bb3b4,16d4ddc7bdd2c93a678f20e9edbdb6e5017223bf8f126f5a67e0fda58508b03d,1843948e91b6cf0873870293720a08b5fac6eec5412c820d44f3df18e9cfbe7a,186f5f831c2c8a57b521e7160e90a3fa186eac6049100107b4816e7f810ee7f3,197c0cae8fdb8fbc8871b6b066ed09b176c3261ba79d93d281944cced5cfbfe2,1d9ef6ae95d79a265efcad4e67ee47afec1ce394a647de6f074190a331170bb7,1e08d8e98a178050b012a590b81ef58d90ac3630d012977ea97c1d99bc21a25d,20570924ef5a0a26e46849ca2418211f4e72f4a9add785a78452a7c2e949e785,2096564977aec1f4fc75fb2c14459ed1e09e59601badee741409e315f628dc12,2168b2b519ec0c2cee0f8acb2cc20c0e6f0003756fc0c7f7c52feec33f67c83a,21bc31d1338945588f97107170fcd18fabcb65ff94eaeda393fc0765687ec0ac,224a1e1e57f40634dcce52dbcb2771ab42c864ed73e95e7b16f1f38c759416dc,22fc099d827f9d09fe90ed76117f7a37f2c207c23b1330855e13cee79208be9d,233123b01aa8fac5888800372cdd3662999dda2e7a1c009983764d85ce6e6d44,236be77dd79bbb877c247410c8253a6a535e8e3f9bb182da7a10a094a0b64fc7,23b2b12716fe72d71658ef280b1126858d25fa64c723202ea8482e1b033d5824,23ed1eaab924fa33796645d19cdafacc6996d364541865d2e806e0e15c64e335,2544a210282c0070a90b21dcc060dec09df4ab35f658922e15b850434ff8e665,28bd0080d47c43347ab351fc41f402c5f2a460a0eb48a5ad541b1b3d8ebed4dc,29c31bf1596e5f50fdedc1eaec443ab3838a11ab55c5d8d6d2c035fea0128746,2afe34fa8c21eb63f6a4d176276e0b1b8d36218ca60f781d305fa1ebc5ee87b3,2dee2b9d909d2d6ef26d2a692ca161d69a248ef3dcc60f96d205af569de913c6,2e77a50d925caf98526d1a3ba6abe9405facf094d5c357f170ed11f4f24e7be8,2fba93994d4aa978bb015b2c4c061baee3b1c418b77512b8f3472e6e884a576d,302e3b2d02f63714728d0b67c2ea12ab8c16602be128948bcbec2e638c156e87,3190e7c63500098ad601dc16a6adb01166af3b40c2f2ac17af1ca51016c66b8b,36412fe9a7c76edd569ec68f2fd003502958b3a1c112fe66396a127044b9a97f,39198efea99770dcedd5f694baa1908f216a8da555bfd539fcc92281eda98a34,396d51c2e05f39fc1311e1901d2b3267290f0fc88c7198baadd536f342243b63,39b4308eb1d7caf5b910fd92348375fc6b72be0761e6338e6341e01546033681,3a17987125fbc118cd76c29a1745eb4c62b01996c4c8aa11d35d7f312989f687,3c67b82bc487d8b0811502f5fc55e77dcfbe37d433f553416b75a1808e4cbf33,3cb88e46034dfda1b156ff928f4a0a233289134af492858776e730b860f752be,3ecf780cde4901f948b75548f91f62eb26814885e6cb0aac126134084a7caec6,3f0de131bfb3300cb3ba0a61971593faace4c94a67e1317abb97a1a0912d91a5,3f361bd2ecca6a571b8ca365e4ba6ce06b20a81165eb4d1d4fc8bf667ee9a498,40daa953dad584afe253c342b5d41a7badb864dc26a92bc824e6f8a87e80c76f,4329364b911cd01fc365414979460388c94a5bea53c23317d42662f670ce54ca,46c10bf168d7cc7dcc58de02eda2a0aa0dba7e427ffbc82b0f99f61840986810,479eedb9617744b09f1e350ff611fff6b72ef8f17278957000b2b891b56f9d8c,47b67e34e5304c1f29ba2d6138887da96461dd58e55948b294f4ea09eb938792,48e599f66b9ac8e50fd4c20d487ae8d4749fcb671ebc0516f27d7db3c649b77b,4c2f07be5f3b938986598695d2588615feaf3d32cbb84bfdd8253d07795cd2dc,4d09fcc1da0924e706190a75a825d1fafa1f60573b6828956024759b554bd2d9,4d492f0634966b72eeeba6067cdc625a126e73cddb60fbb4b5670e3c88b7627b,4ea0ae9138ffc5bedf5e8c2f3465b01bbc33aba52e49ae026559498311c36d4c,50966289f94af041ca1eabdae21a8eafaafc1dd98072304d961098375b1e2893,50ca927fe61b2c0dccc0e0228f18a42c7dfd70bb33e0a6f1df4219f5a85fe86b,5182fa3487d29568c1a2141cb72bccd5b5fad8b991d7d6c972c40618b1a34787,519a0657c6e87f8d5249954d33e341f4a72eaff7ce85ce6ec20d0b79857ffd9a,52a2412f39731b4f661253da318f230920453f40efd4a389a36c05fb95bd1e94,5639a5754d5195f93102bf3dcb83f9a68862eb713fc0665ae4fbcb1a83c1bc2a,568d48cbc5cc1ddc1d7d9dfc9a66769a796303514179942f0c2ebe2e3f5396c5,57c6aa1bf2e3bbcd5fdb8d983e12e56488c80b2f977f9218d8660aeb9b56c48c,58ad8021d43579468ee2fa57a930e15a4393b69fb2831e054e59472bb252b247,58be60c041f9113bf84a6925448044a2b216a54a93bf3a9c463c231eb274837c,58f77f75cfb136a708427c7bcb9c8c70b7eab05de9161fddc0a9f1aab085162b,5b0676b80eb5bb46cf57102472f6f1461fb08a556387de7959ab972b0f0ae5f5,5c35261d07f1dfbd403b0ce11c7e05bd9b4c2c8b92713f1b7c47c5406b09c647,5df4b003158c06f1c42517af7180b7ee8c6ec6233f58c79f209b9cafe4dde52c,5e8d5c7c7ed58ef3ac9e80a6943e459fcfb627b589dfab2c9a1cb550aedbd0d7,5ee1f01e15b6f7f414b1229a356d3f88cdd819c82b8ba912ad8c95fcbaec5342,5f6b1e73d87d4064fb4cbc92a2a8bb347c1e53899e5e873f87aa4a0e9413e446,627b485e42ccf4d9f76c2e9ac95dc710cccb3c25f293865609a930abccf35add,64ac19358afc3502d1166b89c2a8b4a0fc0461d6a39ac31beff49a6b123c937f,66000bb7f5bab90df3d60c4a30e4107e36eea8631afd7d039d843186c98b567c,6b52ae2ea28289d9be705a311ff8984f60e5b9776be83a923502770eb4d26098,6c7cb62abba488c0f4af8ada403d2820f82016d75f5cc4bf65f557c6778f7218,6cc7db0a891a6db79be905fa5bdebea4f37ed1dd530337530171d3e3a23d84da,6d1ef499a88c81e2c607869f4a78fae5ebdb17e2a9ac0ceeaea10ce07b07787e,6dfa90cca14b2e98764a7d0255eb4a4fcb913f77d3424e64c85d5f9d2b384065,6f4f59c78411dc3ae0fc3cdd21f46eda72b1249d013b3b2a428916d7110d6dc6,700226cd941da866565387159e835b5ded46ca5c2bfb7435663df92012809239,700ba8d0eb29c3446bad3d4f838909d83cf9bd79a685a134a220b0373281c1ab,717edbed01799b69baa74f5c30ecbad8805d1724a9556af135b45bef81873779,723b9af9d74d2f97f7be017577e72c2ef6b5c05b4525b7b994535925e25de86b,731b836b8411851764b2fa9bcf5f04804c6bb5c685aa742c15b9ae4681d945ab,732392bafd00e0647994446571b19aabeeeb7d97d62566deff488a6fa3e63ebd,73a9b3b537d0de0296444dadbef0a511186efc072f239569a6dbcca4a8e51b03,76e4b3c2f4749e87b454fe1a3ee15ba4004b741697a99cea4051715b6c6e99c3,77e6675184fea0124e6e9468c46817e81fa15534a7c00e753544b9241df7b7ea,7877cbec7c851d7acd62268d8b2b560e14cc4b86ccd6e0776ad38153ed47e64b,78b0ba0716b9d4433aafaf2a831c3b4940661d5d60e2f4db402dec7b2c8a25b1,7967dbc47558cbd02d53db03aa3bc3431a9ee54f65d7b3a54648e882a4417079,7a849d785c97e2cf84984a0795cd225578cbc7cbf8978d9515e6fce45b269710,7becb731224c628499a50b385f67b08993b3d2e5ee258bc1c72a51b56bea6b30,7c4a61b9b7a4e5f51b85c29c3746d062c7ae221bc6331cad55d63ed64c6fd793,7c91076c8c101711a3cde3b57731133adda3c8c8e0ea5de74cb3c5bc3dd9b0d9,7d3bbd708de06ab0d005153f9cb3e479494ff50fafbf4cd9043f7f5902d2a9f6,7e4c398b6f024778a1b1f7468f78bff0aedb2da705e4a8a77a91bad86eb8a874,7e8c2d57fb98e448c12fa3ed190b4aeb48c8ba6c00a7d9478758da55903eab2d,7f1656148e0e145d29a67e31929cf1e7f37c124929a6904a84ba50e86980cda9,7f70ce3e829fa3c3054dd6d285ff9d9ef8d211987bbde317a387655dba84129f,7ff33a55fc3066a82ed514fb83c5b01aedcb0d1fbd3770ec8298f870db7af813,807f0e8388ce1171130a1a3e7239c81d0c14603abbb149c4dbd69657f5913a69,81b97af922bed5b317eb03b6acea7f6a179bb6a7a6e2b34e4994301778602d5e,8332982879a8d3e868e7c698a26dd24c3f43aadd780821be7e5096a44f47caa2,842be990b85349a73097583e416b213062cf8ae733b6d1738fa78260e44e9f23,850b3e91f23c7257824e5291499c8d76ab7c654b04b94cb9381d99d6ed2f4454,875f7638160cb4dfd58ad5b3291893220aa8e1b5828a4eba9eb510516c3a7cbf,88b2d5abac0cf794308c7e786d068893caff24ad28fbadeb771f9c99154539cf,88da68faacd30fddb734d40adb2546f1a685d1d3acc33b4c6196710ab77444d6,8b0ac6ebfc22090f7f071f1d48e076a91c2f60b74cfc46d7af876edd1e5ea7cf,8b24915122ec43e346efc627755835062139b971a8874f4170143475db71b6e2,8e9d65dfd9f8cb0cf640c5d07f036da1a7ac0f18b0e39c83dfb3ec3afedeb388,91d70d6bb3dfb74ca511884df2d051f9c5275c9d48c8f909699d6bb7cf0383b1,91f47c339820589331838808fc1dad6059189f37c46df0fdc3e918e88eaecded,9236b26c15e7cd0cc43c673530f8ea88c3acf90b51c9c61097e63371644dc164,9239d2b44e797c6f4d48470469ebcc56c2c403c6682a04223155f932fb85f9a8,92daa3c5a4b8aaef8adc75b3f1bdf40b8b7f6fc4f8fb06fc4d713600b1b81fcd,9453d76e105f12b9f27432a866d6eeba075c220bd2393d1195105d73b33cdc92,945a767c4d0c3c3fbc0dd422f7ab5a6faa4ccc2e02a005f27c15e066c418eaf3,9584fac233afbae2af60ae23d1d79d6530e2757626e399ef3130c69010f650aa,982c394177d0c131516f66a22a87c6c06df187777973fa445b95c96927a8f08c,98d1765619f87d087bd27cd7afe0cb9057560e14d7e7dba27a09ce69f3a7a121,99ae61aa444f35f56d038c598c1f47bb61eb6c173d6ac57a3457564ee0d508cb,9ac8c5d68f290b9f5fe7c791a5c02e57d7be92344d9ef9129f35b533cb452277,9b24062e7ff1897f577ab837e3664de6d5f02d4b9af73664ae5339fb62d3838d,9b99cd4dcc93a6d3c600db7da94c3e138543cae4f47db5f5cb638905620ba242,9c04eae6f169d91db26010aaca6c7e2a84894350736eccb7c1ab0f7647cb63c6,9e9d3041ff67026d59f8f1d20b9c7e2588481328591e19d247d93b25ac173fde,9f61e29e1749da0cbae8d15dcb8faafbd9a4e1bb6dfc3e2cde97d548eb59643e,a6fa6779cd3f31f174bd4f843f8a891ebd1255e3da7be4f8ece7f626fd48a400,a763ef88fa2ce4564a253a7d7e580cb8e37f5de39fcebea83ecb96e6c1fdbfff,a8868cf6728f2bcb8805a072f2bc0ef6f602ad9f037bd2997e16da112b540923,a8d3a62bd27e3579fb91e4699d1a0acc04ba327457a4ae7440f1e8067f51fce4,a943e2479956b0fc63ce55e9e28bd8d3b3c89e0d4b0c9b862f0995b1b41a5f83,ab5d33e3752f41ea9aa2f8d063b9b1703847d0f52c35405b63e560a8ccd1de35,ab9ead1a447a98aafe5067c6c8d1e152d0c0f7b38480e2416316e37e0f0a09ef,ac0119830efbf38657517d0afca5765e5e5763167923630b986f8a61fb89ecaa,ac8ccad624da88733a982550920230c84ab9dd9974b3c404a7faa6d235bf347b,ad295fd4dbe09a4029758f29ffa2fe299a40d2284f34110d046c2fb571b4ecec,ad4878adf049fcaa2efd7acfa64348000413fdde28aca810c4c409f29cd49d95,af117d27b8e3bd00d07d7b46cc404d98bd66e43102a72e645519da371bb675c4,b2013713e2e45364da4f75b358c0ecff46bdc3820fadc5f583362ce36fd842a6,b2d2e44765f01c7b4a2defb295cc731c9e7e7047de5eff934ffd1b0b104336be,b431a7212cebea82cb12e89e0e64752fb0f82e016b3dcf62df88a3fbf52be436,b43bda1deb12d6aef36328ef6106ea82ae50a3cdee4290a20fdd6df6760d0028,b5ceb98f963a2a35794cd5fdda231a162ac0e938754878b0bee8a3d3a022d516,b683baec5c9f10ce6d2a15ae042993c91afa7d0013e7a833a53ce6a0689f83b9,b754d5a84d38fbac0be3aaf3457928f62a36f49befdd611f93df46492abcecae,b779c0cbfb680d22ec4b607d4b213679bfe9514a0acf5c5aa30688be5d08af95,b880ed86baec0e74072c0826647abf7d30661f1583fa1ffeb4004ddf640b9196,b8c9c32c23933189dd0e5693ec3718be33ecfad2a71f7390d44c7c7587b23eeb,b8dd150ed6ac65235bf6ed0db605578a80228fb80c239bb90ebc023eadda9976,bafc57b12fdb7408b7c7db4782e0a4f7b00bed6b47122a8d53795c8a65c9db9f,bcd5f8bb2b0fa191bda0a37b66079525238cf941aaa40baebfcd9206d5db77ef,bcdd5c2ed20ad4e196517d374c1fd0896ba9bef67238b28f61af250bc5cfa104,bd9b215f13768f28b837869dd73bcd6469828e3e4c6af06dc5c3a4c919b3e9a5,be4920c5f3d2a275ac51ac8dbb8beafabd1bd9497e35dcd12538c9121fae47be,bef5f443c3cc4b3d72a3d2807b6c0ebdbb319b22e77fa991a14fc743e110df7f,bf195f7408eefb4db17080540e01941cc20dead1a3fa0195bd81fd233e3dbd3f,c14a1a16f1cdff24ae3286c8aea5f87d5811ea0a70224765b21fca301cabb50f,c24b5a9ec3915f00be40a37a5e1a162148369cd040ab71c47db73c20eb9c7c8a,c3933e0b434bd9e4ee44c5e6e482e51cb11e1258b91ff6a011fd88071a7ac33e,c421c60b60b9427d806446aab6f4b83c0b7b46c3ece0f89c8b4d87a62fc86b10,c5c088874acc0b961e8a4005659fc0e58f66dde1f4c166f9162893fc8631107a,c78dac77e3b48dff36174a63ea87112dd57aaa3fc4dc89d2be0a20aef393a9a2,c78f467951e05dbdca18cb103b7836e47e030f0bdde0ffa1fe9c2dab832f9f6f,c7a9e3739e4d4a07e2281f10d8817084ca4d9590971416b0d2cc94f3a27a4945,c9159701349a1eee79ec95bc7debc656f8f4f25c955ca88ae201e25216adedf2,c9d076b3d64e14cb682e550d535dfbf9df3d5e85a72ea196c3f09509c94c36f0,ca725ce232050b36ceda02156547f46512b5194b5f44f11627b6fc618bf47fe0,cb0d4a1923915c796286f82d2c5e27fc494d850fa1b38ce4e82b568334aa69b5,cbe0c67212e3274fa542f9aa0d538e65b73927e7a4c69bf8fe067a85dbc622ce,cbefa364554fa6093e19be5c43a4ef9b6d3129c457245d64a1268bea5372c916,cc74c2966aafd9cab3a904bb3920787849e87167b1ddc726122d620228024aef,ccb8a0b44e1711891636576a930ad7e1645a620022c3d1facdae52f8cd9e75b6,cccbe35317215c082d1c6b7ed69164387493aea3d47d62442e616e0ebcf1e98d,ce8b2811a6f88e1ad50444ed85c3878b173e310c6bebb636e844bed50dde41f3,cf375b0a07fc48379f2d9679ab2030b87db70c53fec0ac1877a987bcc01d5d38,cff137c0b874ca824994bf8862b724c6eecea7638be62e9f26e8192a30860004,d093df4333a7643d0a4b1ed910382fb1d6c11164b6816fc06bc714ce607c53c7,d0a0c7edf678f98194a35284d8ce9fd6c1461d1f8f496a13f3e6ccf7b4e14c34,d0c86ba6ed3db64a2c867cd58e1719cdf58cc84b7f8e65709e6f25ff674ed960,d16f4bba1298d1b86eeac0e67fa7ef5e49bb9e5c94b7d0f1a34cf631d74e5b4c,d19799c05e6a5e4efdc51f8e8a3523208337a4c316096151031b5cef7e58711a,d19ef3b3b37a706dffa48d5cbad032e21ff911b5b7f4f6e749602ae5a9a8a43c,d283c065298467e0391b553b3707b45b42269d41034bc990645e73d1106c9d7a,d42c2efe145b3d39493ff43f6b529de182be90a784c76a300cf5319f52ee3a75,d45e803cce4d555fb72182a72d816245459d0585c3d517ff71ce13975a12413b,d5fabc8f6eac4ba6519a335d529d1ade8af2fa8b7b054c420c9d5a21b72b80b9,d678e8a914137dc1a51483b0a1cdcad9e5516659ac9067d00f0a661448b68e0d,d6d640ef8fa26ff66aab930e005def7302dbb48a487f0507a20d26269438908e,d748cec464bf593a16cbc600023a61c63216901857b77ceedc9f5dadf3b37ed3,d845b3981704d3057f08e4e43d89f45ea66ec1d6af429e660ffff7a2ba74f359,d92c3664e071d2135670b45ab7baeab040c4bb6b9ce5cc6ef32b817ebe04becf,d946873b93477b064c2bbde95d4815335ebb494e6a0b4887bbc8be50b99c01b0,d9b06fb4fba11c476933fed842f66f03b592228255bd845cfc212cefa30ca1eb,dc34ebed9669a7a1441807195984f845907b1649c0423eae6b1cd8c449609871,dd28975fa26c1b9a0046249b46d4875b15bd9ac6c0a28ed60a023a76be201026,dd329348f6f2d5307eea76593fec813977f56bfef73277a248eb9d3cae6546b7,e232fb7c19405f56b1992236db4c5681a750efee219282e521729520624a5453,e42e651363b61d8fd8dc1ac35d721819aeddf7f4f5aacfcb6ebdfc18a166f0cb,e725f3ee61bef291cb3cc82185911a36216e9c12c38046f9aea166ce1a0dc381,e824f167842cf2004b0fbf98d83230b038a98f24c2a5c6939a989eb23785b80d,e8286a377479c734bd0f458818dafd7ae56d15029714e9e0ca98fbd3d6d7c078,ea1265d7471a404aae84d93083f209b0639e9df81ad1b0c6ac9f61322ca9e970,eadd6ac5c69a55ce9ace8ce602c5eddfb6353bde052d179e6f4f4c74879dc6a8,eb36f5ad905309928ec28afa7ab5c5ad2bf83bf5dd94093b8869be02efbf7f9b,eb74d1b1beca877fb97c6c1eb302e035c948ccc87b78ee3843da8633bf9ed6c1,eba8353930e851604497cabe6f92f80f29d61c67040882b3497941239d15e5d6,ec008cb6177cbb810f181804fd2f11e6f58a8b3f6d0196c2d7e754bc46eee194,ecb1e46adf7df47cfedff11bb26d8e65dc999937a372d048605d51f9a951cb42,ee3efcf0014178f03338748381f801463587e7ab849fc610e17791bd1111a033,ee5dec94819b3eec027e427278798977283e335b3a97dcf34960fe61ed03ad71,ef6b12b906b3b48570ddd38920debe791162820b5c2ffc9e82e4ab0696b6e081,ef93ff6b84309ae8f92c97750533f12514ddb2f7c144a67b791763344edf2a84,f0632127704ee30f3568b7295829699b448a71964065b9640aff063af0cf686f,f23f9cda678c49e06be25dd44cedaecb196c0a1e0497a2c8b5100cfd73598446,f2b75e125cb90f16cf8731cbd0949ea0dcd87f5a87194cc664a2ce1c2108837e,f4d67d61c181dadad3553c0f8f2c26077fd4704e0e2dfee7bfea0f62a0d4e966,f733893ee9b50154fab9c718cb288309ae978a4276deab29c0d68df7bb1d8589,f833f93fd630d9511a3a5436488e48e895b2ca2c6556d3ff4466c5a02d38a5af,f96c5836adb093bacc3a869c6f987308895b3f316077a4fd8841281790f203b4,f9dd15e44bbff682966052eaa848f21e260d7dad3ed4bcbf9c39969ecd15a772,fa91e275fe0ff5dd0c7b1aea8968940cda3438f79a844b0b79d8ccda84ef93b1,fbf44b98e2a01b6835ab21272d613cb77a4b06f2fe937cf13cc6560e7ddb6c33,fc2430f308a1d96a0f3cdae10a76b083e59b298b1638cfc7d39bbcb7b883ed18,fd10ec415749a498b5e64ed7bd0003d63c3aea328dcca7394db5ac51e2ca58d0,fd27de916e0f80021bd8c6639ce389274944115c1548604f21ed2039f974d133,ff686317e883ca769d7dd663b7c1198e2d0b486febb2099c89e66bed68a52c59]\"",
                    "\"[00561120f8f2a7cd66446c0221aca2f2829eacbe2bf307ed705594f6b91c18fc,02295c9cef1f2f6576a9dd694e7f75611120c1cb750f7e5d160654642a84357e,02a80b618ac1d6e8241dca8d90de3551f903c8964e0e68eda600f20d382c4ba2,046fd0e90e0641a2eadf7af8a0fb36896f1c2c261dd7ef15a3da403801e00317,0477d5fb958269b2e54aef4cf78b762a65215934cdfb915500f4f180d852fbf5,04c5340aea17541151bb4ddea5eeee5d80fdc210ac2f1d900a8da37512888ce2,0545dbbf2f734992879a9c8dc4955a64119c3621b8c92ffa42b631a52d7e50ff,055d9bff1411ef1ee5b17ef62f7e49d70bb5a92a3ec2d567be5c5e8c5227452f,061937dbed3837123138daedeb63ec7757d6e68c8e121a2e43496cb033181530,063615b192740e8ce441ff933d730b4e456fba87c1576cb51563de3be4d55065,07b5228b4df278efb9e60e2e309d91d3d99f72c94bf07de38ce6c50940886e7d,0812a06ac3ab77677bdfef7adeb821b507c21af62a3c45c0d30df0f27055c3c2,095e6bd1d07c7395365586e63cea6386e6decb8b0f91cf8f6932bd5b6ce3a14f,09efdb700a85c30325bcc86388160c03c928c579d55b2b50c730382e52512c3a,0a821f22559a94e0fb5fa1f444eb788d7099b17b16c7699d1597b2a1ec8f140c,0ad153621d4d1a53932c5adcfb99662a4fe3aade68236496cd2cd4a814b6ab52,0afe88a52ba01af46be992e8ea286fca784686fefd66c60d01f49216617fa58e,0b04a0ab852f3cc2331743978a4bd2199e17468d7f7faa537a3fae54ac9a4e46,0b7238a7634acfe4152f710cea58ad4f06ada001796aa6073a7396cdb7c35bf4,0b7767634561f217c11d7c57b27d575f9b809457c4c14e0adce545a1c91b496c,0b83c43198239f68d39aab6c3a775335bb1442a7446292eb64fc0862f21a847f,0b85889316ab24b7b91a49a2328091232a5a951eec36b46f7085c25634b76ec6,0bb042ebb9251549b21dcbfd4eb77a1844145f2c64a607cbd32f43b7d20b422f,0bd6f4a16466071e9fc1ee4f073227f2fdc4a46db97cfbcceee1f23647f89ed6,0c35f85861b1a91bfb84944c4c5498dd6f2944815697cbb07ead26778bdb9321,0c5f8792c7c8a3703bf10e1dde26b4c7e7cd053c9aea233f635bf19ad13ff5cd,0c6c7abada579a4b61f9cfa8d39a83b84b31c83225f38b1840465707bc2f152f,0ca5f25ea6f7c55ba930fdf87c91cad5d24a9e89d20ece2fae69a3000b9090a2,0ccf9bcc98bb65311267d3febc598c7514e2707cc27afc62c1891940f5fdc77a,0ce39e610584a76318b5b96381b8b55f341a4f01234fbccc7af518556ba290fb,0d1f1c279ac658b475d2b3d939766d7603aa624d4afdf41ffedb3ee3a0e43823,0d74321e96142e455da072b3d452a023f79b54ede1b34bd7b4756eb25a394c34,0dfc1148a9ca5b075438becdedc275b2d98fe50744a0d1f597448e7ae1daf6a8,0e022503006b956b184be340f380247d177dea4b74e824907e51f45f5af78475,0e12f081c23ad3ed7624906ca638d74202c0636a448f1b8eae988a9a7b162382,0e4390b91e71c42f4c8ae2a1cef4d871cfc8d5af5ecb741f36b1b4562aed5082,0e6848e9c9f1079a7e215f7b65fe72f30b4d7f40739f2da18725d2938a08fcc5,0eb00ddf667469a45d8ca5181d766cffb2eb9acdae38e9b08d4f7df98887adce,0eca12bf879e10dee88e1d2520b886a5c9db3166dbc9b8c253435dde53e57b92,0f4bca91c363705f961ca4b59c5fe5d3d2b07d42926a5ff0f4fca7eaea3315e2,0fb73d1a0a1d51961139d931b9126714a303af634dbc9ebcb1f25c6e9f9b8b69,1053b8bb581d1e88d0d7b45596e5b5f3ddaf261dc577a76b8b69856571ea77a2,113ee3327ada7512eddb083d391d6b29d672a93afae661613b2b2ab60f7445e9,12583cf99b7eea6e3c8e9a6ef9ba35963eea42e223497056808ea0f422b9e74f,127ee781655f02cec9882d60673330b6d34cbd85b85ca4d412962ac91cb0bda9,130e3d0d1803ce1b8b9dc80c85c48c7ca58f535e959173c9dc469cda2d374c12,150c80691773b04120f9abfcef18d5dfb32b35c181bc1da21dec11a69e62727c,15dcd6cdabbef15c3f8dcb1aa6b275da87558d4cd7da972e5d704ce0ee1203af,177d1bde47f6939105abf955442a4a5925f117e05acd3d1500da9ab1fa1bcfcd,183efeed369886ddd57626ddf0d21897368858158028d64523552f798ffb23e1,184f0bd5e8b0f1c8a0362196e6d1e871c78ef280fc317963d4a5025fd24d9eff,186c6cf1bcfbb9267a2fc850dfb07ac177b52b6d3df2987d4d7f2969c97f1c24,193630f756b38fff6e99c2da5f1ae26ccaec7eca16b20ff96199fdcab90245a2,1b3429149dcaf60c928386981a573fe39198d75308351f02fbbd60c1d845f9a2,1c09a9f2ff9d3d13b1c17ce245a2d344264a71c555e11d7ff0e4ab8e7c2af25b,1c6823654fc9519e082db91ae36a077c903776566bb1811658a6fdd99ff70843,1d255326cb04fa7d208d382eb3db450cb62396d8f5c87156456eb51621784f95,1db1e53ca75cf3b9d31058de9bf07132da7933255d60705fa4a85a5641f66b97,1db2057629a73a8ce03171919e8a0b5bbbe4a58e9bd0349fc04410ffa6c049bf,1e0792323a15ff489c728f4f49942175370d93a1e8b319dbe7b56a83f0d8af46,1e4f0581855d24c8d79f76ec78e242d9651f60133b809205a9da5ba14164b807,1e91a2294e3fe436dfdfee75ac8b6b9bb3f131388fb98983f49365149d227edf,1ede214812e4592c5d1f02cb6f570d314100f9884d3b245f30773202844adff2,1ee604ea7a7a9ad8855c43d0f938ee8feb5769491f47fd2e5dde8eeb1864745b,1f39b9c925b0f9856e4bf5d6d1c40e14c2e7ca0df04d1d7b93b5b36f986e553f,1f6a569273d9be47acd22397144a974ec1e36f2127d2b45bb5a7f384f2f44111,1f84c3d3095f8ee7f3e9835ae31c3394a7231db064e72f26e964a3ef84b199c4,1fac631d31d8367f9df374129c9f8fe7175d91b7bd72887fa65ceb3e505f52b0,203cdb68902489b6dc0a07d946fd465050535e220086be5541c62c52cd49ccf5,213a707564d7f703a77b8c0d0a7af875ae49ec8ee7873d30bd07118bcea10261,21a9ce394d9786a298851bcf6d7ddaa4d184b64365cf85201c1297701c588e16,21d70521d5b1a6526fd7e92d39cc10d078e99a27bba85702a8836cf713554a32,21db908438f30517a64ce45eac1955f594add281872670f39668b3a7a10b4ca7,2260ae8e005d0a2c41765a846462cc62bc989c164b594916d1c62c67dd0eccb1,234c6cc0f5a455ce79c6da9994031518acfa7c54a15498804e89dad32452b6a2,23fe49288013790a8a4fbee9b707440f863635104303c572db44afa0d7108e6b,251e585cbdf04a943428f9f7bcb62d92f8859be7d96e7074bcd5b8831c060835,2569514572b53e03d4528b1501445dcd045239748f4f0ee221c0e919cf6b0888,256e170e746abc3feec01144511b3f0500fd59c82bca32e2efacb2078fa680cb,2716a91fcb9faf87b9be46502fa6db93411ffee60b443e4b75c1e0f56f9ecd64,2741d6344bc63c28b359d37b9fd132e080d73c0bdf8561dfa369ef1463753b68,282693b3ba0635ec82383b57c6111c695fc1db6d3d9009164220653856de772d,288922f63987404eb60e1ca4adb26a686da1ae3dc13c2f78ef793011bf3caae2,290c55b2f44b1ce1fca93dba6d4074c2ebccc28e28ce3f2dcf726ee1381da4c9,29654de98179ae589f83aa0fb0365d7f56f56c53aeee7ff7d008a980757508f8,2b78bc716dd543bba31026378434b270d7688cd5cadb42c1ab22bc0e30a346cc,2b827a7e0d58f49a6f78dd70fbb077256690186d1fa413de3cc769d28a46d668,2c206b4b5ec08d213eda4d4890bcd09a6b4a0c4171d1a6defa53ef9921edce20,2c381427859529244c3ba868fdc96a0a754ecef5037f80aada78187cffd8fd32,2c72e9d33ec56a06aa100ebc8a08e25167bb79d2489265e56ef76fcfffa89774,2d013c5618ad36d2a804d78e090641748086af1e1f650417c909508e9cf0e2a5,2e4f1c7407f440e386aba2b02bb25c30dc42e7d9ce6d83c1b387924850a4c351,2e73137585250a0df41213f383818280b154e5677598cb87f3b0e292dfc19d4f,2f39369724f58e508b4ce2806e5dd0eceaa5b5f516213cda22044bffadb62ea1,2fe70e0c8c42b7d9d95dfe3caa0fd8f7f4508abbaa0af508144639661b2ddb87,301bc9091f8ee85c991cf27e48a1c4afbc4328d3fd70811f34761ca39065349c,3040a78e33a70bc0ae26de2724a8519468a37d53dd253c279013b10b4bd71408,308e8c47a9f7c824b0e354e3b4fe7a17f8facb476da211dff00db1e1b7640f4e,30fa26238804b9479f91b6990cdcd78a2ba342e9e1613cd71ad1c5a5201d6776,312a07d43c3df8921585a2ca7308a5a7a7bb798459f89d0e4a20d96b91e63074,31e1c6cf401d252224434e7afe229aa90e24be341db90cc58399683fa498dbfe,32130ed1e9ddc8a0a9067d9458cd233f63f100c6baa733dd90ced1bed58d2525,3256011f0b0c3cb7ee018efcebb460956bc3724a95b8e5a4d3653d14be9c9d66,32e098563c6a98d8e14b24e91a8ac7e065a695c8c6ce80340299de71d3bc5603,3626e09226cc108ffe0d0cd7d04541e8702a086f25a8e08b3b00064990b8fcad,3817d1c1c60c35362351a31bd5c26561d2f1f45af3a7c508f6aa2186cff574be,384ebb51eef53e3cc1e7260c0d6131d2a2f6053772ca2dc6395143b396620a62,3968af41db64b8f7b3f37706da0c33d4687149a2e0255b9dbdb6b664662992bf,3a3da8761c10cde964e0e98705ea2f0e356d440de75151abab01c1178da9f1ac,3acbb2815d7be06906e8939364b4ec09e578ee57cddacec7bad8afaf7b34826e,3af4aeec29f6862219a7da061e970239c75959b9a1329dbfed58f269f129c37c,3b73a5f5bfff73070f3c68e523eb39ba86dab48d8c99a39a34a02d38e6dfb461,3b78c0d5da9868f7ac5b678cc220e58568beb64c7deae02bea198b226b7e020b,3c06c998f128588ef1a2c70b4a9cce764d3df4ef6c398cd9b5a12b1cbfa51b93,3cfa06470afb07f7110b6829c507177c10f2caa328989a03a59b2829eaacaf19,3d3124820bac5ce1f0995deaeb5fd1abc0ab324387a81995d052706084a32daa,3db25da01378d4350d8b61176bc006caf5b3badd73af1c855390ab8abbd0d568,3dff949eb55e8220289e44320763a548264fc2f77cd736e9a52c0c60c818ed76,3e545d601f8c045a93469680b8d8cf3d6393cfac49c1372602ebf5e8d673df82,3e912c62f3cb32b21579f2d9951fb08c0a02c15a4644b2104140100c79d5ed12,3f8ec4b53ab412ba8f66a9d9a1116fe10b69d850b7d7cd558d2baea2c02ba65f,4087c3a8d5f7e1da20a60477a40dd45403fbe3a7ec92e71466c3cab4a40fe758,40f6d945985fe700b9202073878362d4c05257f3eee87aa255a112dd997dc96d,421cfb60fe963c4fb5b0eed077d049068bea4486111b5fe0b93e09892bc4db53,436c68e219c5dd60a725e90a63e5a562fc379a60126726f85da430cc3c125000,43f66c0a5e0613d18334e78072bc9c033cb77bc9bfee1466e053ef3a419dd2fc,4426e9a69100f336953f61fe97cf51912c47fdd5fd4979de48ad46fc2f42a000,443420dc2a0639bbe42bdb5295a0cdc75f39595be54e461d6900ef28d9965023,455d90445b08b676e546e8ffde414764e243a1f5086fb68f2bb2360e97714193,45efa129152cdba61ccdca59f986a5784b00a60aeb42cfbf911c39e87c50c9b8,46534191cbe6b424ffc3b8c9070f71edb3180904daa6073f87d42f3337beaf0d,48b0da191d88d928b15486c29765b04f8fd210de4a4e0b989984d4ed1547da1d,48f60c7c7467d8bc00f38955f463a6fd34e2f01aff025ba85209ad7ca7a76fbf,49e2e8dc35f7102d56c417d69c3ecc0de9cd95ade6ecc0bc248a211d659db7b4,4beac9c6e648cc9e223cb901f70da4c0f143b29426ab2ab896c093b5a56af89b,4c12e08ab91d205d346900b9633da3a074e2700989be3eb5e47d20e7905e23e7,4d58be76208c9320490ec4a199b2d8bc37e0111aa71d5cac69889cf785d2e84b,4dc76e6d54fd91a0536bb875d429c07f291841b33dbb7ad874d3ad56b88b0090,4e3e0ab23f2ed816d6e256599f90456fbc463649758732a52bef1c5c8bbbb665,4f58846493d3a255761121d1619dc97ab2c112feb7136da25522f77291ea6339,4fd1063d445ef860b97d57ab9325fa711dbbfd937d3b68cb25a65ad746d95aaf,50521fbb3b01199c9c7273e550bf0175a44421400e0b2411cc5384478f204ae7,507f3a705e5e62ca735c16505087001f978847ac210998e6241253fd4242f964,517687ff55d0704b9eed6488f7a44d33e28d94e163c2eecc18ba416a387748db,51cbb510e0d257040cee016c52458f7986acdd3243190a594bbf6eab7d71c88f,52252268c24603b39b11c8197e38d998b73b1f121b66575f116898e6bd5a4941,5267846d4edf23cccad437ba61d90c5483f1207d7dd3a934f93651160cde9259,52de8b90521510cdfc8c6c116326a7f0fb866de5a9e011f494055e62047a4623,52e8722bdee1501b58fb0c2b485438dcf9966d47ebba756a29f128786dbdd75d,52f918ddc1af6b4b4289ff132775fa524b19970dc2ffa2d9ca9b3630b571c6bf,541b387a7e302f4839cca9070642ede20d47a2e302ac6c7a59a11c4d25b8bbbf,543c6287788ff28fd1787c9e9051494ae67573a6f0cd6d65e8c341fc93e698db,548e021bca9558ef7679d19cef1afc82eb316e42588b3483528905cafc9589f4,550867bc8a52a35999861f3a408e9d17f5bd9884f6957af1fbae47ceb457634d,5583cb4b4e67d5d849da7441f50871570296d7353c483de69b3d95224254a67b,563101c52bc2f32f32cfb830114349a8ab06af023ca304f8059319c21a61462f,5642532d39c8db545e4d5b8475fbb27fa52ba3f1132f5855bc221b14d7118ad9,56648393ead71d55444214d757c16462063657f2295f48fb4326cb1dcaa094fc,569866538d19de6c5ec36c058420c1ad56344220ea9a6a25deb6472b4882f138,576d8c706f87ded117cd69846277d416d96747e329744a0c5e3955591053fb9f,57922197bb948cb72f3c7d689a226e7f3a2d19d6189ceecf1ae3e825c0eca4fc,5823b8c6ee2e2730fc9a692014b1bee1c943ff71197992d9114ade12ebf7c83f,5880b07d776b553140defc6a83f11dac7b8571d68720b70d3d62e49ba415ffde,588d02e708147472d089d5e8ec6a350c80ed2ac87e5837d11c1b3c5cc6cb5add,5a1e2edc14996165189d853307542a6e744cd3bb7b5a1efa4f1612233ae2edae,5ac3aa41ade19525ebae8b31ff16d70917d6dcb8b548cfb43456fb1fa6dcde8f,5c07352d7d278f4c1dc0f176e2bceed2a256bd829f7f767a56b2609d96fc1eb6,5c2e31a7310ee131bd99ccb77857b292a45823d91c0a59131102587f5088ea07,5c8ec45480b9cc3fe5bf6f914fb912b1f149a22aa25f708696940ff5990e394f,5d3de03283ff31938a217609d768112b26a97aa40580d11dc4ac34481eab708d,5d4528fd98920c18086a65673eb8d9abc9bd60b699eca0f40da4cd975c1d118d,5df5007fb8e7b403206b8f2179574c5ba150de0666ee944644b9e23793152b62,5e1d89296a224c06457d266d48fb2a96e9f830558b124b5aa886cefe0a532a9d,5e2cccbc1be944a2daa964ed6e80be49524928d264b07d5e55b132c58b262b44,5e3e9e93ce94fcdcfc22e1936d661b0b39fd11587c026696e00d4e74e3214c12,604db91ce85a9632fd9c212b438dfc079d4d0469cfde2195bc33761bfe8ffd6e,60f29b3ef745109162838091a3570d292fc81ffbdd430d3956f6c90c19080022,611ba542f5dc050e863c4a45f49537d77dbc5efccdc58883594cd86b5fa1cbe1,618594b2e63d24a3c7f00f2ec57473d0e9cbb402da60765cdc3ad65da2a5e55b,623af01ec889dc0a4fc67e198e12a5ae460fb01d43e17a020f13cc145e70898c,634208e5c9904d563a623885acf479774f6adfd975cc283c19f0029dd900bd59,63ae81b49124b888b3156fb5beccc8d71461ca921eec74bbb64782f24fe8439b,642cb8773d3a49580d6a2c5798faa0f0d3c3660031e85e7e6e2e210eaee541e0,65a3c9a638d0b5c2ba67fcc8c506b3cf5714a1f8aa31b560dd15b819741fcfc2,65f83c30fb2377a83f741691f7dcff65b3ece62e7de9ebcc009bd4239c7d24db,6644e029438529628666e57bd8db330b595e09de7bfd11933ae645ae9f694278,67b50eb038f343839900326472e8a587e5c8c9a666be7b96807b142df1216359,67eb915bdfad2770ae0756668a904c3b0a1556edfb3a68ffbc43a8db9a9cad9c,680819846169ad104fd76eb60265bb38c9431e37da95012595d824dd920d3320,683d21de2515c8218d89546768b90d1721aee8628fc213e7fc6574eef06d7173,68509c945d3de5307d59bdcb28b85f1f32779f28b673e1c47d8e883b1f674712,68a5b1b7b8055ee7fbce8057274f14d98096f555c20372ddeffa0111a77885d7,68b29352ed622d3fec0fc3b02b45734af102026f8974b0aa133cfef7b35a7b6f,69075b74181e99b74eacf4f5c524028b076c6e66a78a8696e229f7174bee44c1,69e371b07511fa6a2bcfd605d8c815a7032c9c4ab5b80b6093043c0fdd9e6109,6ad0fb0f386dedc71720686d97ba7bfc9738a33bc9b42a4f71b1bac2846abb6f,6dfd5eacd344f45d53d9bec89baa8725269e2370722367aa5a8b2fd94a92f266,6e957efcf947602a833f230a9d3b909c4e9330e715cd95caf36e074831f69809,714561a42083b583bc5fa116dd9a74e7fd8b4cc618c273c4e20ba386d28d09f6,72e6a0268da97b6a8e21a13d1836d305a94a6e226620650144bae24ef09438b2,732df2f78e02f7130e33d3e9cdf183b66f074727cdcb838c64abcbeac70f0cf7,74763aabcea419d114f5c7648c79b459a048948bf27f1bc546e8af27d3217870,74b9e518ed20641be552091d9c573fef4fa74deefeab5e654d935358ac2f3007,7529cd7c3e88518e3563109f88c18b2a95b15864d46edfdeb311efa3ccbe33fd,7771079b6273b8e6dc7288bb72ee1f30c3d46f9965a9b89c9b6881360bd4ba65,7800b70972b9d688e1b636ae8661f2236a8ed52ae7da45aa3243e5340dbf005a,78810e25669ab63f1e70c75c7bee5c605d3f2eb172257f0a09bfd0fdac70c031,79106f44bb05e4297800e19fe19170029e3b57abd38b53dd6a6dafe05e618ad1,7947f7b1e9fc08989658f388c3410c55039e62f30c20f2557631915c64fb4c65,7ab87aca1031cc97d2bbb0c6ac95befe31d3aa54044d1d94b232b7c6eb3a2bda,7b320d7ce0e0269eaad555c916985934375a307d47684b3793d2e394e6d587b5,7cee4dc0f2a8e30fd8acc2eeb0c6f544841b58fb1fe5495d591359fa50f5c623,7df3f98592c462a15ac941aacead621e247e5ac00e3622016490f15af5ed7f3d,818a012620b51604ce285e56e22ff5a72c3619dc613172a25d775fe2a92ba493,81f08c62d7c84999bae5dffb40668e78d5a96a442f2f2a16d637f361d3156b86,820c8703f343675e3aa8e72ecfb9eca9da88439a4a0f13bc389e6aa9acf50cac,8289488da42acadb4b4ebabd38e16a9825eb4c7aa7e39421aa324e0ed56410d5,82a4fc50937e92f83c9797f2799ee8527b5239c9fed8f3628c9026b7bc85b0bc,82af86ad9762be7bd5a3378b3c0f377ceab10da0bc83877df0e853930fcbe2ec,8398580bd7816baa20a657d2bdf1ae1e7fd835cad4ff6d237c4e6ca7b95620db,83dafcc5d2d16ec0de39973854e60b2bd179ff50936048b4fdadc6721f53fd57,840366fe94ffd4ebc1adcfbf14ed100c7fe3a4a6f415da01e2b21d92dafff668,8457684311b8cc4bd5b7dac74913e3b969b8f7a4e2e5582b168a911763b6f8dc,84f423ccbf6927242f1f78fc02c25a256800a6e828750694a36aaf026984142c,85f9df1435e535fd7077639a6c93ec21a58e44f62f6c836dfcfef686cde2e358,86e40e57679e88a2b85e88f482b60ee07d8c932e6bd6fd430cfeefc0b915d95c,8853a490b01550614daee13489686478a7789c74e7397c1dc2104105568f12e1,885ce5da6c3ee705d9969fc7fbdb94fed611f81f206bcd58bacacb9b207de0d1,8a136b0c6a3c3c8442cd1d45a42cd9619b27920e89acff8514389c7b4fec6085,8a77a35b74056d49166c57d373cb1fe087d0b4f58deb751eefb808134107ce9d,8a9bbe60e4418199d4b6b1e0a1997e012c5b9f3dc229973e104d937d2f62d44c,8acb3b7ac3f5d16d9359a7182b3b1ac451a64fbc49869f45249da48df2f9cd9f,8ae156a08d18b429d1791b42527bb3668783223b6a11eebd156624a6a434ca8e,8b31ed63c7160ba907bacefa1eeefa77f298c90b00e8fb53d70221b3a60dd371,8c6860eb83a53cb8cac43a3dc2532c17b001717f0645c5a4ad6fb332a91a63a5,8c7c43b2b7d85816d1fcd028d5ff01f3069ae020ea3c3ff69416da61a1cad368,8cdce767b814517d058ed2043145494534cf19bff5746928feac14a7b140a66a,8e891cd38ed2d3c997ff1b1aefa6afe487c99f79f99365ee47348b71ce6eb704,8e897bd76dc8a21335b36392cb0ca80563f49d4a98137ac56cbd9602d2620c1d,8f0c905e5ca11969201b06cb25df9a230cdb7253435022d4279588a93abf1a47,8f71152f4ff5fd1df51f0949cc8042b9c98fd947a05acb32fdfa60d2589efce7,90f03c91ec410adac668772779c283e8a0df88cedddfae2359781652ad1d9727,90fa147d63feb45a045ad4ffce12a2fc9464e2f44c0bab1d689b88727da2324f,917e97481fd2f923b7bede48ccf8d69bd6e252fc5489a0144431769d7f09e23d,9226a13979cb78ac57f17c83f07ab763e055f81a24516ecfa90d592f019ff2ea,92a12c083321cad3786d41d797809fecde5e27f87a3b1933670b41f2590ec4b0,92e5e1e2cdd3df8b2c81cbea85336b35bdc4ec4b7b7f75150e4a60b22e2d1353,9324678f562f1c220c9e2bf8cde8f560104486ae78a1be2866dec02d40ecb786,932e82a37cc320f6540fa5c9dd406c428fbbb149d250e45fdacda3db8253262b,93832ffc2823e49e0f03f6da22ea90580e6824871a12a4d13580e146189cd926,946404039ed55f100e922fb8367b5b01990db32f746776da7550733ea2157e60,94aa817204c8107f76b06927dd23219c6a9ad475e3894955dd401ae66ea2ba56,94b0843d327728c1a9b93a635b3a64004374d0d527b8306b070dfa18082f58fc,94c4f07f2781086129c9545070648175655babe86b440311295396a42b162ceb,95a223cf40e27276403d5f5926926a5d659041cf7d5d539c8ec24dbe1a50623e,95d30e6530693ce3b39a17918d421c66d9673ec05828c4bae1d25561967cd461,95dd09e81c477d650100b07f7c0b835d012a7354aad7befa683ae5d0e830bc34,95f6acdfb6f7ec76b042fff9e0e5c3dbcae33dccd836545bbca2f2991ed6fff9,962160b7865f53219530aa51f855a9602bc5a8a4ba544658991ba2bc349e14f3,9663f1c3da29427d5cc016ab656b4e3f26274485a766b16b0dfa69911ef9dce9,96e4a9ac7d05d2e36eb38968f6a027945c0dc9af8657c5bce36ad0bcad9742b1,993806b87723b5cc5479822876252c602ff7fdaecc7d371099fa2fc98fdfb4b9,9996d389de04bea2933258cabafc8a3bb3a7e2038e27665c99f2dd300f9fb645,999cc858f181d144b0af346a9934780b4152b96d2554a94d4d9117038fe61efd,99bda67280f22c2f779d7f6fc2556d7748c43ed405c88db073da9eb8aebfbdbe,9a3970de1105d7206b498b02992adbd78815b89c405016e835ba96f80794a0b8,9a962b090f56d7d4626269ce6a6559261111b0648d57d6c9f8fb9f82aa1e2bb4,9c52b97df51e6f6f1c66efd1997c1db35330fc80366a5060a04b43878549dcb4,9cdbb66544d208c7b7df79860024e96443b1fc1df7cdc8e7ef0ce921468111b5,9d020621669f5048dc550bd4d40de81799ee9766c69312cf07c3a98698b9836b,9dd56740d74ef21315b266b80ad877452ec860dadd53b387df41090a87014eba,9e5c7177b683f94aae3a8920a3afa09bded652bc748ce3bb0dfa4607e04d8059,9eaea38d7c8ce152fe1f323e01de31f3bed41bfc3c532df8a2ad3ccf2ded975c,9f85e7d1e8869f04b477443160ef634c0e2edc066aec6b288e6036186123bfa8,a03e592bb817508f45a007cac05a57c6c1d3b76c55c57b71c0413da46aca7864,a0452e0ecaa71a42192057d0bfa1b1de3366b7d619a28845cb2be09ef66fd3d6,a3fa321f2e133704743732fb8ca0fb6ded9f0a7849b30833b3d06c4053b6d2b7,a49ece6d6124722747110baf8f1f6d17e1e02bef448f06e7e90fa8b8f722a2cb,a58e55fbd2b163e8dd0b15198557e1f4761268a916748411c16f245ee692cc93,a60e1d55530380d3ebc2f8cd824ee71c85d400f67daaff44eb84087af534abcd,a67ce199cd95d1417a455544d2b9e43f28f1a34a7c277761ccd3615c586ccbb0,a6817309bb12ad3ff446cc7f15c582f7417aa76c1e6e5eec9c3298ee2cec4d5c,a6dc68b83668a28ee4e7e00eb5769f260b4d1f1185d7b3725d66d09bdd183211,a825749bffd3b1e04c642753cecd777c993e8d95125130992b168b871108119b,a84499c082313d2187e54886b76de0dd0c1972fc867c9eae959fe0fb7b70fc6d,a849bfa1e39068f71760b8cfedc32f124d10920573966396666727c79e30fa0f,a8fed22b203eed55a08a80ef010c159e89a37aabdd7844403a72b35da2988851,a922e996c3dcc94b2ff762fe6deb77afb9196b87420a62a35dc9692aca568cd3,a96c25c9edbcafbcd5383afdf5e7b96206c47e795fb4e84fff0c60418a47f7c2,a997b33b358d66ba8f76bbfcc171d04b217d1b236e5de390a211abb195c0a697,ac025be2d293d8ea4ec04ac2475b6b725ce5ba350f0fa3f0aecea1b8b7575b03,ac5f883f90bd256e80fc41be190fc53f739cfc3533d3c38767ea24bc494d5325,ad9b5af4468edf83f1b6a1f1ab0a2dabae905c5eccc614bc34e5a1c182b899b5,ae4537a3a329bad0505078e293f33ea0daa852c9a38e20131accdc91b411a6c4,ae5d6b6b4c2e94d46df640e4013811c7ad70081cbc94d89545f134081e0718b2,ae684ae487e9f2142a34705c898dd9ce951bdf9cf303e8cbe1f7e511b329f318,b08b1bbbbf2a73451fb3185eb70e76cf486b1cef385b8bd979d2cfe092279520,b185602e44e562e4f8379d846ed4e6ab52d2535b9754853dbc8d400c933a60ae,b1d4a5378fb656e0c7f4574da0b909dff0b8394776315c194fa53bf1acc9ad78,b2183f7452659a4f9f888b10fd419ae768fabc4ae1adf7187b76faab3683059d,b2e4bfff264d01f43bf9eff0c384d7e7d97cd0463b66b3d05bd953d74eef78fe,b44613c329340a7270578888c44c3d4e7f453d31ceae14a23a9a388d3a55d84e,b4671b6ecf60a169aae04002825431378a2f99d85fe03b22ba14dc9ec646fb09,b4fa4004c17f73b538aa22bdfa42d17c8bb817463a41ccf3ebca39741a1b0489,b6dfcde3e9540100cfa82ca87dc898e08cee95d4e3e605f9e1392e02c3dd5804,b765e959b8f27461456d73bf98d02883cadc9f7a8080ad7f5faa46f8d614afc2,b8230332e9fc43bf52459efd173de9406f695d6e9926a573643a4cab432dd4ef,b83516616c02a18b09610d5791d71223b7c8ca47b0cbf8f9a8891616f5a42ff1,b8698102620177ec1e6d1d0f606a39725693cb8b46caa26c4216a439c86a738e,b86fbc1b18b6d1259f6c39614496bc0526abea45c93cc68de4398d7dc89347e3,b977444a80ab859c02ac387804ca8544edc4ee87346cad5c16851aa6107b1cbb,b98aa952a922ecc0504584d843892a87bc8235f11f1b2d4021032367e803f50f,ba22331b6e7506e114a255b263ee7a3ed6b11ee0d06ab2ab7683156af88d98da,babfac423bf1a7916e188a1367c03324c1bf15157df6c98df29c36b72eae73bf,bb69428bfa52b3c4f5f3ed37d69e9fd5f9d9c5c433024c4fbaaf439b610bacf3,bc9cd5e871b6edbfb49e3b9d4a51ef5f3a862fd9001267e07ab47cbe72f87263,bcbe5e28c6449cca3e58d947a7cd7601c4951ce872bc2b1aad5cd668c2e073f3,bcc64f80ba094caa97201c7b03ad519a10155e7804c9b170a662972c0132411f,be4528b9416e2704f7e7e6dee74f7cce41a34e6accb74ddd13df57f466890d07,becfb9fffbba8f42f276f993d9b1c787b45b016d2483cd7b9f0d554b284f72ca,bfe92a671113cbbdc73230c67c3c4aea13791c34742d583cef4433340761f9fd,c02d22671b427415f354dd1eda958a04d2ecd428b8dbb53947b38bcbf6372478,c05073d826800fb9344b01cb35d39417fffa518d289ba0e78c481c376e96d077,c0c449e3dd4dce3f233d0de0eaeb326f3e0c5b8d56d43e7ba80901e2c11c05dc,c10cd23c44c272a2bc702a433871c5060e5a91ec9485e53cdc625eadbb7c635a,c15f0a90b7135428047817f2e960d449cd5095461683f133d5069b82d249c3b6,c16a572464a1514da55c055547204a1fbf1b650c0a5971894515b31003f3f3e9,c398c928c868f91bac31e4810164437671f52c0613e55f48e6385ff202ee4986,c3e757b2d9d60cfad812cf33238094fb5d5c9c160f79916a8e26e5141aa8ae69,c449ed89ae9e0aed80f79746e2caa6e13c7bebf469ac23a4e343e79fd4b4d364,c477145772d2fb25da64bbf8004c4c0c86823cb5671891184962ee946c26149f,c485132ef0a7f90625e7edf25ac54e38ea420a25873bb28968933191539769ca,c4d1973672491afa4d8909907e30608323371dc31f3a2052e0b6c8c7becec927,c4ed88b9c0bdbc7e6eb4b6f55d56df9fde11ec8ded6134c904c06f229e7dd47a,c57649d01085c2cceaaebda63e2cd33ccc9e043ffd3b188452fbb42796e685fd,c5ddee5b96c6430055fd07e24da518b1af48361c812541988e4713a5170df2c4,c650508b94f1ca14018286ccc78f6143749374ef4ce95613e4fedba4c72683c4,c650bf5564416e9a2f77015909b944e5cc156cadf5a2ab0111118736040a4be5,c651dbf7a8b62a266854422d3e115093fedebff98b3f3261e61ada4730bdd2ce,c6ae89ca068bbeb458981dafc0b48eddbbeae4e7d32f298c3eee347f42477d7f,c7b80b902b034618048706647e44aa5c1a1b463bef9bd5195ed291defc1ddfd7,c90b55e4449ed7c018294aa77fdcfe39ff8f7f737c863fc1a73aa303cb4a5b59,c9dfbd82b6ac5f21084b80e354f00365847890a9f563f6f919e0e6e2fdbe466b,c9ed64be24b3ba77250aaa09762e68ec40e14468624e358075dfa01b5b96797a,ca4b7dae655b841e3a4f709053b7030e503470b33862677677ace1f2300d87e6,cb4f4c30bf36eefd8b45c01d01c147e4dbb1f734c764ffefa16bb87d47a0d172,cba07b422026ff8de1bc060d19bd8011a2dd1189f21e15b362db5238613fe7fd,cca42b73230e6361e2f2a1a9fca24f9925a7e352a39a27a88b963c772699b683,ccd47295b8c50a7ec15a4a5f89cc7eb6a0159728a5d58ed89bc62a19706df6ab,cd2672bf3deb5f19c90d7b2fd4c0ea3e69f91c0d826e148a7aedc84c1085a43c,ceb2c5720e9355e54de98ec84661c80b339112208b8faa68f0e14e0bacf8671a,ceed169f3c25d3877179fc0530410bab8bfd0419351cb401a00a8131a3bfd17e,cf9b37f11c83b455c8a534a8293b0b60007f59d78e47686c8086d0e59d1206cd,d19d9663817ce91133efb3f57a2b2466dca779530c9a46dcb1d2ef6cf9ac4a6c,d26204932e970dbb1bab11708600150c48da5da0dcd8523183ce6a4b982c5133,d337528edfc666b7567284eb5586f63ac4fdd858a88524c498d0e8054a97839e,d368d1c1e61dd5957f534c07e674bc9cbc83318ce4b84ad20cf7e49f48da4c34,d422695ab4adcd4b8edf2f33b75ce0b95bdffb13b6b94288fa071dcc1f3e0c1e,d497572ecb31d1f6b4f2632f195c74baeaa072c14f6a2bc3cb35f4ad385d4bf6,d4b65c200222b23f16f0fafa5eeda7390b558e957e21ad275b475d74405b9f57,d6dae02edbbe9aa81bb638a697afba97263af818de26b69715d928c7d2f06b1d,d7733399d0d9b040f11e7805792803681cfbdcb2ae26370714a2ff0682b1cc11,d865836fc7c6343a3ad1b818591c09bc498bda998f211f63db3d1834b82ee4e0,d9164e10e286603f1c8d124eac31bb908a319a2f687a02a9f86d073d65fd1c19,d985a5c0731b1abd541e00484c75a568e615e40f51bb94021b92cdcea7ba01b4,d9b4031cc92fc4793501872eb0edf6a6d694cdd543c542878bc26df3644ab089,da7a98a9f2f0fe83ee9f03d1ab7646f0f720fe587336db9a0dbed66de17a985f,da8f9b548e2ee644ebdf47c722246ae71d653a1457d391e814497afcee674538,dad2683e05497611fb3405f93a434c383d780684b387f38133e2c3cd3d57dfda,db51d1f1a7a39780bcaec3ce3b281a2e35b005debce2d9d05fb08ed8dfea7a00,db66254d1d46bcd1176b2735c87fc6b38a2f77fc4894f126bcbf2ad92eaddd82,dcce938593058f6c600de46e7a3671d032fd7d416504157be529cc5aea3a0c93,dffcab4f77c76f60095c692b6a8ca84245f7b3f45f32a15cf0ff73cb550aee98,e13b361ac026d4aa4dd03b76bfe34a98ee983619eda368f7f56638a022dfe876,e23936e6b4bc4cd8880ec3c0f76e62075515b90beed4015a8478cd7ed1145bf5,e27f6159c5bfdca031e349e696ce80b4f35df8bf20ca51ffe0c364738a5010ee,e2fe25b21b5f6834e43eba7dce75ea978125f896f1a5e318d53eefdd1701a7fb,e31f63a6c64820587c7fd3f95ab391493df7b89e19259485e38b71be843168ac,e474584073fb60150792b75017e90fec6bf537f611c4e9c6c57a5fa21e71c05e,e4de9fdfb3841ad910c988f5d2b35f39e4a629ff2b250ec97b662f7c0814bb65,e4ecaaea5173769ae1b7dc72e7be5877ace99bb89ae79a63ae3ed5c2f297792e,e5777dbb9c6bbb4b111ad55cdec26a6568bab379e7a728647bfb269ec6f790d1,e6750a5fa3885e75776197d1c5e8f8b95d7987fa6d4238c2d359ccea35b1270f,e69cf1152599368250c9f6b5b36e628d8cc96138b074248944486e8a27243484,e7161f019b321ba7de792460d72395e23202fb7f1b96f9d395f5cbb482b25d0d,e75969466be82f1938dfadb39b5be68ff362c574a4e9f26cf3811b7e8e50822f,eae0b7ee4f20924c3a8f4bae208f4cba31f131adc14b69ea0af787b4771b0792,ec1681a54992909fe8fe2221db0b1e9ff17ec9893649a36a7688a7a88664a473,ed26d6933fa8db88a82b0ddd8631bfedb11e874220d170873d86ef7112187926,ee16685fbd579f595a788f71d6f1bca557083254d3060b123d016d2f0ff3caa6,ee7c0a67c68b6bbeb9b175d05f94ae5c0bef7794c082255d66d766f0b10a3d33,f05a7e6cae04fe67e91fad925f5279a7aadc92cd2f5e9d11067b22a2f79a588e,f086938db1166c515b28076482f1e900642dd2c5f3ad2c5f50c99b806a8b0432,f0e11e99819b70c9bdc32c3d2414ad34b8ad56eb70e6dfde87a9ddf8fba97194,f1439b7ae70f668c5bfa4ad87e9d5f8b945207345e55dbe57b190dce8f502ce2,f1662a9b774ec3217b279e4ea7dd302309ca2960067d777a4b6cc3f00f099707,f1d2b4371a5fae09dfdb3aa61c4bc3b067f3f6785b8f23965295633e9d834d70,f21abec37c52a86805a69ff3176c2e28801da4e7de3ee972641dc33553e1d2ce,f27a0ca31beeedab8927ac110c003c32337f7d7937c7b96fdf413dc14546ff94,f28e2df134fc6eb0ad840aa7113ca1545acc510a158ad654920e6b3cb7cf7f99,f297fc980ca5465d83c9e4c58bbd98c3f4c7ef7ff03a45c6dee9c39acd6d79f5,f35a6800c29b14db723198902b9b710bccfd1538fad899653ea9a3c8b517b906,f3acb9f3a7b3e3cdfe25b8434f54db0498cc3996a135ca9801166bd9fa375a73,f3b17abdc6d3ac73cce7ece2d0e4792ca2c3f6cdc3d547db3ccb4e87bcac53e2,f3ea847f567aca696dc0121c3015ab75faa8db9c028b619d28e75a6295420e73,f3f52eff04cde53894e6f63860a0b5633d19d93fb1ac899825b1bc783de3a6d1,f473d425e7974fdca24cde726a87d40ff1065ff73c10b1211411544535902ac0,f498dc025f9463addbd8e17e86bba0eb87b60e725de619dee6c5bcf0ca4c414e,f5168534d30d79b8e08fd44a2f31491f0015a01cfe4e2e48ae1d5d04ffb76d7e,f529270d7cd6bf40e6f00074a861131058fcbfe3322dde3dffb23111b961571d,f6d97d12b40edeacd4b4269e8c5cc07dee131676a387c98930c6d14544cf1e15,f858b31ff34c4e8c9a0b2cb1f663ae95913bc1fa05ccdb95bd706dc323873584,f89dc2039f7f0db284e9a82aff8497f642cf44891a184db864226efe0892ece6,f8b9eb9bb4a57852fbaf40507d521373dc379175dcefe3788256387260b897ba,f8cd26c24a6a403a9b0cb4418398de3d82807ba6dcb359bcf6008124d0230224,f8fb39596b42da50299c47c460e6c82a4b12fdfa175f92fa8cd9564ac131077b,f97c1f18ff19ec2f4cd09f567374d2acacf4b0fffa1d6996cd9d725d9bddb05c,f9b571e4870261a95d8fd70a757f65e2bcca85e54bb8cdfed8abde2ecae28619,f9d99fbc581b41f9d1f492e1288b9a7425f4a001803d47b3703a582441e04723,fb5a523d5c584d4527e700ed2882b6e05f8daf98e516e72452b3f7ae2b95ce5b,fbe96ed5fb0a06b299998aa922057cb3ffd3b234e3139d95fc7c77b0670224da,fc34d915dbbbb4a434861b7e451adbecef4ef2cb21f6fe2e647f6215a2264fe9,fccea63d0eac56ecdae1fc94cc907146c6bf6b41b1ff178057c8718279c9d49b,fecedc89f7400e7bc3b18abd69fcad8e51f2d0d0654b5e8088e52df5c3f3a04a]\"",
                    "\"[]\"",
                    "[002006c9e11e0bae3d05281ab2009283f132b61d4a0baf1e433fb89cec0663be,002e9794349c08e10b830f03594938c8ddbb9ca59569707f5ecde496e830a6a9,002ebbb1c3e28c4bafbcc1c1fecba321c8ca14bf3e7a4ab4d1f9ab30f139163b,004909eb12f80f06d8bcfee2e0f848ce67a3a6b5ee591ecb233227e1a5479960,004e5a9bd4a0ce27eed0efd0d2e45eaa0285c6b387e8ec3400c279e58c580872,00a3e7b2cfd50d0a985f6548cb8f0b211416fe2c29687527ae2abcd6627ee5d6,00be0a569862763fbfb54f0c6df9a8a35536d6ef6239ebe0ff85fecc1996bfbb,00d96fbbba3814d5cc2f9f580a7743a2438413dbec01c6aff78409e5ae85b946,01241641df42afc7f8b7bbc0c16e596f38bbeb9198c19887225b51c1e5de3a9a,014bb70342a83aa9a16529766c6a78aae573a6f248ae27d18e047df545592aac,014c27a1ac7bb3a398a08c163d4ab1858e4b5911c28610213f832ef577fcac12,017f4fe9bb0f2907f5899dcca931823a1552c2a8be9a825f03f75b85ed10e219,019e766be4a6ede2451fa818d7a7e127ad351e558050fa7008225b1a9d9990e2,01b10becf6753d1d3e5497067ca5f243747be64c894e67d183d9021dad82dbeb,0263465b09e866beef06d9d8271296e60808ded55b4c7075bd76c73baeb70391,02702ad9317502221052e1b48887579fad5f58078d2ca490e95cd7e5b91a03a3,0283383361ab934a3534af79f4f33f475c1ee64a8fce29e4dea1c740c5c4fb53,029a5fb563473d46caf75219101d520c007f76295f01388de3426c2a64682c78,029dff19931da816b256783acfc1c5895776c73f38f3206b44b7eef71a532377,02b54af8772e84478caa0a648bcd1a79c9c603a4fdc5540e25db423a68b7539f,02b5b187b8f05ec57bd149d28140b40a456a74accc90349273778cdfe3828a5f,03aed1f56a35543ae2cfb4cc9b260b6dc7ec0441c17de6181a016d2d123408d5,03e4767cb09106fd934451b08cc7e656ada9a55791012ea05a9c8a0684040b50,0418a9f2566f0f0de224202b28c5a62441e1a3fe84c3f966b1eea10bbdb952d5,046812a3385658e41f79ab429559f1cb00181a33e4bb1ae47d043e14a4a60c7e,04c5331f8c2fd3f8f11d442e55e04ce939c5b52383bfd4392ae9048f8afd97e3,050429a57ddd989a6b3bdadbf8e942d6035f4af365a80b698cbd1aaa72457a36,050d685a1aca6a6ccfb03becf203f6a49d72268db46e0a88df599e7406881f56,0548a61c124fd836da3c01175b744508b115b4c5c26cfda026ed18fb32a7e0ca,0554893cff328d91600b37a2322c8c60854bc5b71608c62c199e788e3a286cd5,055faef45384afb4852ab03336da546c830b1dd73d9ea921d4573de1742e7855,05778345c93f3a080f80b9ee6a02b55e4836b8cb1124c85a94ebb34c2436a03b,0584796f243cbb9230deb1b64b80c1acde258c2eafe4028396b889356c3478c1,058a53d92edb5d5212c601c8e7357432008308f88f0e952fada2275cf4449969,05d1b4b2c01c267fd92e6d66c359890833a31b4e85b36eb1eed39271dfe85c1a,05faa9f8853b931a5accf6a57fabb93adcbb97164b3cad683e195e9e3e5ca94b,0625908d1579dda8d6aaaac28d7b48324e392309986084fa6b41a8f531248c36,063014c793dbf6cc1a928d7974a0940fe1bebf6f7832b33c8f18cf1295e9470d,066dfcdd14fd472e6e8cacad0b67d9e9ac20e9eafe5b61303572616527c19e7c,06812f27c5abfb4926fc773559f8bb631a092fdde0d8d26913fa6c5e06c1234e,06848c8f9087502aed9d8e7834ca3ef877f45dee6f2c04915e7b2b73df4b1c29,0684e4d7fdd86adb9acfe50cb962addf0b32f0030863ac63d59c8376a76c0102,06ada59ae424bda8176c9debd187f27d9e708f74ad9593528c4ad7bfbbcd9d0e,06bb1271fd4fea1668886a8f090537f44af2b2ad6bacdc15cd9476e186efd2c0,06e62f32224e4a4431c055f97f5e5e2cb5b3a1be4dcb98423f16db54c466e510,06f8bbcb7ba06d7149aee374e5c1b8b8d2bd4922f0688b16890dee6e44402690,074696fb8c2079adebb610f3fb89a88de3f396c142a2c7f2482e35e810ddee54,075de2b906dbd7066da008cab735bee896370154603579a50122f9b88545bd45,0783e3839a12a7aeecf9c9e1bd60386c3565ef8fa562d0bad09fc0ccd50f6107,078b8f3cf6715c57d14885afa0ff3970e251718b5d79da21d69563cec7b0a5b1,07d9fda0a723dd4a79aef973692db6d2a438dfab0063d6e6b926240d7aada74a,082e94741c927eeb7f917d412f956a56b5ba25bcafdfd439ddd7ff81db594d48,083cb6dc44b430fd46e87e2ad47418b11c3e3503c4bcf83440d9f047c972a214,084601e33bea8690d8c9d355f8401ba4f3df2809425d6c2d63821f3078d7d5f0,0870110310a6c3ff73304673ea4cbcde23bb48fbcebf7cd334bc407e9dbda270,08718392f2739d3926dd64810309fef06fbb22df590050ef745e44a5582768e5,08b28d8f44bd364d2c683691ec89aee9f26cee28ab76b2ee78fcf5b278a951d3,090bb4e22075f82273e86472f10b3391dd6fcc41c12e33cfba50d39eb9f4b007,091799c9b373b2532d1980fd3385f2700eefa2d67a5d1c3ba863ac805bd972cd,0917f342228fad5e5751501ad60866b8a6c21aa3fb02e60b8d8e8294b659551b,094747f9db59339f4d7b8979932f357ee8d736c1e03f7488db565a62a6654df4,094afb17ab26d40f014e9b49102dc8a8c8b74691a1c197fc3a669f3f2daffdb8,094dfe07de3daea2082fbfc9a00232cab12df8b78e7b68c3c3c29d86a8d78c7b,09618c19c68b1ee7b86d88a6202063880dcb0df6700e3b7d6ef39781819e143a,097c0dd36093e3ac7bdb47c039ed177d3b30cec957d8990958ce2cbeeb577f56,09deb3cb4d2a7d5519a6c288fb08a4e0094c9a8dba4df72ba0d5131f9cad3cbf,09f75d2f3968845930b95bf9cd82bc61232120c44b079c4fbb1671f52a704416,0a1e5724f7bc0596a5db9bb157ce10efec67907d5a859f31d8226fa20c46f1c1,0a4d2d023906000c35a5dab8250521c45c779a0a243f4866aac586be02160091,0ae6e62e8a520d66e6d23fcfca4c94991ea7ca8e1136962e6ebd8d116bccb65b,0b332a843c43c320a65fa557a4f0607c654df0b8e0a4fe6a80ba6d6ad0d72719,0b5fa37d3a26d8024021657223d2b3ba048faaa82933ff1e7b02c7cac11934f6,0b7e822f74af7cebce4da29d367de600e4cee46c818563245372a400d6a744ad,0b90edb7b6f318d416a9bcb495376a1bad101e492f8c5f1496b4cf61e7c432b9,0ba62a020e79226d9ed0671ef9a57ef01b2e36e1a059cc74d1e3bbee7cf5e5bc,0bd6ea3f8c377585741e588c1360682800ec4a86c30bc3c984eb963fb95b6d18,0c186205c58d899f964624c56b1e119b80d10670ad6d83ed7d95d230f3a3506d,0c1aa8aae1fa718bb5b61eaa44ff318480cb0673f72bddc67fd5ebd3cc9af223,0cc43b4099bfa0c501c21a4d8b19d8595c2dc97e194ef2e4483eba090df81c1d,0cd30499865f8934cb9cd06286aca15b0adcd7d333ca958306b853e595889237,0d3a8acb0fbd4e673368b27622a83de1f9c54d304f04745042b4ec9fef7bfc35,0e0716e827f5d9f003136d362b785c8c5ab0755a9852a6df49d2ac865205e89f,0e3fb28d54400826181ce35e56ed7962de469d1b417964430dc473d08418a219,0e41c9a963fc6526ef507d62f67bf0eaede14c0768a06d8a068e559d83f17411,0e4468e2ed28a78e069e36ee872ddb09a550aecf9fa16f4a704938c98e274979,0e9f32a2ab96c6eed6a9d5900fbf6c6f4e0727db9109d04563bbfd14c91dce6c,0ee81f9b9a745e8b3a25b18c3a379228fe9b3bddad9802844396aa9ef6a8e629,0ef342d4966fdf13262dff4c39c07abafe6e2dfa871cba9124d679075e4bdfdd,0efd7c82a6208959b3c83b24655c2787b4c4e435f7462901ddd959aeb0f364e3,0f0ad1712db1321194963fbd4a45b27a29e274255ad6dba46f3f72c655a9267e,0f2334ee6092ec5fdfcf46f33f23968a9ea18fcca74f211cfe4a2c0917cb9a17,104537a092e74c97f8c9430cf2805e5ec40363ca8355a037d1980d3326c42b49,104e0df8ee81c1aee60ecd3ad5ce57bfb51f52daeb45bdd8fd99a7895d2cb5c3,105d9f688d0fd166560a012e157a94727aaff07a011cfab4c52001ac06daad0b,109fd98166bc4593c8f1cda8c3edc3d98401be91ff37f3390c0b93a164cbde44,1146a5eec3df66565d8f8ef091e2dd3c84bb57d7c68afbd6da0c9a87e29ddd64,114dbb3f6c6924b884eedfdaeeabed87c4938be2fcb5c23592b976ca20b1fb21,118c13ca602ef9cdabaf697bd55106ab7e7e94f978e3ac438850bc3ec6e7b85f,11ba6dfcdb4f815e424f1c7742f6ee8d9a39a2792b8d09bfaf87826dd6207fbc,11d1c6ed3f93365ebac2070524e7bfcc57fca96f028b93c0390d8163be61a8bc,11e2930127ef6a0ef966b0976183e2703929f286afad83b96b9f505e9063be1b,11f10dfe71b6cd5f29fc3623dcfb267d77c4be47630349d7df94d57f48394890,11f4b6b2c31def8f5b8cc1a991ba581d2549e88ba724caf8e0c24d95c6ee16a1,12086b008fc51c4c8dd85b7824d8fa835192fc782bf05aeebfe535ce0ede036c,126455b7cf91025ef75b6c411f130628e0abd47eb981500afe3b90b2e98a0580,129d0cabcb0a509ea0b1fdafadffff6d2785e87c606faf1c8a5deed4127766a3,12bfef00a75635b5cbe6ea91335f6fb0704d067736dfac7fe15eede07cf08cb2,12c203dafb3d95c1d5d8fa17d81d4923d9963b91a95ba6988fe67a2609605a9d,12f71686afbe25c96faf48156ac1f1eec76b7d2f176db6b4065e0d7b62a45e5b,13230dbb53eab1b4346c827c721c6042daf8f4186ce3d6e03f6f868a49c571f1,1328e2977deb4b1e60f00824a33d907e80005093a318564c061653aad2cb389e,133eacc60ff523e32a6fe3b8f5187bc85cf41b3dfd8a9cf7272834430681f05a,13f32185234256790944e37cbea0d85d00e34ef25c9f47df59c2a850b436ef9d,140bc7c6259553cbb4c003944ba788c87f5ff0faf996207c762880bd79d5c178,141e23f8086187ec1ebad2f0c3acc5e522ae778026740462a93076e643a270e7,1421a989248ee0a8fedf39a0f80effbe6ce6171038763f1a7b866b4d865cca2c,14411cefd853b305fc516caa86abded0b67405976a675f9c2f8bae51144411fe,1472a84085288a14b9082f13bdf772e8496fc2c043651282879859e7002cd027,1580f54ce9669033a007d8be4a4eaf0d893d3b84be66bcefab22c4ab684629e6,158fe44d14054232bfabba99bddf6949cd7a5c57757cf65f0cf7e76feafa0888,159e2cf0fc11296aa9014b81f55b60bdf95c5dc2ca2e7d78d76c6e7d2e815a19,15c15ae67397a8673804fe18ca554471298ca83ed894034734f6cc3103718d08,15cdd081c06a3eccb42a6e9c3797bff7670ed19bc266cc55e7a4a192a78f7535,15cea4b65eeb72f00ee8fd4306bfac813e794fb44252512f9e28fe338455d25e,15e5d29d85d5f5e40be33018a33b1326749dfcc8e9c7f201f6de5e94fad9cc6d,160d5b2c7d6740272f8455314dcdfe2385719d8476fff4ba4422ee6e188d2686,1623dfa516d1445421f9ac6c3f9bc0676ae03bd3cc12a2993b27d55df3d0155b,162a12822ae939e8ba4e03e7fe45b457a0a458b80f55297345101f580e9cf65c,167a53293a4c58ffab01f93e30324367ce44beb8c56a57c70e398e39ccccdc94,168af87e6b37ab761d9a4840dfa0d694130928e52fe8b99d50023478f6a7d80d,16aac10fa6b2a2d3d56e2373d74f6973ad1cdc88cc2131ced170680d50efaeff,16adad4982b4326498dc495d96d9edf767907ba5413aba2dc3379dbdeac5d9fd,16ec53106c939e97ae4e96c95f4c7e165e88d0802baac745ceab3e55010025db,16f3d015daf76a184273ab44578d717210326644a13579a98881151fe789e9b7,175294f02648834046681e3c15084155fbe26069ceb4629a08f176b588034fdd,177f6a4c372d0e385dcfbb29696ee437b619f4d82010ef2d6523e4810d25c88f,17c220d01014071b3a3a0f993039967d7c65e1073c566777a4d9d7f12467697e,1870dbe2168da3b3fa367622e9802b4546bba4089cdac0112ee6bfb3c1245cce,1886398f2ad3f782db2f17f57441d2c71a80afaae1e189b0a29422c11a9f0f8d,188882d735b2738253422f4cf11988b9a18a1b0028ece53ca7540d40d264f31e,18995925bed02ec8e1618962f4fac8fbaa3da62f48df5b8b6b24682476a5422e,194afc2f9237ebd692b2c69cc746bcbda7c7d91a350640af965dfd8fc92fb475,195dcc94b799beeab66e2feb8422de393605c419759086deb800595e149913a4,1a128054bbb216a7bf0358a42da83d149e475516eed0d8d97e532061e68d2ded,1a1baed4efd0395cbcb5f33d9560a534e13f939df5b1b28ce302fba2ed57e008,1a72a247568c8f11c14366424bf77d0e185da6a9f119f4a6e8dde33c69300876,1a9733f0b4d1c86f0a7f599af8a782cdf966e07e86f0cd5fdb8e692520c2f3e4,1accd9237016a41d0a845c43e984f829d264431a1cc4bfbd47ca0bcaeda61011,1b1259926d2ac077a5dd40e4df25766451f347cbd952ca76c8ee6392aaa299ac,1b2e6b0311c38f959ddd54343be38596d31a6e2e3c1c785e5d9044e895b636c4,1b4544a92ce3cf662ba5c605ce669520d8ef3a7c30e15f5153bc2fa6dc3cf0ba,1b4a1744bd3066e6cc99ddc4a3321f8cafbb03f48cdfa4483769fb1ea5163d2d,1bb92aa682cf37348dfa042eb849ee3389d59327e60e5b4e602015300a385d03,1bc13a87a8e2cf22e11ce30d526aa770ead7efd24b31b42e5f53d3cc37c56e0c,1bc1fed2b25ec9c0b8d780a39424ed68dc081dffd75031e4c265d32c4a6b8622,1bdd29620c12862a260fced3227c9e301ad8b9215c5584fb710cb728e5f7c2c6,1c0b81efd097bc18143898e629cfb58078b57374c82380953a11b4372c21436f,1c5015d2d1d38783c71d7a107648f91d91d9efa0a1b25d19c6520c802f8897aa,1c7548d9d6939f3b554c78c23fa89be1c4c1d9ccd6e19ee654f18695dc6cdbb1,1caa729a371da010d235b1fddd3a08fef36c33a4164172f6f0e290f219c300da,1cb7c55d32488aa8e9cdfad4cc927003a66359bcd199a0900c52f4968a782449,1cd33872861eb67c72891a36df9a3616e6a957437361c2006bb1268df12e0f06,1cea7bdb5ceff1c6df574e987302b6a83f082fa476ac20860a5907c34f459a6f,1d026d74db0dfeda9594782bc9e1eddc8de6e028cb903ba3ccd838d94c2e4e97,1d5804e3201329a7710e93f668c883f4058e2731c142f99475ba315c5280c6ab,1d7a85f7ad90fa4be69550282b8fe7a682834481f2c68d60f8081e391b7a7165,1d81330df53dce34ca25e0ca1a6ea79f22ab888900ba2450532fb8ae79cc3441,1e28cb1cb9e03f3474f34ec0fb90aacff21c3625f2eb75ea7253359853460f2d,1e2aff6130feca3da8a678c41a3d5cb90624497092ebcbcfedfe7c7c95d17a9d,1e4192ff121552eb25f4c8d6f4d0b66587fa8e84baf8b8bec3e59369e22d0b0e,1e584f708b169cb3a225936ac16f5fe792cb35b38f1a44ef01bcc3cf0b6fe5ae,1e9f956eff9095afc9a8d354e821e99de14334f041d93c6c9fcafc275e1b84f1,1ebfa00566593d67060a98e9d2a5036d830fe3df4856fc84229403b9849e54be,1ecc344733fa60afb57bdaa85d18c15e2904203f3e3e2a177b550c86b485f641,1efeb5571a8575d30273d27f98a4789234a1edeb41dcaf415f882b9a7b587974,1f0d1587ab353b575863cfcfde399c1309fd99c7b8300529463504dc4758b8c7,1f0e0eda1bf6f561d8c2bd31400c329457aaf6261de5e82c10cc266c99e88185,1f4d200735ad43a95e6a26c47bcb70b0a62ead770cf54bad4ca9bb6628ad0778,1f5925e53447bcbee7e0c2230b9a878f3a8371d8d9d398a0752cf260be7a3c15,1f9246364241f6aa106267118527db2f16084c23a99f818ec9b7d771c03f8142,1fa90142d49d786ec7f9c53875e18e88ccf9360a3755dbb5260aed87355d288a,1fc46ff9a75e9accc91d0d991acc1b312ed323d452fcbeac7535ec29d45f6782,1fd4d0d36434e0b0131a7990f98d3a0632cc38cd5927026ad57b9e30d583c232,1fdf3c6e7037be7c071c2f5e4f33889eecf8851d1e61d88583d895e7db0ffb78,1fed0da8aa8d988781c230f1ff615f0696a3e0e57aa1887b04a85142b276990b,1ffcd6b9f2b7689f42e428e3077570609c403b0f1853d09a6757c80c0ca27e8a,2054356d761aa9d72c70ed52a028f7a81d7cdfcb2d782201633b397a60a1f38c,2073b1924935333b75431424ba38295c970fa933156bccefb0a399927d70b76f,208d0bee969c5bebe67c5066f1f2dbfdd3ddf0599d0db053c8819b820711a5ba,20d477293ccd4a0a8e04b584ebc363ec94790a7f563577c0c211062bee381b8f,20f6b567d89638e343effee7304e7f8e37dd24f43391639957cf0f1fbcb7bbeb,211976bd63226311d7611c07755673c5220cebeb868a7e6df05f5df56455da65,21fc55e78d51464f6d9a1af8720162647f57779a56a757dabee3c60309737e28,223e183fedb3efbe00ab1a88861e9c66b1e199501c76e4522c935f305ed2598d,225a6d76653d9a300a32b5809149d4b6815113974de08491acfe157c24edce93,226ade330a878b5765671b8a1c99b42a1c703b4c4e44ecb2875d379c407f996d,227603fe21c4d5b26d8692930b7208f5c9e560f1b719fedf8c7a373f00023513,22843d28396fdfdcab4d238c50e4ae26493497b11918a88ed965eaad3df7f351,22c995ac392e87c1de8b1979025b012b4a2b5336e9b1fd2e7069d6189df13e04,22d53013459ca2b955c748c4dc704a0b7e68f933e9658817811dfa3db96fe2a3,22e2ffdeda90b9ffc50b3d9549a2c09a4e04762e702fb87ccc6e225a1f9eca5f,233dbd26a55e1c49a20705de0da1ae2300aeb817630b99475efc503098fd6d99,238e0ada5e2bd90803947d6fe81ed498674d902e3fae67945702e660a86e34ce,239447f49b7ac313cd40c3615d4273132125a24a0e27f97004d5a292d19527fe,23985bd5ae3dc6908bcb7e538a9fbb4421b49fcb8012e8afd3f2c1860fb496aa,2398f609fced96f3dd20d15254cc8b2aac416c6c03f6cfcaf75918ed084d9c26,239c34ebb988ff47d0ac304fa8572f0ae692801aaae336c197219e5ec752bf9b,2403f02ca68d50144eea4f27511bcbd98219b36c3417cecc00062306d864c02b,2450df58534509d95a2a28e11c5b61617d28a6d370d72950816a2e109333f7ca,247a8769b15437c64c6aa0356b808752684043a182e487ccc685f5efbe5f896f,254415771c1b1cdd0d871ceb719f8b66e0f8f4bf8898a8172c33a9f37ddaa103,255d1c579c576a26f8d23161a4ef72ab01dae84c9cb37fd346cd997119065582,2567dd321329827c9651a1a8882780113cd6a08a57c0a2aa276fe55cb7be3213,260bdce1450b2b3c8e1cdc397469e34bfe7b1d550222651ec4e3bb363194a4b8,2656c8382d4db9d20c8c959104511fe9985fb627aa662179f508a5b302fac868,2677d8697658f9642812c4d5e5c2304afe307c2763db7c55e3a114bdad6b52e6,26d03538d0337d12fe8673df547a67435cea54239b5ea7d6ce42987144b99f97,26e1fe6d1cfbf5f6636a6e283be930e776e8193c1b1ed83ccf8749632d9cd4a9,27205d219b9ed7608341922a2004c81d4e1ebfb4943acf2e8686a0bfa7316f7a,273ad90812d7ba4fa275077f539c7495c5ec30250a2ad0d2b8f78740e527bbbf,2770028d2edf340756795be708d24c31f854e9e99ceb3fffdb970f86d239cdb0,281593cbacea00003d92959e073e72af9778d8bff4d3327f35dc912521e329d7,2889f3b1ae772b321b62c1ce1c2668e85ed09265de86f170fec57b7c27fb26c8,2890a43589a9e6f78c12d803ce47ccf13d16f2d8f6b2a883e8ce19877b0e3a11,28914c31cd180cd0d8fac104077c8e0dc7331563bb0edb0467c9a62547037ed9,289d837b66913327085cd5d4a694375e7c96e2c0892c90aeac9eba9f1d29a520,28a757752bb8365a7beab4f749ac3442016611549f485a97d808a612e3256c91,28b30e3ba375960d67439d8795e5ef7400aabbc1e2ff81fc9e2878e4692f7b03,28e670c31870b04071f6cce92f7d250e0a254429c908ac7299f6f9303c4d7721,294c32339a65416257bb965aaa7283f1cdd12a497b77f4eafb2ed30b8c84b36e,2a31c8fbfc192ece4e53f4668553553402b2b356181c827a2d3aaf5ac6b421dd,2a3dbd9037255f8eb56d6fd05c8dabba731513c2bc67d45aa2ad6eabf33be1c8,2a651f96c8104932b2bbbee11b857de42b1bf1718da5567734e666a097e6bfb5,2aaebbab9a11d232f0e4f366752b9193a3fbf3c9256ed74758441e740776a76b,2ac610c000bff70d5bbd4e631c28f03e3b5cbb324bc4c26f0a964a98445336f5,2ac7fd572e90f3bc1bddf9310fa9bce22cb980867f3c539304ee2b27b1f3f780,2ade89f1f87438ad1e5ab552be556fb3b3b8c862660a03da5341e3f94c35e719,2b25a8e38d81256cc975931f01e470189c28fd14326ffd160fa9db8a91695e5f,2b63e066385403184ebf82047468b66213f0a564b5cf2476ad78cb16b0261193,2bdfa1ad738ec133f52b6cbef2c997c079acfff6e414d7829fe43c6cc5268098,2bf21d1d386c8bbd79c6f870c56b4cead5cb2590992f4906418b345c37d539cb,2c16b446a6e88bdd70cf0942f860c8d929cd3299b6048f625121b6ed60950093,2c1951aa5fa4fa30468f3156805a129ce4198df3622a19a425f5500f6ae8be1b,2c5335aaef1f56185a290dea1ab6a04d1ba28707d06b868355dfec81be08ec0c,2cd671dd21960a442ae1b5e491eb6550937aec56189e8212508795facd004bcd,2ce5ccd7d679e10abce737889ea4be438297912b94a896401ff63009094f1aab,2cef10fe584109aaa0a1bcaecde89985d1e3c909a26fa0164c1200fe23b42839,2d3a0d64639815e33632c89b398c4549d95c3c4af212a0b6bdf1d7a348120475,2d60ce193bf1f7a3a3add71c684371ddfe2e5a2b6ae793f3aa1c4e1fd65ad2f3,2d78059f55e7ec65257a607051ceeef0f62c638ba9a19d0fa408c694de008076,2db4ab01f437cfdce3cba1a9fa142ec3eb7995d941b5bdb51e4c17f07d887efb,2e250c8a8a27f467d53971b928c90807c98e3cd9f86e526744c63891acd991eb,2e4c8847c24d19681e19b2acce4f7f0d7526fe46f3e89f45bff3f143eaddcd02,2e54347ad998447a8d07c69ef69243651a355ca4ef10127b8ddcb91fa9250b7a,2e5a4d0b762da747e017c6533f7583bb95b2e36c178ac289f79be27e890c9597,2e5d65149c05d0e954432820285f54d5c4376b65f16d2d82a9ef69a3817ddd60,2e850bcab836cf9d183f6cf2e0074e55194c8149cbe8e27df3c3635a34debf04,2e950da7afba5a1f35ebec0039a67dc7a52e9393799269c8081939162a3d2b06,2e9f42cb17547100487a4fa47f22c16a44c2d9a3c300abf541abfb12d28693d3,2ecf7c561d84f625d113708f877ee9c920e3f2aa7b629c71d15ec8fb34e34758,2ee3dabb1adf76cd895e75d9c634afa53215b5de30b588629d8c0f53235143a5,2efde7fb7b7a0b2d1577a8bf941549229e0c32c883478c6829748f2ff570d2a4,2efdf515f703f191a1789bcaaff58b069e6a3bd2529b2f0781daa1efc0167f60,2f878b91559676194253e2edb636d9e1b50f9580cfa851df5189cf1236c61a60,2f99fee0020b6e418825581423857463534c9780e9dfe475253d4c7e4b695005,2fca62b4bfccc9a0683a5588f3de80da9a53c47fab19db0c9c5c48eb8cb6eb90,2fcbc38da9a5f9e28420c1719cb360b4218c32bbdec953a13c2ae27fafc75cbc,2ff4f10aec69cf5cf1577accc62acb839d335d508b0a63d41a21fc7a5f4146c5,301338b9e44d1f5e95d735eb703b2db1642ebff2d7e132e38c8490b2ba298ed7,30586e28c9591543e8c9b9db7f479fadcacef503de9e4156a01683ee0b1832ed,3067ea8ad3d2f5c86d182ea0dcd21c89fffa1611ba350db24781536c438ac687,308fe155ab1615fc82c41f67b40956f4d5bb4548bb979c8cb3145c0607ccc8a5,313207fc4ae6f2349be34c80d547cb8e974708ae8701445a995a952cd4405eb9,316746f8439c1811b31e37a95d513f365630f66ef88e874c53327130d1ba69f5,3167f0de3eb2afcd243c21ec63de5f0c55ac1b87788a191025a3ea3688fa9ec4,3186820dc60a7b0b2cf7c2935c50dcfb78efcf6781a36e7554ce841413ede3b2,31aec950d5ba7f9667586a79b85b90e2dcaa7166509c11b692a1d4660c530cca,31d9ecf9b94a9f7b8d054a6ad51ce7bb7ff22da938095982df62fe8d3a93bc6b,31f4970b691f041c63abb795ccfa7fd567178e2a41972c07570faccbe2f136f9,31f8156d18d4417c0812b0a302005116824f6ebe2e548aab3efd835e23e8d57c,320f645e1e25662baaf74f8f350b78dba376b869fcdb788b109eb9385603e1be,3214b95bed5383d69058c7895b2ba0e5620095b839f642bf1387683647cfc2e5,323107873ed4077a2d64c796e604c527589348f9cb5740813b14273c23cdce28,323c8b07402c0f237becaaf40631456c9d572f14ac7befd8ab72550a4cc5d900,324b5656031e256ea8291f4a240d89dad9c2e164408b0f43866d39d4db27a2cd,3251f6cd32d46890cdec3fadddb833d19aa26f20042c52a0b94898b8f328c6a5,3266d94d300de34e8cc5f792e1ee662507a55b879439d8cccccc5b248fe14365,32845188b7329a80a083413fea2099a630adc9aa0f2f6987251f9942ba1d46e1,32885631576a833fa54078b1553c6ff5b1548a9ec70652b850c4a749b8f3dc03,32ca0bee78c1502e5f1a10ae5a4301b59d2241e8138d1048d58a5219a130884b,33166a8e84471efcd921dcc4dc2aa9f3417df71f124936acb82ac50b57a4bf24,33187e7975b65c53a0a4095c737c9be71e4cf61e5e746304ebdd40082482ac6e,332c3770c29d44b560dada66baf8aa79631b5910d62e0251933dcfc5a05a537e,339142a39acee171b39771a191942c9ab6f46798ceccbe935d0b1e5b95821f97,3399762f081e643bf40151f4d6c9bb3c42591459fced7b619d5d4fd29ee71d18,33b4cc12694e3fff53066146a787dacd0168e8907351635b2cb53976afd680c3,344518d0a1eed906774884bdad091ad44fe93065fe19d55658eaa734417fc009,34518149e6481a99419eae731aee23b94210e74fde165fd5a7420044fa2449ca,34746169c2f7f46bef7b034775833249ddd058062242dedb63e180e77eee09c1,347b6ebd120b05f6cf06ae6ec0139702368f6cb7be46d411664e9e2a023c8043,34b9fabab6ef9aeaa64b209f7d2a5ea5d50a067efed35a4fc032fae1b80124d8,34c5299374c1824205adc01b073daceb8203e0006f4593f6d12c6db59bdee040,3513ee347f4fa150e103612f78f8fd9242618dc71aece647b1573b5fe37c68ed,3548ae09bd6595d8eae276914577b68bff20e4eacbf1887aea10047ac743fc0c,3552063502045363579bc0fae3a0ab1563f4b1ed44a188abac955f6d08a2b8a4,35b9c2ffe2c8f3cf36ace35ea06c7620465a627f6a8779db56f4b2d1cd7170cd,35f41468c3bbc12147181e347bba61299513ada9d8e37a2c1c8df5026f863f82,36303fd0b726d79895ed85210b6a22c89b84074e48f6a8dfb9fd0ce7163dd7d7,363ed7654b9ae930edd8e1f177da8c829086a099701dd1b58dcde15c10650c7d,363fdab68142b85bf9df96246cb4e972bdac8fe4bf52221bb18b3c89e6b7f8a6,3660854f380f51e7635e9b9bf78685ac63fdc9c5116f421d74e74828581a5c7b,3669e261690298cb504971165993fe02fb3515f220e4e3646094cec368907a2e,36be4d2797df689bb3c97748b97b5063aa7a425b6427b0abf29bca1748f6cdf5,36e1579126646fda58aeb548f10479c09b08bcdf07e9d94244445922338f1067,372af15bf69c30b1ee73978feb9e1b8b778102ad7fa9d4d8a79c09e30baa9792,37316dbf4662f919359713f92aa7524c62e76f7ad87769121227b72287085ba7,37b650030e0db67d5451c250acce9d56baa55ff6311da6a9e5fc17eae9b6ffc1,37cfb72d5869f01e8dc006e77b73ed7dfecdf0e256abbcee2ca87e7cbd677d60,37f3d2f90936f118df9a10f38ff53d3d49ae7580e16a179c1d99841bdb7ef6ca,384af9273276ab02fa0ce5680be7947feadfd7c3accbc5c2dec92e644e00b2a1,385309578c5fb2c47f302a246c771a029f2354e51035aba255d515d898db1a6f,386b64845bcd84f8491d433b6bf2438a38ac3cf70e62d60804655cc765ae01b5,38920b558c6e379ac201f854393ba8e4aafe59f64f965aba0a815c8204cf1acc,38939b5303d6bc30eb499ea333c3a7cbcea9a22df9f27d09c03fa9685cbb8d87,390035df1bd60f98c4250926b1aa677879f15b1f6d1ea8f3d3b8fd707a0ea773,39151c5374b2fcbdcc9ed2817af24dcaccc58bfbadf6b48ade0dac314b8ada36,391b31003e56273992f707b75ea49aba879279360c9489937f1063552a02bdac,3929c1f880cd1567c37fb755642be12005cc474b539622b8648d87e40d1da4ac,392fa1db5a9910fd0c681b23acd6b97dc84190470ec059439b2a0ab17ada6c4d,399556be214f6af363b34f6d22d5b6ef3d8ecdab778e6ec9dd29ca8de26cf14e,399cf65271a59c89801cc2f9e4113c677f4b098e58d2b012b586dec0ff12938d,39bb5d54c3517a0b6e450a2ddcc960b287e8f457ba08132d731e58be54ace88e,39f380d95343bdd015d042275b55ddd78627ac992fcb990831faf13dfcca6db7,3a26b577552b2545c6d705cf47e04a64977727c2ee595f03a6559fb1bd45a04b,3a2a163061597f542ebc8e3fe5e6464ad8bef7dea13dd7dd045840e4d215d801,3a3525324ecb6b2d502bb44e5b51de4e152a2f0ecd5bc977f80651807ebb8b09,3a3e3d1803d901208a3c8c74c4e7dbf95e1ac305c30a0ffcb2e6faf5a3960fd4,3a74abb9404f21a0ff15a5b9c337746d13a0b0efa1a108de65a21ffdd54cd12d,3a78469ba213dbbd7cac6d22a7f709eda1feb42ff45b4d62fe92088c5768d14b,3a7918db114d82a77328c1c42af56c1266c4f97b992176894aed5aedb2dd874b,3a82bd86bd017220be66200aff89d482b39a1f0470aa24c109835c53ca9a0f5a,3a977bf33b44fdb66bf40fdd5b81c80dabc0c452885688c6b4aded29de5279f4,3b0f928504d1d505d2172a8891301b8a12b333989085be515bc25bf078ad0d02,3b151f60de0039affb51913cb0fbf2085916b65efb6fefa6bbe492c06cd5d486,3b5367a0e98d356aa3ae16a146e13c6e00ab4831cad7e98fd40bdacfb3220516,3b744a3f7a014495f12057dc455d579455e8b17eba3393f158fe269ea0ce5812,3ba0c7d2823af1433179beab3fd7247438e3f6d2ea9a8cf8be70b688d5de93fb,3beb47a13c08cd001ef140e154c4cc84084292127bee1e29a4ffac5c75c11d3d,3bedf9fd734692219b210a91b491081dfad05228bdac9ec4162efbbc3e9b7dd8,3bf853c95a3923aca61785c42e319245dabbec9992e72bc6149c459cfec9220d,3c007e09ed3d104fa440b73263ab3e74ad1c3cba2e443288acddb3cd1be19c10,3c0d62f023554b3a753fc696aba1b99aa2978c4a3a1198a0ec433db9b1c0239a,3c193c07c1d71adb1b6e6a3bffbf87ca58b263bcc728e29952e053d3976ace76,3c410e30ea877b7c7d05c9443d5c1f8cdfde3a4123a73c6935802897ea2b1962,3c7be0facf54c5a19ba733430f4eadfe9369a22b6a99694450da5683b516a00e,3cd9cd1c9b1e9cab3492f7cb5a8692e6ec75be936b974e49edbd84b8720447cd,3cf6eae052e991f577325da8539f66c6038874a14b7d80f3b082d1e5b8624b73,3cfecd22e723934a76bab7a829f572deff7a1c8efa70076f726f9552d85e4ecb,3d2256554d1d85b5cbc1f9e76a92b8282dbb80fbf0ba451942fcc92c2ae89ed5,3d89a4619b95dcf5357806accfc6381daeaacd9351de0b21ea0a67919a45ace1,3dbfd52826426b6485b4d8e183027dce97c5b128c5e7f83a414ca373d352d5d9,3dc7f7a6b1b3b63964e9ed9f85b74811abaf20c778668312fed129f0aa1e6fb4,3df93821745c2230f5b49bbcaeddea99fefdd38ca43b8ce38d511dbe7da79107,3e27d9ce01c20bc0edd150029820f726a8b04bc29595a9e8d96eef6ef3cce89e,3e40783890c367f96e02f70bae685f33b7c195564677d5ea61cd359110f9028c,3e45651911dce3c4c2d06b6b8271db3b7c6ac19973da3b37056e40df1db4c0c0,3e5138f4992abde4bcfa56e7f26816edd4a0c21f812735bb0fdc270661f488e8,3e5ce9ccf4e2964d84bdae40380ccb3b70c6c0eae5b13ea615e3c069c752f82d,3eab58ba8bf0748f4d22016d7175d57139fef884d92a4161e62d291988104218,3eef5702e6ba017c34f6700eaaac4160eb46890f5265f8a4080484cfdf8129f1,3f19a2048f56deb77ce86968d5463e56e374739d510bc9966ff6620b8a7c8c6e,3f2fa7b3539a99275e6bda7a894b0cead5a8de2930528ab0c3f2de12b8f73deb,3f821acac37b010c8a719b16b7d0a982dd01be26f5de55674f04e3760baecd04,3f86f371f512a0ae81f7491a44557d5766bd3628392a2a4454762439502e3a15,3f95e959b996495d943163e5ce9eee4ff32278993ea3a67e07dcacdaeca09604,3fabdbb2663ca460f278701d0be1486aeb6bc0fed89865c617693f6039d247f1,4058bb27a23b3395aecb4cfe8bdeadb5fed68282f772a2559e2d671278f56640,4087f4209730fa9917f5c20946d1e28c4061e93eada3cac535442d6f7b636b15,409c1f73febba133c1a1ed2d381a52988d067fbddbd1dd437cbb19ce346b2efc,40a7652cd94a8cda0106113cb1972805caf76706af151dc7e4936db12301be4f,40bdec0615c5c9bb518be98dc69f059dd628628835e42e773c54cd9c7335b1c9,40c9c9432297d5981fb8e5429471bd6d517b42719f258a2a4ad5ec9e3390080a,40f28ee6bafe85080de258f457f05b8fa4310ef2949fba3ed3e2a75867321b0b,40fd7c49f7ee23e8f670218433b05304d2a374c095e0806e92b141bba2786208,4100d30df5777a51970bca71e9bb60686996dc3c4a5ca599742334dd0bacedb0,41119f772bd25eb0d63c01199e493ca57e426b21c63ef11ee8861774809db745,4119812c289571959f94410db90c9eda64b4b72082dbfefa3f6eff44826a7937,41268a9c8b53bb664b439dd9a647ce46bc2dba41be4d379e6ad2171fa80d9cf2,413d9d06b23e824033941abb1e14ef9bb1cc350b3c663e71af8a7aae56f6e84c,41a8bcd8d331e07dc0f3752d3a09f80389963908b4de07871bd688ed4ab95579,41f3836c06d8e53f3088127b3b3b49adee323b7db921551c4880558c0bcd86c2,426467da270f01c387b6a618e011403a22988d363f463c00193f1bed4a01b9f9,42956d6288dee32c5ead78c7b56b5e059fb41387ce0235d42621f8e049776988,42d071f3a1d17128a896fc51bf57a63445df82dffcba61b602f48c2410c533a5,42d4ae6ca5b73284732835f4dc84c7effe333523f7a9c8d547c62dfd0422f597,42d65142e85dbd344d52ed90ef9973d6e610844a6c42554e929f2be41b607b1e,433b36b10de531acead9ed0f79218b794321a1a713a7dbdd5b4ca338448ec806,438c4b376af6dde98f043a4b165deaa0d0396b5ba2efc1cafa4a24431821bce5,43ae2de539acde8a379ef6821af8f4b0fa4aaa3a5e0583edc27a0b14b12284e4,43c8de6e69ea48fa3365d7c3bc06a69e7bce35d4a9875f990bfa28a9f9856625,43fc867debaad050e36fe0efaad5c65b2375665d409ab608ccfacb7d55a2bac6,442731b18786042aefc3b081db395a4853c4adaf5c51febc965766f28bd77912,444814d99f834d4bb5fc521027adad0f13fb3c6b980e54f332b960f1792bc15a,44b8551b9cdec361a344d28db2fde652a42718491d16645c667383a4984a5612,457f0048ee9f0c1c10dc5921eb473761241258e147079b527cac1d5c41d98c8e,458463635300dd235dbdf13acad201f81ec93f38ec9562be7adf1c9c1c97a19f,4645f1347ff04c990a312784bb347c704f2b88e229b59ddf6fbe59b0304b36a0,4696b4d1cd65034f3a4df28a8d02d248db708e8642d330cdf47ef31d3bb4bebb,469aabc073f2389e108fa43cc3ae742d19e49104ed21afe2e9a48db1096a5455,46f530ee427ddd7a1db542a1ccebfe6051bba5c645a796ffe3f1649ac8210d96,47155b0339b105016b228a328c548f1d7523cdaad836f128cf2950c6e8a64c1e,471647601d143491e6dc8ffea2ddd134a69128106f35ffab09db259f7c970ae4,473e6ba67ced10eb103021c5df2e8385d11746de9ac5ac82906a8eea81dd8476,476f340dc037d212b55030cf3d13152a6233198ff1c1fa7888cffd54b5a08704,4781e5e2c2695ae7024eaa07925e4bb5921be187b697210ca02c6de42ecf65f2,47c7a352d9ba188cfc3d74816e733789e611f9278be0e098b37ef39645465ad0,47d810e77159ac6d91d31300ee0e0714c2a1a86370dd49e31abe5331ffd2db05,47fc452303975158053944e8d436bd27719ec12adda26e28ca105db1cf1b2a99,482439f1eb2242a5b0a5be259baf9f02a90d1dd50c86fa18af2a89ebcf0b41dc,48517087729fc3bc6503db4774507f3ea5fbadb307e75b9af1597837953f62c9,485a1ef18e91610c828f9e491e490b13eda07b7f57ade0d4d20efa10c202e146,486538fc2f5836f2843b9885293a6fab4f7041ac0268afc46715dd452608e1ad,4866ad9940fb92401bd5f2f0c9903aaa95a1aa9029510df87e597377c2480d27,48aa6ae5c437a89e7572434ef25691e0d4ae346d46ea6e0b416c480d284235ac,48bf9128ef1bcf3d17ebb92bc30ed82f7bbc443b3ca0390cd311a6cf21eef502,490f97935d3a197d67ae53ae632f41df5be7c0fbcfa17bc5f7b7ab8b7352df11,4933c676f756a745ab28ba20843e4fd1333f68dc3024e7d8ecbe270063e198e7,4942b26d5c6229a3a7d1a2520cc63e0ac3dcc4bd5abc5dd211862a4396f28e0d,496e4d0ab869113f95f48a9a00b99d891e3325b4a75fd89d83045558d6172ad5,49758e8c1ccd5489bd43f4623c4d83ef348d3bb74c57a7838707b28676ef29fc,49879d103c0a33a4f23de45fc194c90b87bb0e59ee38a8bf987487d4f609496e,49a1417ace9510cf91b77b80db81fa64863a344972ebd36e01a90f3e3ab6dbef,49a43e15b3d967bb5419410dc558e05ee009af35116a57a330140961a438bc40,49b71a76f1c87f8a164b90ca0e1ecc947e8bdc34c109e59c000261f8fe0f897a,49cf6b5cbcca8f178fcfb343a4a8931e5e56dc19dc5f66573a2de5b9953ca47b,49d5758b00751354d73248f42fd89b501f40be03944150e06bc7af39ef790335,4a58ac0b384a2df42a336bede32b729c8c73e2f589b4219d7260edb6e6b53161,4afd65af905141bd9bac6a1a8ad09a3215c0cf52b5a2eb5d28f034caed972e6b,4afff03ad5c8a964d40b82b55731420d072722d28c31c0c303cbb79f1ea02a0d,4b5b7f4863116e49c6cdbdcaa83cd3bbe815b315eba4b7baa32b25da8d5c5f46,4bcfe14fb92a1b9063c2678a8fd97a083a94246769bc4ad8e05dbbb7b7a127f3,4bf3a350a18a68cbf5e680bda5887f10eb03953f9307f6e280fad28d14733fe5,4c131cad056e3cc433472cf9f575da150c22614247bc9f253d2370a5e503c0df,4c18f0020d20208a7c788a5d79a72e16e53e3e39de04b6dd0d487e5633bd15bd,4c8fdd5483efa6b782f54bb6ac7b68e8dac4a456d40a0f27ff2cc801dc049407,4c92e38d73099e715f24dd8fc068317200eba8540e17b8eb586bba4148bf3a4d,4ca0aa525d85debcee558c7353ccb3408e4a6201058e7bd0920fd27e609e6281,4ce646aa4f577d931c9f22407188631148af81b30b9b2d8c5bd9eea841710a7b,4d3d63fba02656d3d39cc35726519258e7a95c264a4b832897eb4b750957dab4,4daef075684b7948b255953a58847b0d54af9147c142910af60e2ff02cf01ecc,4db395bb2c991973faaf622be558c4a1ea0ed1716391831bc8824e09034990a3,4df6e76441a48957238b62687345f6cb2b0475af1f1e1ad6647945cfd69f3a18,4e1317d682487dd1db905663b7333a2a5cb148103f23bd60572674835fc6a059,4e3cc26fa28c027194b56d90f38ca46bda12c29e37f4aea6ed6f9428a46ca887,4e4148df524c63b9386e468cc9bfa3f910594c8f037182798f32e3a304dd62d3,4f08d77dfe963491d4723a2d61dd5d2a3d69910e1a0e336d1da6d7d90db60020,4f19f90aadb5ea23c48bb1879a8b9173cfcab0c8bc4b49dcea2a4d4434beeb96,4f2a903ff31736c82d3c63da463cd7a47fc08ab4fa12edf5d174c79d269ddc63,4fa3cb0ccd67697f9136783a2d16dc521c7bc886c4c29a70635460aa292e4c27,4ff58690bdcb43387682c7c4f5fb6f254a78f4a71f000e0840258e8c98181a17,501d948b2ffca8e84886c606016b4e149c4e59b6e8368d66151cca37414e0917,501fb06e1acb3541308a620fcd3a59929613b87ac7b387d922339075162ff7b8,503afec6f38a6915c89fe4913f9cdbe7989b9e44afda5c9a406cddfac865c1e1,506a44159b367c8d6566cc782241226122009cb4f350f4dd675c1a4fece4955f,50730e1bc8ca563ef976570df2384a0f7157ef39e5674bbb45157767969fe85e,50d9700d039bd3a226727db5db4e30bee7588d2b820a40eaa3950c03ad2ca6c0,50e383bb82db01564d90fc91c8217d67a1e69f9976fbdcee11130cff9e1d3435,510f0b4e77e004dcb9ffb2c0d131ad78a9a0c315d3e128b6967f2bb8305f02c8,511b53f575f16ef918d05fc1d0612e68690f18f18244f78a3cb6c95f1fa608e8,511ece339d4df24adf2e2ea515768b92f172f22c5111a3cdd8a02eba2ed840df,512d6f94cff41fc6f13294b117dc59c6e5da17297492eb7948c9ae748c6fa352,5161ea47d773685536bdb056bd8b1ff28356b2d0e535b0cb5f2973a6f0e775c8,5165b493a4f2bb26ec25a74ed3650bd56b787628260e888a09a579434ce6f375,51aa7f874ab8fda0e0d045d6bb8520e05cc55d352b75b783248aae0abd8b94b8,51c300306a375bd3c0f13afe2624848631f2ebd07ec5b7ae1d93826d20b2727e,51f3a272360cf94eb854de3769492ac72d5d84b6f126700c6f0b156317bcfc89,51ff92acb4f004e1f79e652500e0212367695b478f0f45a0eca3f77037a59e61,52362f2edaafa0e4aad6044054b32340878ef1ec3dd385641a24a29234e8f1ab,525b4f351df82c6b7da34e1c7f754ee5a16802f437fe537b40f9ff5bfb1ccf34,52a1305fd40328f986be168f959ee53be15bb3e8a9de38b2b1420a7531d009d9,52a70ee688a3ac274d0e8d2528639568d19dbef78ed5c8ea764a76b5a598ff94,52c1faf1786010bc808a8f000989a417fcf5ae4cfbc731d66fab9895e835cdd8,52e7c695c73d65221a71b7f45cd51561ffd69ea12a33d7a6cde05bafc887276e,530c6dd26cd19a79ddcdad92369ec20ab1465f9e3c4daf8b3489930faec96ebd,532d748f92de7f7f5662e374480d06b95a1b118a17719dc95637ac6fac0b9526,533a60a45dad3164c09ea2049b3f1299a51f98d8dbbfa48346d5e0a701218bd2,53430714095fad075c0ced0d10b34cf86c236f82116669c302fc9232cb79cb36,53589f942a9e8738f40f0a97caf7470f7b3603c09d74270e10ed9a2bdfea94d8,5362eedea3ab8b6b5918abdaa439d3d9a6df1a5febd67e92775c7e0085d420de,5378a69d4336731f44d490157361f51795ca01f220912efa99b33165665c7afd,537996b292c91c1a1d020dab0acff38152af0d9f73eab133ee7017f6361e14a1,538d85899bb121067e7a0c83062041791d29a1282c10ce93dd3a3b1f21315c20,545d42847657d021c1ce75225ba88abb4bbafe19c515370fda419fb12543c85c,5464ba1e61e3bdfb8312dd3b8368c2fe2dadcc1c6922b83d3a34da346b85721a,5471823e9d2fe2c449b7094fba6c332d8645a351fcf391afc8fbff8245b6c6bf,54782621f517fd7fbb778df45e27de3bba818a18f2f1eae08c08654daa91da19,549592ebda1ae8928433ba9a352546cf90bff91005c5b9cdc18d396ab86025fd,54991cf9aeefe6dd83148b02c493cea69b81e255200c93fa2faad5e973d1536b,54a541b3f2465d3ee6ca73139dbe71d79b58c1103716780d800032ea4752e55a,54fa430f4094cc18d32f4a0328f950b87b9660ee830871e38626c27562134426,5555de5e554a84b37cf181c06819c86f4edebd8653be26a7f543d3d672395372,558538734676bf70c836391b06b55d4a935f86695bf81191d2fb48bbe2b1f266,55d291e4415c2e2b74f81ce40ff4d0675882825044e8452a783bdfecf98156ed,55de37e5c9ea84800c98c692bb71f943cd12d42dc91bc8a2063f30a7a1865933,55fd4d5f12e2fcf1c0cc9a6b6f740d75edeb6727d57c574154e5378e23e4326d,565ba7fc741f753fac04ef4cda8bc23c24eee97ab4a69fabf483e23c4e4cd528,56792dc7f0207e458a2b910087c92550a08adb52627d172c08c9ec4792bc868c,56837cbca4f481fb5e21980275e8bdd87ba5a28284d102bc14c3f020541080ca,56a0a52a907e9015ab4ab63a3c4ad1bee800064bccc83d6483f5d7442a534c98,56c7dea6c7ac5091b4214b23b0cd8ebaec80bd36400aff799ee1b6ae86c5513c,57258787eb76f149a5249b840731b986a8cdc3d503f1f1a961818fe726ff591d,572b694dec14aa71a4031c86f500775c8343c153f8a1b9b7fc56c5e8ecfbe8ad,575627da58377dc2dcf2acc635359353680f4c699050c6330afcd244c94f411a,5791ab30c5ee1b36b6184597544974425c077f9721fe53c857da9db3d1ea4167,57a168d1d67d1bcca89c30c2a0ae9d00762030eb7ff8f9b22606a7ec02071fe6,57a90dfa334876ae8e9d767d7d64cdfd2fac91245711bbe48652dbc16201f819,57e22c5f6ef69bdee1861384576cfcbe5c51b78aa15b06d957b1776cd4bc2186,57e36cb7553f5beb2c15b43f0c0e9dfa87d036934cf862437efeed8b3bd9cc37,5834a336a55c7d95b7568921446d5373f451ad70b4a682b23d186019192b1913,58900f3f16ffc17c6da8201c05f0dd1019fd16ad09cd337826da410e72fe1e4b,58907989cd94a0600ee23a2b2714fde1567ee04be8ad74c37b8fb555698e6a21,589d070821a67cea3102b6fbd9a8295ed94152f274e86d140f2a179787af01bf,58ac8f25ca8718966dedaefdfd887bd6f78b5f94d9c91d81a323e23193612d51,59345dca14fa81de6be12f0481c46727da5e354baac835cc4c0fd045878f6865,59658a61a5afa081a51fc9cd2740b681f9e4ba777cc86ac06e11aa799285f5be,59d3ecd809e46303cdf2ac00bfd057c5b5c39a0eaa977f759af1d86088207389,5a08b9b3a1e05e0924f102c64bdbf99377eba0923f500b0564fb91f041a1ac88,5a1e24b88a90ac923310deccfb1e04963afce0865bfd4945390bd440762b4ffa,5a4cf5cc41ff43f5a7537b3e773f9d90063e68059bb9c9bbb53945997998eef8,5a4d20180b9e83a7a241650eb34c1c6cce9f514b1101ee01fa33c642a546bcd5,5a4f5f023b28386b4b41d8ebc1d16ef082493a4354f81c08a20cdc5b27bf0953,5a5a2de41e150523c3ba25ad713844423c6cc4dfa9ba6993b330ab9f19fa6af5,5a61dde2759957ca116e680608ecbb0f52b792b1cd88ea3fdb9834fc24f3be96,5a8bd640034a4aecc10f5d52238919a13bb26d184420864da5172db948dd3e2c,5a94bc92db40294c1c72d8274e45a68ee626420254101e5c99e2b47c0324e956,5a984a83da04ec97b7c99804e52d81197cb102913380bc342c3e47480b7e54ee,5ab5b2b5895a7bfba5716cbb13fd5c48bb4598fa13f3acfb4bbc044499c19ef2,5ac70a29b6f7ad544ca8d951b050e7895d16338f173404c80957104cd4e7c37c,5b3d13ef10c6db17dc8baf6c1ad383f51cd7259c62cdf484f8796f8a74d7f1c3,5b87c78e4f74eb9feac008c0800bafccb7edced4da63c23f49c6bdb396465686,5ba52f33f698a4733c73ade19f4bee611499a889b39701eb688e220239b16eb8,5bb813953d0fe6044ac6b45a079a3e7a4a99030314f18a8e24fbb7d0eb278138,5bfc88fcdad8756ec62ae7a0c1b60f7c78d4c3f45c47554bae4158b4b6e6f24e,5c68a9794f0c2e31ce24e1a49bf6a6c31409e4a0ad85fe14e50854db4980d99a,5cb385209ce3ad0c122b665888b2e2c0d2c4cd056d073de46ac47d1a05bfd8a0,5ce82fdaeed7877c580fc94a7071b4b96826744e80e9b5701b497faedd4c390c,5d3c71b303ddf3774b4b2727caa3bef02187bdea2cef41ad77014e59c1c282c7,5d4699fe0892c88959084e1e5366ec4bb3158da05f0c6d56834a38638c75f242,5dc123bbf9730986001edce9321346e9d10ed38bc926d7c0984f9abfb1cbee91,5dfc674ca851b63938a6b9dadf0a47e0c8deced4c567f07a70f8c1dbdf63c559,5e744c020f8c5457190e30766bd3dd5016d6deb9f26feb1c1cede6633330f97e,5e8f738659ca8a408bbf2dc20a331ad71779a831605f7d1a3d6e6b0a45634ae7,5ecda4bcf25a88f40d5619da6cd5f9dff5e33ed4c2499b22d33a7169cd6f0647,5ed4fa7a3b8b8b7597080ac7cbd6fde20e977b3428fbaf4d8156a3a43494956f,5eda0cc093f1e9bb9e1a64b6acb36d0bfdabd6d8aa4323b324745e8faae04f32,5efd435b13ecc74444faf0b6ecb9054dd5803f55a4d98df1163ef287c8501f36,5f2872aeebf13e9507a9e724e74a3dd592e6f8ee0d61303b5fa48b56995bba88,5f3ded8219addae81d1b0b7b07711894cbebc347e475c87ba840b493671fe33f,5f4cf61165b0ca05e02ac162ed0d4e66e6f7f91fd5c92ed5ac424dbedc257fff,5f4d8f1264ff17ab01bc95ba9a8c861a53f3107d0fc19c88a20eb48cbe59e50a,5f533221c38ba30e12f1583d7e016dd154bd904f1371ed6f341088ad8a7219f6,5f5366bdc31e78b384a0f3b72d0691ff5ffceb4748736860bd2d5d751c924c4b,5f70a310304fe550e6ef7484df8e45f5f75a5aead51325b726a5b0d281304339,5f71241289e9d3412f30b9306112df8787ba448ec7176c451d9db2608bccc8c8,5f77d087b0918d81f616817e4ddf06f117b786b4c06d6aa2473cf9aad2c56523,5fb4a7310eac3ae50397e312dfe7d875d0ffdaad0a1aa36b98260a70522e9c8f,5fcacedc93fca512623a0e4bbca5f90c4a871228c233b3bfe0d8183cf9ee1f10,5fd8841f10e3bb56082ce3957e796f85f76a5908c8050752d342333ff0f0a826,5fda7325756bcbeca8e8091430573fcc25ec02b8a0f3c2cf26a555ce69d1c490,6007cdd778818e529c807711c01b3b779f83e56b1b3bda7c7a4149b122f37f74,608b1b994e9310f68ed376625bb84161b034b1aa29bba308bd6e56f42a93a1ca,61191bf502118c1085cfd494cca73fff257fd5da42c9079a1a204ec24f27fb5e,6121dc58103850e0f068b2c239d363d365b1e55c860c25b94b508e943e774186,61409b1d6e54215eda127fb5a8957a41f2e6dd72b550fa2b9f9d6a08685b934b,616438650f2311951cad48992bc9535fa2de8f6415a45451fa539c8b0bf2c6b3,618223b4033d142fba0ff06bc5af98552520996976873fe40ad6661bb1c0f766,61be7e5b33096f0d2968b220523211ad59582355d3d6a21e2670ab59b3c0608b,620c3a15e874c012e211d918c779484b2d4a093dad0965a98af5e5a004770012,6232736c55cc96a3b24b713b989ff5ba7fe3dd38fc451a0ae44f3adfafc00ee0,626c59f45dda712110fa56f4316acc77a46387590c017914322f7fb9865a7ec7,62a095c063ddaa3544fe205eca067ba413714a300764fed7052da89f87282193,62a460704d0b08367730f308751320544ad2ea0fb5047063c54c7391b7b89a8e,62a9fef14c734ab755d8ae016f2464eafe15c7c45f6185a4dabedfa677465477,62c66a7a5dd70c3146618063c344e531e6d4b59e379808443ce962b3abd63c5a,62db784c47abe8a9ebf8ed4054b5327e30fa645ca19e56f8e421025eb0be91c8,6355ff0803fbbb2423fb506859b78b125ea27b861a659cead29b80a2bd570eb1,637d9f062ef3f282e88107e3169b7c0c66430cfb080122016baab78129379755,63ac2c78f77ad77b5bcfe1f538ee0affa92f627f47800084017613e9c3967e12,63d523344d9d8bf3199780778b671c1970afaeeb09630c3d00ccddc4451c1c2c,63f2302299821633977607b694602360e840b6ee6997554ad8c0966f8f4a54a0,6462508bb5d6b852854dc10fc4894da447feb72c2c16af4f1f6a13d92b5c427f,6486eaffb98ff1e8421b6d795cefc29e6fc98efe5b2e1150338b5d96293b023a,6489e2758946b69b0931fe671e7b4f93f0894f2877d37ba25e6f6a3000a4e2e7,64a548aa81a0fef6077f63e8e23b21210dfc2d50bc23be336a31b740442807aa,64e80835c6cb3ebb526b19a5144ab7f1131aee8c9ce123fd8ed5ce590b6024d2,650289f6b916e8388ec76000fcf6680a00f27cf4d744ceb9dc596c55b8c3468a,650b19973efe9466c516be9b9734f2f2bf383841b46a28cfbb0dbae562f94d7e,650cff4e9bc0ab8152216ae38a7c0e1050c1f3b6053b389b5963a0008dd33967,653e9632d27ce8667cf2c23ecc837150bfd6f2a69926f12654df8fedcbe21b87,654fba4f8e4508dc84edb4d5d485dc5621a9bb4b84fc1b36a91340b3cb5dd2b5,657e8bac065a8e350d3caf2784faaca694e10ef076ac66b103675d9aa56a2d5d,657fea9f20356020f23d77c1525232d35ffdc8a79688a51e2b0fc6a15fc3156c,658ec348a86c0905623910c79b55b8e91243588894eddb01dbd1a29ce510fb65,65ab795e411d3c247549b6697557b12ba87f73ca52505f649c071e9fdcc77260,65af40abfc3107aaac5c2556638d87877e9563c7598a331778a65cee0cd24da5,65b133a4235d48673741a9461eda31b0d212fddd58493dc6145bc5dbfc40bb81,65be74f9aa1affff1c57f7acd822b1b648b9ffb9a006af8d8ebbbbb57e35ea36,65c6b0c585e14726a80c8288a6e0d20a18022e5994e46743502e39e6837b44d8,65f864971fb2fab166f1605176cef5cca4a20338ae8df71b0685615a2ce542f9,667f5d2734881cc1f5da7f0060ca0bdfee345446dd368e3795694f3927521332,668d0672abea970f2dced59fc57c880dfcd5fb54b903ba93ff74a69a28a60780,66a95be70ec2f9ae0f7bc46869a45df30e373396c2f80d54ca9dd21619164451,66d8f85c5b24109c959d43755b7c76839fa4f1eeadd461b318273243fc25cd7a,66e26c018c94baff93f0cf10e767e501cc75c89948d7d50fb1c25fc179a39b55,67131c81b8844ba8bb96a906cb238ecea2a7a229b5dbf436756322cf25823c16,67c623e32b44d3f673d47b00933fa94cede2633a4f431597ffe55af285ad6e85,67c8452534c7d36eb87864d1672864ae92df8693dac35fee28f4b8966a0defea,67d9fdf2c838dfb4f243f2158155fa40e2dd5599a77664c7146e01468dc0a8ac,6815359583bd41ab11d3a2babc540ee4cadffdf9d108c2318f5786fcef55201a,682c08a2e562a95e7e0a359a585623c817b5657828f3af87924e6fa100062ad5,68d481aff58d898307e0ef398399e3120679328dcca039fe9103c1c30f67de8d,68dea0c3b8614ae08eaaeca621f237e449ff5b2e23b0da13fdc618b0fc29d9bc,6933bf2f3f387763eaa8818855059cd11810d87bbf6839787a6d9cc428963cf9,695fc5e042c2d6a62a0b2a2392da5a0041eab5f302e61fb12ac92ca75261986f,697c5c778cc0d7a682da9c985e47419f7c7e2e1e225bb549a436ec13bd49a6ba,69ddb07072326893577c1d73f7a6ab8382f7e5cd352aa407a0e2d7eea13aea6a,69e79a4b135f16635765e29583713a5315e18699a60331da96b44be9b8736fcf,69ecc7513c91292656215a4e6f67b18b4feb6086f37998e7d5906e55d007fe22,6a0d6df329fcfc943fead40fdc14957283d1d2d7d7489d4c14ae9e8a9a16e153,6a152f698d88fa7531ccd2cf3ea5f850f2f8dfff320ef814390fb78869fc5538,6a88690bc0d0acce82be19214e21081aad24145a2fb576c601aafcd76740adea,6aa66fce426014df31d1df9fd4360a1901ce9921c92222d5a9836e0aebdc86a0,6ac5bb6cb00279cc2b3a5d7208889edaaa3af8036b31f4f4a98cc3c3908e2329,6adb31bcf52b2f4ee7f7b6a02e5fffffa28430dfcec5ca86922441c7ca643446,6ae00510a6b8c8817135ddb26560716d503183768fe76b67b448158c66d7c8f2,6b35dd6c59b9430dab4e3feabbde50a473a8efe793994d24f18177dc67da8c58,6b5fee6bda939268c9eb11210a62590c74959bf1612acc5801327f2b3bbe3709,6b9873757b9d33f70bde2636be3e415edfbbcf4b2ab317743240c0bbfba4fe6c,6bc0ce7a2faef462360179b74f60d5f6854c30cc620e3fd5bed99294a02e2502,6bda2236399fc6366c2aa2450cdb5812c84b0847e3d88fe64851a379dcb9eb32,6bf09cbfed5a289f93f9f6092104820002d8490c7dd6db9f2025f8b78e766beb,6c10f0de508834c72b605b6049564d5e3eefceb80d0dd8f904bc5264cdd3e4dc,6c75ad41a5fbafa64625455b28e8226a52cc39a40e91eb108af05ced31ea6ba3,6c89e25a8fa4722ded46608a685f3c5d427f6e1ec3280276bba8ee45cb105bd2,6c9557e08860f67d60dc30107d2ae62eed01183265f4db146863e70abef43733,6cdee8efd8072c2442ea6542c2ac8e13305921524084c2db5c1cb7c89bc24753,6d3a5f689a26c7a4fb289248d84726747aa2716985cdaa78b1900b4f3471ccb6,6d4be8a93bef9a9ee545b87e7b4d7daa2cfb36070187fe0ba423d394f0759048,6d9123fd90feb9f07794824e7c55e48b04668f16f2abf6dafafe0c345ac7a309,6d9eef92edd2078e9c319db26e9377aba45517776da7df5af1886dc9ec956f3c,6df62e0edbec8e47090bd30faedf63f810890d7e028ef97f73db05f46e758fca,6e0a600d5d4e81157d41fb25329977eb342e5dd0920bf111523cb11762af0d81,6e0b14ef3e43f88d65a6a5a62021827f3a2648aca25fcf042c0dd3eb7b7cde78,6ebd3d8dcc743b64ef6811e6f3adb69d8060adf711e369387eedaa5b9c95f88e,6edd9f74d9fd39a14704b137fa12bde372f50d5eae87bec533c63e9593ab54e1,6f01bed1a15233b22b5ec95fa8e2b56fd576b9b6356265a877141b61b9fa959b,6f4445667fa2c6a72f75f69c38e4c79d81c8ecead13f3b51cbab8f4ce184bd10,6f7c3fabcf73b81860a196f307aee18d987a78d5b47a8eebd7cd920195c64786,6f95b4d4dd98b4b23e96b8eb8df6d8090afcd05883bf72354ec8fa8456f717c1,6f9edd45cf5676f97d3f971e41099ca77ee85eac0111448e1ec5ec17c4237375,6fbde78b363fae7619c0ba6a881f4725ac4f1cc8a0d33694cf15faae4354660c,6fe72f4fe25a1d3dcf31fb4c797e2b4cd3cab721038489b9d742e4164e15a6ef,6fec3cf3475534617d56f0092d1abecf2f9858b1cc9a48b64457c1341178783f,703be274e0cd1aac434a2ae6455b62432c163de8515a7d5cccc0727d24b052ff,7050fbcc1deef561edd786b7eb3175698705ecf245c04a23efab2cadd14bca0c,70802e98a9b35f8d2cde6a50699671e34d80e5736aa0e5efdce23a12713fe97f,7094d9d1987c746d6a564e2532e71ce773b4a2fe50ed2b81cecd4ba4ad781af5,70e8d7b3691290fc01bab9af265ff19e98f0f184d65d3f3f51f96ba99bb61a79,7120ffccd9593273e5d4f7c9ce5942e31fd74b1059819337e76d696d62375f51,71848a2f2afe12302d2b3c0a27cdb0739e08cbbae92d35ef526cf41dbb0fbff2,71a2d6331fafe44d8d2feede5ad29a9b9c12d483f0a82e401e0f85e9adfa5940,71d25fd863447701738534eca1cc3724ef66da2209c364676468899e0dec77f3,723114804243a56c7032e9fa23d850473ee22147151a4728c707718a3631c90b,7236ecc3a85a4501eb813db1839b4712d4256594b1528ffd3c06e8ee956a2bda,7259b9d2601b2324a64fa46ed647faac85355747bc1cdaa051b1e4c843c1e049,7272c75ba6dbe77c9a8ce10f472f4e684631a3d7c42f1a028ae47db52ca931d5,727a4cd8ee224a0ef68e2244dfa1d54e97420373c550a9bba96db88f1d507610,72c4149399b649bd6ff8ae54c33c2b1f4c99b9f01c1b222ac1ba7437d030a18f,7314987260a9c0ea7c9f585b51c048d56fb67f4f07410bbb7ae1d42ae713e48e,7318883e81bb7edcbe7ecf4d5f7ec385f85ec313aa0a41e7435667041ec1177b,733020cd4d376e2fc371455fd850a8a76237fa63f095fae0693fd0f8fb14bfe0,736ce956b0820a33c1fc0ff06cd5b9c5fab337c406c127c1972b66cfe26e679c,73bdee1f3239b70d5620f567dc2f45ce88ac73e6a264b175c7ba27b8ec215c05,73d79cd748e83bef8bcea0fb1b3a779a9230c1783137cce1d9c483e4d38e02ae,7445d8a5a3314ee672d7fbe0ad84c042487e6ff482424ba19f32064d5c2d1796,74764825be24f7e7fe716e32b571939c80ae061d74dd4db1db0a637c57791578,747b51302d44bbbc1e7a215cf69b04333b97abf1e9362762ae03fbc92e7befc6,74ba336b16b1bdc5bd9885ef1f45bdf6497cf449831c2606f9189aa9abe83774,75333235d4bc0151fecd358ffa1031718ac8e592da2f84dab6515e9cddf977a2,754b0936628d107c8c21bc76c0ebf3c3bcc0b61c52016ceee04663d4ccf053ab,754c6d877dbbdb5f3f499146f61a23c2d6000206d8fdeaee3b710890d35da925,7565f2008f8f733f3e881216a22434c22196de746d18db4f5ecf3d2ec353139d,75cc9dc48764cc4ca90105e93deddd3ad183a6587b26f47b8bf7bcc72291d715,75e19efd7dcc15b089980e92e6bb37a42ad04f0a8539bfff4993daad8a26046a,75fae04b9bd09e2b0c96ba3a55f342cac4b60c90c6f905aa7a926a2993cb1d0b,761426ce4282550eb3b851bad06af5620ffb26cbc088f11e49741de316552cec,7621f5a9237acf666d9c0b5a9059997ee18a23e4ea4d77a4c39055e74e932113,76828c74248c8efb288b145b9b5dd67cd7898d6bc738e8e0886b01e0efcf9d79,769a9a33d012fec2cf76fdb241b31f0560018778f9ebb56286fc41b5e59f84f2,76afef28499960bda17b962c54fdc09a46ae100ddc365b7298e7fb5a03c66561,76f6a59d88d7563a5978b764dce4a6ba0df454e48ff6e441cc7b6c3e1f430451,77148235812646fbcd1978595779d865d55b07f629f66bd98a61b5ed7203094a,7768bbe478b4f10e0fd932a1c917fbc24685d4665d332692c9135f86ce9aaf3d,77a0cd0b4eeb01d6834c26f5980f64da5be199fe2dbf097426cba30650247cd1,77a7ca001ff4c632bb70187536e73444670ec01ba028f721b7e91a1fa8444db8,77b7053e17daab4ba3232cc9932fb6e690995506aee89a3619aa166b7515b354,77f0142887ed8bd6e19ced5c40fb1fc0738893d4bbd987d278a0518140a9a2e6,77f6d318cb6e0cd5a919aafded95d257c17207c24c6907a866e95f042ada2af8,7822a424023a0878de6c7f1ca2995c1758d8dcca388417cfdb4542f2b5c3b8c7,78a5a95e821494317f4b37131d74f3076e3f321451d2d95a41268cd818b8208c,78cbbd81ef11839ceff60a39abaf8339fe7cc87931a9611b2135ab1ffedb6560,78e6915a30715e730c59c62a8a49babcf8610ae9f9e0e0342b53bd936f80942e,78e7bf5d08b154160a08f551239bf32a20c2be6cef1b3262c3f056ea8e98407e,7914b7ecd1d762453fa3e8551540022650c73b4e8e9afd811a3bff671786ba3a,792a50c242504f17b68f5adc23533cb65c585678017724becfb1acfaa34ea4d2,793d8c1be85aed859ed458d33c064b48709943385e5dd10379f250400b489b4e,797553d6430ad9b4e3eeb82d0ce43336400b3df85d7a8d747458658d548a5796,797b656886c3e5ac23c183a1b82b09d54a26e49eeaaeca9db2cdfaa182608188,798f9d581fbadf57d1fed8a5b8e05736613edc7c5f18dd4cf8adc7073215f6fa,79ab5b4a8d401e3f61672f9901f67d6d72756f35e7f578189d42509f848a9b11,79bea6a7682a92e4d2ac8dc7558ce07f55a73e215d4cd8f2f81f887e22661b4b,79d0afc5470e78ba73c61d8f08461ba3e1c9e2a283e30fe0a66237b32b6eb972,79e2102c3bc65480f8b4d0a215f5aa42843790dccba2d84c0e04ecdd3e51adcd,79fe96244dc5954f8064bfa3cc9ea894d2bc90c3eded26953f1f1888b4a5e4a5,7a14eada077f15d4afa77d4057992f8633f46939564aee0955268e5f580d4d0b,7a27e1cf2edc3aed58ac2997bde9f0d4022a919ac58daed9393e1fe6936ad433,7a2eb95387e484d32a408f5ddc3cd70ccef2902caaf973362299ebdfda4fd258,7a788b8d4908110abf7d4371613a813cbbae71ba1675473ad0b7b10dc0b5e4ff,7a790e9cd44d1dc3e4eb152fa7c87f1c83b0b7da378c13303eecd42bac22f398,7a82b3905b5f3d22cb02bac224f7053e73766b52161abffa56e33cfd42b0f355,7a8f6eb0af56d5991536d62b2c13118f7e34ae364a1618fe57cda5630c8c88e8,7b07135c74cc2f8831c7abfa204b7b9317e30a1333022602420efe248c2725fa,7b3c325ce41306d8855a01f45f7b09f31d72c2417724ab5e311920fff92fa9d4,7b49f66f28fcefdec30b6dc068e7677f58c1618c5867059710fb2be5a61aae18,7b8cb054777d0412a07667672cc84ca1ed9231a8e39d9228f560750d671b5124,7baa416f13abe7aba6ad732bd3178964c2def03b5c5bb9044726d5ef7c622736,7bba6b98da6e101f968c4fcd9ddded3430e9a6649413d27193249ec98314e7d3,7bbae1c248671e5c12a125752490571fd9ed1510e5f115d28caa5778722f3994,7bbcc2d12f53394d8fe29d1acada799d882cf3c9932f3a889140085f6df57028,7bbd392004963f148573f23b710417ad8f1ff17bf9ea8bb094958a436414af2e,7bf5df89299ac86d18490257986ae0a38a2b86a32f2f2c27c838f9623673e1e2,7c2bb0ec1b62236cfcccd9a91a9607724a9624e44395dab990b0d87821b89ef6,7c2d00ff3375f040a17c086af49e1a937677e65a44ed14bdc4887b5f570cbd71,7c7302da2137cfc1dc8b7814201086dbcafbe86664a9107a93a6ace47c858624,7c9a2dbf8fbbbcce0762f71513daa76b1e6d4e9f900ead9d5b769484396dc7ff,7ca8b20f0d517dcfd5e914ebe424db2ef02151a3b9789fb035f8894af6514891,7cae7f6fa3b36ae31b2e7f53d1f0864021cf695ee01be77781d8d0639baeca2d,7cc64e9496e91a51e82e6635bd66ed4e3d7e4f166f0c9da66662e7ca8a81e814,7ccd4991eec149de5eec08f90e04cd0ab47cbed50dad2e6e5ebfa6ed803312a1,7cd5d2162f7118549b965754c8978b9e8a153359281952804437881ae4c9091b,7ce16b7967f8be43aea0a5bd892f88e0edf382277d4f9167a0484015f5a554c6,7d1728caaffcf51b4297d86dc741fb091932b64d588aee4ced113618d1cb8d35,7d4fb6df78367aa02adcb351090fbe49d5766a7b8ca696034889abf717e62d7b,7d5c5fd787941e762605e143b66e2795476a45e57966fcd1115f596e97087df9,7d745392c6bd6cb875cfad9adab7232d696055f4b9b1fb9f9d1a9e20bc6fc860,7d76c76b238f4424bca557891577cc290149198616cce17b8f5ca2ea485d74ab,7d78c3d95487c095ec966ec7a49e8a88c903cb819bc12253b84d67f7e6d54580,7d8d5a7b4d2c69ac37091f245224276dd8ff350cf26bd539e1509391d626f748,7d8d9f954981acabbb5187878b371798526b2da9e6ffa4c98501de84bf6bd1ce,7d9b55f217cb13d8e0561b8ded5d41a07d0be7f960d50a7ea9b92b6bb90d4121,7dc87fd7564726aef005fe9432a9dccb263c9bfdbe7e5794f49e48c357f8afaf,7e35905c7e1943bb50fa5df2d274183940e9ff8dc5c2c3c31d8ba42df1fd344e,7e4fb56a9423bd141dfb6c9dab8aa0198b5181ceb596d850f3337743d2b43e2d,7e76ae31d4d9c7f931019eceb2d189c0bdbbf35f9bc0c873c2deda56b592b14e,7e7eaa74b8388f5e6caf01e3eae7d425596773ca8f3768ea01ba879410c56f59,7e9683acc8b8b0942805e2c69debc6fea7a11d82bdedca33b95abb5ccb965fc2,7eb079c855e8334d7cacdc12136e0c618f431c78ce0ca054889e178329afa20e,7eb6b0e96645ff7919b3a84060521de96036c295230316a4cff345a9564f635e,7ed6c0814be3b3b436e77e67d3ec6b09e26fad2595bf46007c21e21e3b90ac0b,7ed6e3dd9b15ff78a60986609c1c78c02d982a323f0d2808cad42e701e8cf474,7edd423f9f13aa36c3a09142d52530ef54abb66504c2201eaa0ddd9fa5b31eca,7ee7032cb9fafb889830f826d83d35ed3c5c477832cd33d8fdabd6c93099e81c,7eef4a8ab31454768a98c03b088d66b675babce5479d4157a7ec6097c21084b8,7f1cc64d71181aa2215cfeb85fee8caa272d0e6889df544e972fa566c419c3b3,7f1f5c664a641dfc98a74ab3162511f40cd6c57dfdd6933a6d0f2940f28b1ea6,7f31161be869ec571e9a6a6d53eabdd5715d1034600f3355a709191e02516298,7fa11dbd2f001e5cfec8165525526f0349b8a6e665cb1bd21b506e63ad29157a,7fa92f57eb8cc7765e809a36f7dbfda7cfdfa774326cc7f5e30fef9c4323e19d,7fbd076cf34fa6d434a911af735aee62ea0312b5c8152a90b9e2d9de8311e5eb,8094861a47ca19ba34b88c4f596238d528873843bda59163d653d6ca7be6c9c7,8097409ae30cd1e5c46ca704ba3abfdc99b06dad0f8f4a275dd449a14dcb248e,80edce7a107dbbe7d7ae381f04eb915c6afb441a54ab3a791ca58545bf76f4d4,80f51df96e69ae4bbefd6c3024de184836a583dd3afd506df2de107799e462da,81682e30f39f230a5d67155349c24d2a9c5e99957d10944a5b5b25aa8a3b0143,81e4f7f7572fd0969b0a2aba418f77383652b0ee4cdfdb9946191d2bf3fbbe23,81fa174d9d809056e982b915a179d87061b6e23213463710b5876451854c0e80,821b7c7248374889f902ecaa63e0e422da9e06afdde383883ce1fea666b289e7,821d892e1a04ad2018525c36d6e5f62e7f958d3d4715db40df6f43594820ddfb,8227a25fe033fd274ab7e361fecdd9ff59a1d661dd9a4e7bff92be0eb3865f73,822a5e156c73c603f527e176c826a849f7b93f944d714bae5406fca295046816,823f6ffa69adc5df989309280d34005e841c2a148a35edcf2ac54a204c96f5b5,8255274d908dd5077f6dea8287dc264c2228f43e7dc948dd0a75606b1c3fe05c,825c62592f4d59272c6a992a0ccb89b5f56576e19041185fd0dac86e1e6a8388,826813db6578dd5198afb12130a5fbc57b8990edb02ad818ba214734914a27d4,827a5a958648acc99ab3ffd1db502061d1b3a14f3a6f05863375fdabaa9c8465,82a2e1bea6478d047a07b7991903a9a3f6c712bd497e43d0671f402fc91364ac,82abc8f95b1c215e048e27b3fb082d4227fb2af8cf8ed5f8e1d653503ec8b3a6,82c30c657333bb05f7bd7fe5ed6fdb071daf8c9b1157fed4d63cfa3db53da6d5,82e15703578a070b676567828c3e7f8e65829abcc0da29e4d852111bbb09d489,82ebb5ec6fbbe56346724db4abef22993e4fc67d137cc045af49caf8cede12e3,82ebd477f1fb444496cd34114c8888ec64c3bb3a5bb0e1df02b0cf1c996d490b,82efd8e9028ab3c8c24369f7a8c9dc92fe8ca6130f1f08b04c6755b661723668,8366f15dcd0c85f953294306f22866f9a1fff22542e3eca63a44dc6d52620fcf,83832860ff8b5d19ca8be5d740950629d85d3d617136156cb2d0fff140cb0234,838a0cf70bb7b289fea3680d266c71c7e3507be2c140c1278c74b3a9f188bee0,83cb822bc4dc7efa1b9f12cca8b0affc70d74a1c97ba641d8572f6c02aa53d8c,84103de259d13bd26696c874601e043bbb7a7fd6eb762402b942ada264c62a4b,84285ab3a70cdf3d5e5c0ca54259360c4b66b66b779133ddb85b6f1b44a9175e,845bf9e3ae574c2457017aa1ded004ad3edcce6f520fb3e617c933b496da985c,8472ba9d058b6f00c9c33d5232042f0b88e8f1b5ed5d1f3a2ed1708d6a0912e6,8490d9ade7594670f0758dd19e346565f98c77df3fc07050b7f8254772520316,84a20ae89d39385ad3086f7afc67f3e1476e0ee6c7c7b36cb74ad0bb90db564f,84a218499003a0cd42103c14d5aad408dcc82da9601440420a8dcd4bcab68070,84c774ba4c3453047dea05a615c0d3cee186a635e7aa5d0737d9d167bc0318be,84dc7620a8521bc86bd6f04cd10a98c581e115137a63bcfed94c5aa732afd24c,84f23a7c0825068c1483ace619bf9ee9830864484a66f3188000b605f59b08be,8513400b9a8ed657d4c0395cd868bb776f5b93d86454d75c1bc0382f7bc45c96,852b02b292f843fb13f6432e44c7e872636fac3b6381553f259b3fb638ca060f,8538bcf28c9b94f114f3c7c3ce61801c74f66bad00fa71c3e7162e7db276e989,854951fa66a090835f05cad8c96008d0f8f4200cd32286391bfe1dc332a99ae8,85b842d07f3f7564713bfe48dc2801f506d981f682afe62767295f3c034d8f1b,85e50499e984e6151d39a84812e31bae3483dc08b9a58c97b020110159563184,8613b774c753be6759206b07d586ce5e64ce938130ee50272106c41f14c95b75,866bb2c7ac0db9da6138eb6b74848df31deb9075f722360c16dc7ac249136abd,86875ee89c1bdc8825464179fa958637e1a23db0136913c8bee88e5bff78f08c,86f8083c92878492fcf55612d89fc5512e571e6448827e956104fc1943e8850f,870f410b6cc53a04d106dad9bd489ff40a8c37e692af72888b640c324166a065,875be2666c789cc18a5348926974edc4d2237d854f513f6dae9c2b42634b3a78,877fdce4ba10c905ceda6ee8167b4d549453c2b093005f2ce3b32a9fde22dd0f,87eb490d00fbe88d01eb5e38aa943574292fc9bf0bbd4240259168024332f3f7,891c3bc1fa2e98a4dfb390436ac6159af3644345e24037f8a3408636b468ef83,891d7358281ea9cb67d56b2c03efb2e411da79ff50c84ac892df401fa2100f6d,8941d4fa3ef37619864efbd2ab3053215bbd4e155b004e31d1e11687f6ae429d,895c5e986576df188ebf1d6a708f3bd2a71e6cf243049530877705636401059e,896fef0c7d1ccb6df7d7f77c5ca45316d3cb567e56cfb3051a9852d74104e74e,89a32789810fd48483f877556df053ad231e50e5d560b4fcb970c91e4d486863,89e3160c3e2fce1146b7f55a7ffb76a993cd427ff60693bd6d40e0ba21b9db35,8a0772d7c8574c33b9f319f2eb22b38f43602d24fcfb288bd3ef3863ab06b8ba,8a093f4040e9b87a4ef34d54de0951e219609363658186c1bb6da5e1febc07df,8a8430e0dafd4fd084b0f83d3a223e2e97a7a4fcdcd7ba474b0af9f1d0494d77,8ab97f8a68e291ecf7e1b42c81299401025915bdbdebbc6a475ab8095c1beb6b,8ad05e281c05980934f29180d62526b6cd370d5a17450b1c2c44ad04d2feee04,8ae383f3fb41f060d735bc2976f54be2ec282df997a52bbc68d463a210c38f10,8b4f90b6f0ba77e3ae074d1b28d5773385cbf4498a6b478b60dbe05194685876,8bc6826eb86ac229bd3f4313d1105bcb189972c96ac6475a3f372fb5fd43f7f2,8bdac1fac56291a354b5a6fd549b047e6f3f3577e77cc6f012a522832d850fa6,8becd5ea971933ed5557da731fbbb5cfc6f3158a64fbd62991485adda3dec0ff,8c09c4067c050d431c33dd779e572091b1f6f16bc9402f597751f0873a84ab05,8c0b53975045f7837743712c64acf32336671668850da64af85bbd1038fa0cf5,8c0b9331de9ae03a90ca3185bd7ee62c23d499be1048de2f32d922be80816f5d,8c2a9900654b9a52ddb79d947413415b3e11cd86c026d4749adfe1d8e8b10e5d,8c51305af4712840df847ec01e4bcaf9545a0dbb71a09063fde019350ea38d2a,8c692b75a6f1e154fe164f3e5ad8eda1df58552209ec4c1ffd6941b336482a63,8c800980aec73322dea0b444ba6d7837c70607a0f12615b8a4e164f2edae8bc8,8c832ab4b1f7ee9b8b53e165192ec7fa6b05086c44ff4923bcab44598841ff7a,8cb37eb84aa4a5e71cd8f895d8881840e6fedb4d39a83a5943fa0b6090da0cc9,8cc1d70b83baaf1fa73fe7663033271a80b698f375ff5f6ad85e5e81482e8a28,8d23fe10ca67e596bff7f85f753bca074a6915a0acaa54e9542f617f0402b9a4,8daa551776d8d6339c7c4ddb1dbeafe15cb2be01fd751d59559b4c45420633dc,8dbf8e1de79736b516856c633374f72f603c89b77033cbbd9a5b6bbcbfbbbd1a,8e872db7120c4272e91ec550d738087901e332db2fc71528906c274b380ed2f8,8ec063ee9fc22548781037ea080273387495edc75f309824f3d4322ed1919005,8ef8472e69e4901c614c534dcbaa1161029f21e141d58024eff0aeefc4d42aca,8f2105c817aa171d4659ef63c40fb94b957f8e391c8d6a17fa2d80f8ca01c69c,8f656aeb265fe176aecb4c3424e8200930b5322ed0fda09be3ef875b70ffaea6,8f94773ee97da97a6335ff78a42e0849368fd2fa43db3189eed099deaac69187,8f9d476ff5ea00c0674027a0e0deff38c863dfb636409b145ebcf28aef6653b9,8f9e6938bf5d28ccaee619ba5a0e1dfb0fe89cf3c444b11c7703acc0e987d654,8fa0097f6afc58600e3904140f9183588b93ce55896b5f2764d03b0cf265a0ec,8fa5eabe7df80f8a1dcf1fb2ba7bdabaf172c1e3e57ce81ce19ff8627401b992,8fe4cb8ab1431afdf469e441c78634987fa4b301aa4d6d73ef8b19e49642b648,8ff710969474ca144323bec7da446795f112b9dbb7265782c31be0d39de6cdc1,902f01d861beba9588d56f0940be8331087d79ab19e2c6652e8177b4b1f29d81,9040e5d4258a3d30aaaea28066ecc564f38b1565ceb30039d27e10647b5b549c,904dd0c41ba161e845c402995e76e1b62b3e6db229156dffd9a8be004f310abe,90696ecb80720dff731deffd53fe6a10242db6f4d1d603b831be963780c33cb8,906ab63ce666995c47275c4babb17cb6b9f2c943ed6a6ab0ec8fea18f6d908d0,90a9d6de4b209ad0a4d29813fe64064be3664a945217ca21c2414b1944f1f2b1,91134b246a8d6549df12bb41dc7cd641cf4e0be46d04aac3def511b52f3ee0f1,912a68e6b70d20d55db606d512fbfe1b8c08ec5394b83c583f4af7eb82b81c6d,9136944e284363d9eee8b9674a89e338fe2a3b1483120647af204bad205eabab,9173b14ceca1cb2259957388a5fdc1dd5901ad3f2c53b233f4905dba5668e74b,91a9f60dd63056cfc9af1bac3df81025b6cb903ff01124162e1e61b52e34aad7,91b8df3e9fd2d2930816dc2e66534b0677f318d75735e0f4b671f2cdc2a59a30,91f1fdbf47b04991d0e32ca85140b8ad301e83cd1d68dc581181f29dcf2528fd,9200f9edeb8ebadd61fcbcf055a165089ac2ff62731e4852121e0f9df18adc43,9223c9bef01c799deed33b4a608961d20e677a57481877a59dc8d76a5c8bc989,9230f203ac2ee486b567fa341ebd0c3e10dcda7e9e8972bc990403b2303ac310,92c1d733a8dde95e3d191454cc5319216642b5f45bd1596587d45031e05eadd5,92d2303d77624ea8e0e6e1d91357c21bb2c0db75bd357bee3a616cf200dd67a7,92f7554dfdfeac69609857613196423e4503b662e1a6caa90ca06735ef5a62c4,92f849808bdaee9f502a977d7cd7302f5a142bf6c3f3502fc6b87c946129e91d,92facd576b18f681e859921bdea3aaca25282db8c1798d7ee9881574a66ce66e,931658b94fae8f242d64a92f4878f4ed01de3d42d071022240f57d4635dfc05d,93443a22fd380b3348c68b7de07e427a0df55b931fa11fb2830ed8b342095f2e,938d2e48f331f6b79a1e282278413073492fa23ad2b537247ac526070400a73c,939f498ca1da50839664fca20c43950878b51f924c659a36b81e535286d7980b,93ad533cdba365d718526246857e5e448620abf9a42166465815302f166dbb78,93bbb2c2ffa2272dd36b282ac424396872466b519008ebca2cbe03f347ad7753,93d7b11724db6f4bc87d1c1fb419300f5d6bd2191655372d28b5d2e2c321c790,9416427d140e0fbb0e72514bc7bf547403c3db659321c93580fab0a943583291,942ce90b05bec27878332e5be085e0683dbfd4695cd5e4e9db0752b4a7c5543a,943efb195741a4a5c21873fd64c79c95e3cb1e2e6348ea88a12997595f13142c,947ab4b32a7f5aceb52a8936e1a58980a2bb0f424f0672eb9efa800d2ced3f1e,94859f6770f38ca0befc270ba542a84205b5530b133cd3a6fdb13d2492d17989,948ef12e922516d413f035c4628f9d647c9d0725ec67610a972b2ecd46dae186,948f36d24a8e8f12a6601fb9a05315f4e3fd916420810f701c206ad0f21d15e4,950399fd0eebba4d1e8d6d08edddb2e7722f43e3f0a465caf8456a17067ecdb6,953e9d74d549d7ec74da146ab5c276f54e5eef1a94e2174e033bf9b6279dab40,957def2cc6a02bb1f61d4c7dd3015bfe0bdf48b1c4faa43fb4e19a346e2c0433,95be33dfded141e8a0b8338cf11a013f8dc3ea52c4d1d15e3b0ca7d741ef0421,961e7a6954d573b03398c9dad9f3f1f176d14af22564679525a9a440e2a8d613,96204be23febd85145a1af73e072511839e16fa047ed375265e0d9aa055c66b3,96510b8b827d28aba4cf6697d99c9d2d5f6e1c4ca711ab5dbef342b0383fff09,96695d86291d745a2a7940c52c5ecfa6f9986c7f943f9df23261866b7eeaacf0,966e7cc25b67c897015210374e86b86c040e3fddf172fb76e420a145d38c2c8f,969ddd29116efb08ad80347df251aaf1eb3c62154ad8b4bc98dd63bd7dadf043,96ccb5449ff702514768e60b84715f5f734e02690ea5a31af5396838ff7a6c3d,96d8059e22633ecd1b1ec91ce7832ec07ed1eb8963f9194746c3fbee1016871f,974dd5d702f4ddb9e35f2c445149c7d95ab1285875f635ef28e0cea28a1ecc6a,974e6acddcc37436aeea2ea986020e0b271b6e7449fe86259811506ce82abbc3,97641861803e08a30916d3f4a97b3a962abf7c63046406c253d30638f60568c7,97b50edb9a25fdcfdc30639923bfe12c268dc070224a513e57c00ef3739d4eba,98169b716c6b74dba63dfe3d205562a46db85e43b13347b822b9ca143f908720,9837ea60110dd12eede0c287d77ba608c80d6da4879d74eb432c5da8ca5b3b51,98528b71cfe1e7aff9c5b229e9b9dbac4ae448c866fc6eac42dc62077b8402a4,98599c6128c18c26a9bfad67f384070ea8c5505f3968831e3163b6fb76d31b45,9860351a1910628e5fdf2c7f795ed3a51d852edc5be002cd97784ef988220503,98652ed9db8b94150ccf4e0fcd6eb83fe152f81569c51b8c3773256935f4b4b0,9872568cfe1098cf38c6d9d8fdfdd455a62e7e2ebf55071e719df225074ee576,98b0a746587835fe86090040eef817d5f4c14bb918cc9c41d3df2c2eed1e0382,98c420e03d930ff3abf7b8f696c2c4abdf45a3d9c9758b5a895e8ca6af1efbe4,98d1a9fde830dc89538d2d541a7fb75bf450a20d339679c32ddaa50840365e10,98e087022de556c48a58e06da03d869483f8cb99a7e4887be72b3cf54473471e,995654caf9ea97f17bf1d2af73fac6e73cda89a5fd7cb7c63c55e79d565a90ce,99d0bb5f81cd73ce834fb38031c51f526711da8de90288ceef724f11e12aaad5,99e32790a8f06a1ec54f61c4e9fd44e8e9180b1a5d014ca5b865d40d64f1c1b8,9a078979c41546bf5d83ffeae9621b6bd4d1a383de6aecfb613268b007f05a61,9a0c9648814d5b9b2a3b83b32df3744f038e474ab9d39439c76795c68068191a,9a388f40776f142f8583f0184c033954ae5aa219191adbdd873ff329f726d331,9a50fb8d4752af8f1273db76ebe4dc1b34d70dec3ac84cb834cc9fcf9b294c95,9a739be5958095917aabdc5ef187781b00208d66ef3472d2ae4638785cfc94df,9ad12467044df8b61269e84aaff21b22436b788d83604dc725e42de7db4d0d14,9adefefbb97298c29509044b2f3a256c1766de7481befa6a24547b032f423469,9af6f7d6ee0f4b13c21b8527b18473b96e5d35473a4f855b87eb09157bbd77dd,9b45c1301fc981f75a64c1219f0a7c77053c7b7faa875210f82c0a8fad0669fb,9b4602adbbb8caace397cc1f21af3d093a734d9844c6affe413fa0d912e2f473,9b506a258f62ef7df54e99b8b5b9f5e511448c27eb4bf5b1a42dc02df4eab840,9b5edf221855d8c3b0098d2a812343fd359fb940d5d26528ffab18ff6e85e69b,9b63756a5edb2bff1da995e3e7048758c46353a76bab922950fc3eb7f16daee8,9b703cc23ba88a33507f0863f03a90e9587d2a8cb5d76cf8353e149ad16571f9,9bbecddfb0f8fb68a96a0e3322250899c47026e4f2f36d0c0d50b9cf67ff79ff,9bcb313dfadd6d12e599ec7fc52d0a62f4b8e49d02a0ca129e811c057bfa7b3c,9c0806b4c62188b4b7f7645b440eaae0580154cc62fddec53a4ca8b9f46c3579,9c0bffab96973daa609a12542a48c0fac937c632ed1e4e7134e3682f4e89f004,9c48f3d7c7639cc56f51c6b72526691ea43b255a940eadf0a53b3393d49334dd,9c76c67b9eaa7386ecc62c084dd7d571232b385c3baff94cfa2825fe99d43ee8,9c8d2c1ae146fadb57b7c7581f72423e2f34c31cb45e3acbb9a06395d8c5f53d,9c8ff64ac3eeceaca284f93cda4e67cfc93be265595e602fdc61e5e619db8c8c,9d0d16c25d01c451bbd2b8ad9d42194d65c0eae52a017ab4d236e5de7e0523d3,9d0f3ababe0d2f73370c21bbd6b508100a3b6649bc45c2c9811bb455f6656eb4,9d0fec6fc78dc7d89b7b666c9004191a10f36e42ed72756e1370e29522c1185b,9d25424a31ecef6d7f43bac8b723f15256ccbe84d1523ae76639a1927b44f7a2,9d4444b94850d68f6766bcb6f89fe61a9426f3fe06666db07941b80501711c50,9d74e8f0605300cc6b62b3a22a990837797d76be5dad109226323c5c98dd1ec1,9d90f99e5a80ced9c2e16ed243f50c81744a3070115ae3aafb31d100f114e0c6,9dce4ab7c091878a3db84bf1895222cc4d4787e7b9e48bb53dbb8de6cabf3ef6,9df78201df0bd7f2229b136c59f149bddfc8eb8631ffcf367c351cde7842f08a,9dfebb430783bc7e48af60e27e7ffacac4e0bb6b7e09cfb2ad203aab310fa886,9e19fb19e8ae6ad9493b1bef17c6796be9df9037d14dbe468fc53136b1587a7a,9e1e10af39467b618ad4bd25547eced11c5859f2cb31ab7262029c12824eb3fe,9e46ce26862f86b0d95373cd670cb2207f227cd1b07ed381abfd775bbd28feaf,9e4bc90ea760ae91701615c3dc94e36d22d9c080b178b9ed831d50d3a359b8b7,9eb25b87c8cf57263d211183355163745f440a4aa282202e9d9f343e8e798d92,9ecdc87ac01bd88534616dc49d702b7e962f13a9958e01b59071a29df5f5fdbf,9ee87f115563eb57a41a2b83ef816fd702a8b5bae39886bc9de7bdfc42961319,9ef37f02bd68a155b6127b2967601355fe5d646a7328b337a9df30a577fb7887,9f9d24bdca6e4458f72baab2d15db673838d78be5d7e888f8bfbfafa645067e0,9fa6247c8bf7ad4befebabbffeebc0c84b2d02c36a9f17d9c387b3ed9889b5f2,9fb75df83e140f7e61ee280bf9bca432e69ff6e8d734d989b5c855e9f112619c,9fc10a80b5c2c6136dfb1cab3192abaf39a688f764da1b2fecdb9a6c62b23c8f,9fe435ed736fb772ac52df57ea9ac14cf4be03514e641d3dccaa94bdc935dfda,a04e3f5f720025c37eed84d885694a783b690f946ee6376522343317c7f6366c,a05addc058257032b6ac71da069e89567cd669fdac4163e47e39daa4b113d320,a09c27f936ce867e4f299737b12de05b6674f969c88d8ed75d656168eaba4de5,a0b4f644d473b398137920fbea83d6e7de12a30d9fe2b527b50cd1ee3d590801,a0b61fe71deb0d1999f30a5eb7cf5586b86b17e278efb20fc7e117148994247a,a0c392e569040d23da663e6cfa9d2c0d9c5386753d01cc1d78d4db8e48136095,a0c5b71b50650bb00fd72cfff334e05feeb92e65310ce8f8e6cf130b26a47be7,a12467d280729a5c48e29eb075c1155d449aaa1fdd23140902549b06b344068b,a16851d828a18295bac53e703ba5457901a05ad304265dd96528bd7fe84a067a,a190800c11dd1d15d83f41470b8dd6838f523a646dbdccd438113141be2af04c,a1b16c108bd1a896ebfccea7fa24817f72db9c105500f85214643cde6d45b2ea,a1c88dcab9ae5f078a89f110fc00f331437f71626769243f031ab1c222433982,a1f674886d16bbe506c95bcedfc7ca6ae13ba0c36e45bec09e07b07a6525bde9,a1fe3df9cca51f31a8ff13ac37f7c872ed13d29d5e5ec75dc8f67f6054ee115b,a2283c3a1486c08a6b4675c610c231ced50764883bed54e6282afdceba3530f6,a28d455ab0f2fd92ba2b8690c80204e876c9ddc14265bd9fda477b8fc3699eda,a29d2dce10e23c05fb023603813ac6d4b9b899f9e8d4c5a1a92a538520d0b366,a29e911f94e1033bb4e90b2ebbb6c74f78a90d7be97de89ce47a66392d2f2dc0,a2e6120ef711ade20a6c6254d739bf1518406d3731f770f91c858e57e330e9fd,a2f9e68692041bb66e9ea22750ab5a30cf9eb23c928994a2c7948aceb4663a07,a334b8ecd369ebe5348f98598b3b9c50a4f0aa5d8423e46a46ea1815f1265d74,a34e0c60984e96ab4f4779e7c6579c2c92ddb7c383c7873e08ccdf5777eb793b,a34ef74059bb420b0471c7f12477d1345c261a30da0094b8ff5f3c09adef0560,a36933ad91543f339baef20ff713d50bc8757bd1516bd0073e5eebe49db4e60e,a377384e535a0792674db13e733298f46dbadf68f164aacbd64479bbdaf2b817,a3b7939b203f9d1eebd20ac8e4856c3778d7c6c36e98d218128e7e83771c87ca,a3d50e458b7b1c40221aec920614787fdcc49c5b73b00fc1b407b5dfed5008f1,a3eb1248e2762fa4a480051e06745c2b4b3091d787b533e9d19b338862e1542b,a3febdd1c380fd3ee2c16642cbc08edf3dea2f6f536ffaadedb61a886f7e2cd3,a46eae9dc1d9590ec863e8fe8a8c9bfd216582b211cf4bbb1a34466650f640bc,a4a4807c326b324aae31eaeaa1b5d244086993b39e31204c6b5ef5a788d152c1,a4a8cdaae287b60be9e0159f56f351a9d6164b3b390f0a17e5d674a91f7ec2e0,a51dcc0a24a0305429dc5bd34f083d1957796fadf5f264218540ea9d4af2090f,a55dfec8b4d39a6a913d5020cf7d51177710dd084e13df019890bcb54dbea1db,a5be23e9bc14763551fe528044b9eb6c7d793c5984964f2f220cc8002f1378b3,a5dd953838ac6314c37c1b6877267e420bef466187b65f86e7897eb3e5ed9780,a60919380db47898bfbd5791c1e2f9c5ff3e60deed7ec71d699875c39cc090da,a621a7d87684591b7aeadaa323b85fda000b3e5768dfc44672a247a838eeab65,a64a42e76b818b805e6d5c6c5ff6577255ca4e1a7a9453d23125be2afb530910,a651f321a7dd5f4fe4618fb86ba14c6603f67cce5ed36590c5f3c5f4c288c796,a6b07294e6d712e0439bffab3516c1bb7afc69e6a949d855e0f1ffc2b0bd9258,a6b2d0749caf1e246fb778df9b74a25a29bc2c50f0e15e5af7851dd84215d548,a6ee7cfbfe7a169b2d1e53a2d69aec1bda392665a2016bddf2b3617631888813,a6fc19351bfdce0e3be5c4409ed1c768ecad6dede3cf6ec8bf8db8fa5ad0e5a7,a73eb6442e29e73c7262405e107e3b0a9cba002bbadd4ed042e6e5db8e2489bf,a7681a585b440748f67fb3dc52949271492bc2da4265ec23c67953c13672d27e,a7baf7ef136830642b2b73d1f7313bf7a3a4dc6f6374011ba079589a2dc38e93,a830fea2b628872270af0f6d5b7bd72d0de1240f1d4692f87ad2f27a6dc0ab07,a8616ab8fedb03f87737e82193200d44a00359ea9873c244810836035f55658a,a86eeac86a4b3ff3476da7d07cadcb2c69c0be124e18b4bb6aab3540f7484e18,a8823f7e37d12845280a0e96d4fc01a9308f1668587a179373f6ea534e55672e,a8a1dfe5a62c42b13d7594bf93eb74c3c3679a39ac91a35d78bfdc1522926b85,a9528db97d759d502e5b2391c0c97d44bb6d36f395f4a14b035e24dbf66ef08b,a9642c1ebf2fed5e98c57634b7159dd9fab074aba2638a2898ecd514bc3ca013,a976d8eb0c9bc1e48736a031b5efd92d3ba41cc8b0e40aa1cb1a67e02b36b359,a99b91e9acdbb8444404207bbe33ec595201c05bb7f17df6f5df909feb4a4bca,a9b51388246a7e049c9edf5025306f4816cb713e1a07735548ff811923fdd730,aa0594cb10253098a0b0786560a5140440bc4d0f9c99d08172411192895214c3,aa14ddd3e725d4d1b00fe80093f451425fe280a25fde386f2336b7530dfe249f,aa2d6254fb71a4c1158822458d09d447dc71c2015a763249dfb04479f0207f82,aa47ae56df1de46137ae6ffb3d17dc9b68bc23d0cf63b37cf607a252a6806d0c,aa760ea7abea1ea46b0e5c007c21775db36a4a9011eba80c1081746bdf6d6e5e,aa8d246c39d922144a7b6434858702774514ff234e4433affa658b964a940fca,aac1c52d10e9c6d7a5fa50e7e02cd1fa62c5cdbd8b4cf5d18bf7c181d7d20723,aae94fced2115f1b819caea71eb08c9a46920022b2a7ade57be9d5b8033de6d8,aaf65d302b3a0f62d4587843aaac11e7a32b78705c99af8ff5cf0bc7f9d615b7,ab0e9f008aad6d5ccf1f6874d9dcbdf2d2c71110f52d5f6cb8bf05a2359dd57b,ab104aec288f44773863584778a4b3b7dc1842fa6d45c7bfcea503e99806e6be,ab502ffe0faa6b38b0e0b80f83a5fb7fabeacfe487395cbc9c80e82726f0a1ad,ab8718c3894030224e8c9aec3de3b566c8c74fe09f27a5231c5acd1ece2046b9,abdd76d6c48093415112f1d75e59ca5b9bb808d6922ece8ec5034f375016381b,ac011ec8b3f581b603c4dc0870fe454b64fcb0020954f63c9be2598dc0c90c5e,ac682f99a8d65817c324edb98ad426c91d0d46acd34ef203365564ca320d0308,ac8063835e3e932db07f30e26c4d76a05857418dcae41fe1772a85cd7865b8de,ac98fbd2fd779f2ab839f253baaa46cef4fba06a6ae77f2bdb02b6fe7e9da8d9,acc7e986277a988a220f35d4938ccc43df82df82f9dde29727aca2ba2900dcce,acd2b29c27b554004ac969cfbe4a66079519035a9cd00056b141a30e17aec291,ace3c65ec42a6187355624d84c5e0dc423833842be85ee86bfba29cec6e927ec,ad2a782379cbe7170d089f67146b107cc66b0f6633d315a9d4097204b8e288c2,ad3300df82fc208ea3200091b3b64cd5bc5e40190fe529e972a614de46b6bbe8,ad3d5209eeb415244743c0c1be6efc950023d76878cdaec9ddff32da85ebeb4c,ae089ba007a3dc88d94fd9ab385126540c37c12ce30238b0fd6eb3af5796fc83,ae53a8647cfd93ec7f0d7a4ad17dc5547a36abc9705fb5a21216bfc871cf58f3,ae55933002cd3045cd3df8953410b024b5abbff782950ea07d6e746d19dc71e0,ae5976ebc00dddd03995ebeb5b188aeae948b36d1769965630f6654a12477e89,aeb30bcc48b85f5605a012907212660520d9255329f72450febfaf2411a5f51f,aec8569668111fd02c2570df0fceebba3f4c136b2f78cc8da6ca8abbff262688,aed23e779986e6b25ed9ae7aa5f736d6b74bb37ffc057d310505ed0f0bbead7d,af13541c940d85fd9c7a48f2d7cd5fa6a72155209d9b62decf56379994f71ff4,af1c46b058676f9d6918abf3f673c16ed8f21552aa95605a934c66290cf7c0a1,af2d374cc715d8680dd1780242079bdc3e5bb507fd05eb62f817e94303b4f6ca,af482a4723357315a0c8d51eb95b61d35a808688a40d5dc5eebcf71da16d7834,af8d6438deee38bc76b179b4cbeac6db1cafc47fdf0de4241218f395e227e677,afbeac71107591ab579580704d6185e50eaca3a2560833883702f2aa63471237,afc9420910e97efd30cef738e6ffa974df2b8971b0f17806abfc7f9b22f9b62e,afe380c91ce9d0b8064c7733fc7a191edb698c1b926905cfc469b64f8e529661,affa8fc77e9d8e3eadecf6a17a0cdcbf11c4371f48e8c4c770c0a87162f027cb,affed4178fd04dd4a53a47847a489557a26c961e3c0f95e486329cd0e4552ca7,b01c77db9fd325e9d08a5604fcbcbe9a415ea55e5b0bfd92ec75e8db5f301925,b02d67d4ce4ec8c623d529df4d9b0c844301dd9fcd81948f0c453a3e4e486bdc,b04e9e73f1a5a5a5ba0f684a4aa940a29c3c7eaf1af13499e29261bcfb08071c,b0d3eca14a1aef23b6f0b0d2eea49ddc361e0fd6a76089f22d2e700b531da789,b0f63101fa67f723493fc1819600d240fb474f992390051be33157a7b8d6d341,b13d2bf2377ea3d56f889184af4ae25ae8707dd8e7b95cea3c27ba4d0b65101c,b1971f413ca19a5641281352f4ebc12f14d626d0fe2559a8ed11670f149eeeaf,b1aee3077d87eeeb37be01c32c6a39ae4f80c28c9c0aa8903c475d2184755331,b1e7ed29d870d9070406238df12eda1736eaca1a7b61f540e4e9ad91e0236436,b21e91d89fde60c3d2d070d80bf198162eeee2c0760b704e18b0f35a5f9d698e,b24028147ae4c1039827367cff4fa971129b20a9015295f3441e81b9d0595fa0,b29b97365416d3894f1e9e0825518e9c24475d094513cdb11c797c61c74108f3,b29ed67f85b2ca15daa99ce60150b2ae0235c3fa04b7d29bddee7d46b855b19a,b32c36b7df8a76054f5541ff2e694c5fcc44102360a457f893138052a740ae24,b3cc20c464254bfc542f01a689756c5b99a96d51d061f521dc74ef21d6c10a7b,b3f4c0541e50a00cfd6f278e99ea75d331b320384527331bd836a0eeb9b2fa1a,b3fe8b762d3c5fbaae5f9a3c9bbcd77c7190546ec9d161dbfa5e46337838d323,b429f63a4a20bfc50cfc2c4c878d200835707de351f54bd4ea51a8760155e47c,b43517d7d8c040f146cffaf7bcb50d3083405ff608a8e660f309c070149a1d41,b46076709a3592fc6be096a574aed36dd194ef5744ce0c3d3994cbf8a14e0ab8,b47cfc5b946e3c78cb0c1b2be0a8a8eda737000f49c347606914f1038c6d9c5a,b4c316686ee78210bb5f3fb8bc1ecf894f57814c3f975aa632d46782d6f821ed,b4cb412b5fd93ef5687af7f8fa685f0cfd5b3241090ce8ed4010dfb816d9765a,b4ce7d703806ddbc350b0ebaeae0689e75cc409da15b010a97c60832024dfb46,b4ded1538f614c366490d39e277e198afa7d57481775f6715479c18bffa823a3,b4e22886731008e5d4ef159995a0e30039b1e2d47910ab6519584265b662c8f4,b4f5cc3b0df1c588e75f6f507398b9e07b658295c1e8ffa78d8aadb543a318f3,b4fba00c79a3f2a1555614e72044b13dd0ce53a8c7d5299445631e6c884cb559,b51dfdac9c5c5d7db609c4463b9f39135c72476edb8797f484e1317f6ac9ddf3,b53b324567c2aa8dc1ba7fd0f274bb374338a7f1f2361c1f841834098d9eac0c,b543665599d6298a00436fbacf5f547890c660f60a8cf394183ede59e6500dfe,b544efcf56da99b8886a4fafdb5c2a2b577bd431825bea4c8a535f7a28998ccd,b55b4f32a169acf6210c6d358493e0b3ab4e85624b209f499017ca0299804cea,b5a25c397267050bfebd720b109283f3a2b1ac27af8940b337a0725a7db0c310,b5a60ac5af2b7e7485386bc431675b07bd9f53e19704aedd8703fe5fcafeb2e6,b5c06a1b2de7693ce20679683797f48bed61d37036f648bd0c5302750f22f7da,b5c0ccb2a995a0dcc51418b57aa70d6bafe31a592a27b524d14c79603dc746b7,b602ceda6fe7d5000ada6dd238e3be3b4894544b2460b92f00300f35adb2a270,b63dbd3e4c20685e2deb619a28aa92c2c5edbadb38153d5adc8258aed52b19c6,b6cbfb64bcc7743bbf52fddb8ca3d8ee65ad6835e66f897bb70fb2295e41abd6,b6edb67489960dbca7a1b40f538a5f551140bf1173dd6c3607ec13ac8e39a566,b6f38d9959ce8d8f2e9c77fe8682fe04622e7e15735d67d0c27eeb3926393b15,b71868ea52b2c59823b297badb6ff2cd5f873bf646f716ffb6a6d0d0dab07a31,b7235f65c656b0b2636412e3d8464b6e6f49b62dcbed897e512ebc4fb861a5fe,b7478b7df4eeb9c5202f31b9d01f3f7095acfd88e781e5f8d2821281fa9140a6,b76391f31b666f831eb08a7bf2b1d8637c8a0d1dabbba2b01adabb5e57d5cd29,b77cfcda44f925c0c774c64d5f8a25ea4c0e638d3e53b1141cd836cb47b4503a,b7d42a765728b927fa5cbfa1c4c9a0f248379b54f325e5e4e71a6a5966f83e02,b7fe89425eb19bf4b62a1e7cc554e7c589691ad4b330282d67c915c12c403008,b83c9b1d00e87e4fd7acef6875557e940e728ff165dbe6181827173152eb8015,b85ef9fdd4d70fba0448ca917c4e78cec43fd0114adfca0a40f7e68dbf7b1d15,b87b3b2e951e0c7c6142bc4af826bd144cf60184d91c0babb81570d06545ec6f,b880ba118e1eaf28d550cdd110d5679d9078851083075352abad538c347fea6d,b8ab20c9bd63a14ce8235999528fae97fe0304abd6b27e44887041fef95b0cc7,b8b20a6eece455e42cf232c83ba02a639d9b72c8b85c87c51a12b768a299a637,b8b387ff6df65fe15bde400a5e8a2ac8291c26d8913f18566b610fb485adb343,b8eae48ca53b3343da33f7ecc4ed93844ba4e039b9ab8157be71c1b834a82ac9,b910ef5cd42b1b15352b1974f1a573d2443d1ea0d57b41c07f48c242c48a9033,b93e3fc34cd48bd3318892d88d31129a0cba2e94b2c5d0713cff8aa9e760ae6b,b9940eba66d3734b4c3d935c5c600a8b4ddc8bfb7c45ebb7b9844b3c2906715b,b9948c2a5dc8f0e42f540397db01ccc6d78b3b9df596e97440c40299c9857f6b,b9b30691ef02a24195c0af332e37514029d96f9d15f15fb5cdf2e2428d40e9bf,b9c40696edb3bca439715a3fbccda5bfc7239c087eff27579976a8877f614e32,b9cb02d6f8abe032f47149181028047187e1e1d7535707a618c727a3b068d8f7,b9d8978cbe6e5a3492a5640f4da3e4a6111f70c96973415c469bc61602d11c2a,ba2a14f01a94b8ab88ba9621539ab5a842e2c2d4f4be217c083ee02836c0e76d,ba8cf6df70066fa4ece61f59bcbe955a24be3fae82c5b74861dbb1b00a9f2171,bab173a56b3da098752368f7bd4f84c70bea8309764d9ccc8d89f9657c03d154,bac4e73d144e0a3b70d81de8452150820b04888eb3982d5dcccb95235457fc6d,bafa7771bdf928362c7a11ee31f67a4d9fde9d08c73e97731d39052addab9f47,bafd0806f3e16872c3f75016ced04dbd17847dfc06cc169c6b6d78837b8acd13,bb1bfcfaf767d733de9f3b5318e4780814117afcaeae12d6479499af91477bd4,bb2d4af896e89a0e9a686f79ad396dce2167db825fc01873baa5c7ebbd05b8f8,bb364c642eb0b2ca687c5f97241197fac1302c1638e07f1fc6d5d67c830e6312,bb49b21f357fa31323ef721b8f1e8a56e36f3606abc8bba0f2fc2205b82d9fb5,bbaf92ba519ec946831e4f4b3e958550c80b86c6aa524551e6cd9bb23fd6ad10,bbdcb0a3fe93dfac982797b612b5b380c08dc995c8b0706b672b4a91a9474804,bbdd836f726498271b335c53918a98eab16e4b9d764db15b433a921d07036974,bc0e8f1a1a3cf1dd92af06e40bcf5923786cab13d9222eaf16c6f4cca7330533,bc2220b991e179627fae28e04f6671f189d69946da8ac84acb8065169dde0823,bc31de93b551bcd9852042039a69506f2f58a68abe50ff412a89d5747660f66a,bc7797ed43548808af773c53ebfc097bfcd37a98a748ba0abebe85ab9dd5d373,bc7a30131c9c07b0fa08fb64da165629ea6e7646521de79cf135a4d7d58d6687,bccce92a6290376563473e5bf53a35c7c42ea1d57f849e68ee89809244c3abde,bd2e41cd41c44d87d1fb794a83a015390ec0021e115d851957d0e4aa1d902d4e,bd38ed4995ad4e59bcdb4e6fe35e9e94b13685a761f9c8a7e39c0cc83004fb7b,bd3ba9e0471fa9d2512b2672091780183b38e9103d6cb10d0d76628c137db0f1,bd498b2cd063c077ff7a130fb663294e16913e7fd59e99c7b84e8aeeae1012f1,bd8047931ea0b7812d9a827b8c2a64ddfe46663e47730b8caf7d8ccf3df1875c,bd99f81736137fdff7cf7f7cc640e8e487735b517e73861f4dc7d7de0bcf63e1,bda51c033fa7d4d420edc96f58c166af76b5e61ef79fac84584fc9f385a32b8e,bdd7ab8bb78ac9962231d105a85a761a88f597738ea336f260d8d1d45d0f5bf1,bddc741b0ac05952b760ef6723aa91944fb34a20cfc0e3eaf28fd4995b39bb86,bddde7cde40002a8bfc4233fbb9b48a680456a129108091e78b9bf258f93728d,bdfc48cb5795c81eca792235b9b7bf0f81c13450ad039192929169000c424695,be25fd39e9870fe30ffec7b6b214fdf4623d04b15281588c4b149fd049d96021,be53e5d30cf97cfe70c63c63ae0c8d98780d1061b475cc49a153ce1976ee6d96,be6f8fef73bde682d37fd86c91f61aa0ee8eee138317b216f8be8feb878a2332,be7e063517e80fff612b4cae11d2c0089c125d2d2f057fb929c9b59f004f8cfa,be9d041ffeca3c9eb625c5d8d0143791bd5ade1d629646cfc57d2e825da31999,becaf36e946cd7f3ea3043cd5337172f7f7abe3af9d80bfe4a952f99c4082d13,bf9268120378ebacf1c105c34992d65ce31f6e7f5a558ae74d84c5417fd92b80,bfb7f94bc55417ac092cfe904146ef5c74393d2b8024dced0a16f3b12e6e3285,bfb9da5d36d90e619ddc70a132012cbc4461240f338e8792308036ce581a540f,bfc529a8056cb197a05508c09b461e51a3f14b7cf5bad51f5a3964a98b7207d0,bfd1fa7001725c9c91f97372356e88d458cdb3f13325c7504d1d2a09e01055e2,c040a8b8c363eaa8c32292da70990e1e62aa5f83629472fb882f8c07ed1cab81,c0480eaefd12e6a09b2dd5236fa3bed43a5bfa849eb669d41d73a12a2714da3c,c05bf34fd45ca21fccc0157798a214f597eb462c620acc2070c950e779cfd760,c05e2db7e4f8860bc5476f6d86b1addba9846d1d72b7437824f3e95b5e6a3fdd,c0b85cc79beecae061252c6a563cd837cdf1a22627f71d87c544d15672c402af,c1223d600ef0fd95978c58bb2c86cb725f824ca752094e899a47b5c6aa7adc22,c14e2050205768844e27f8061f28d24ba25b7d159bd0756fb64f7095cc6f8caa,c1b864c7fd2911552a8fe53a44498c816588ea813cd849431020f933bff75906,c1ba883bac1c6572b1c37cee5384350b4016f402ca6b08ef826fbc7e3c04bc5b,c1f33fae896d089986678c5fc59ff80346c4600fc4df94f3dd6098e2b53ce00e,c21fc4551f1839dfbbb45a9e93cfae3ef0624def10ca9cbcae6c39d2f55a3639,c236ea8a9b258f6d6b8af82c2bbe524cb3c153f54af79273ce863e28b7bb66f4,c2c1450d284d0205e7adbdc1a09c7cea0e2412a8c9c16a915aa76bb56d9596f5,c357c4fe8c0abe8830149532da391fb585efc681872175ca2515db0c591752bd,c39b7c891072cdd38ff2d44b4e86b0268ba3d7212df3587296483877567a9335,c3dfe7a078250c1873ecc45c525ff941386058ae708c1e37af78042d36fce0a2,c3e2de0eb07260bd9b018db79a105c136b1cbc6eae71317d988de2e9830e47a5,c3eac1405c6c96aeb7469d6112e3539ac5c83ab0431cbbf33109d4b582300ab3,c40b4ab1ee324e057c8c0a216c5303582c3132a405827668016239594f16aaa4,c41eb693337534e0c40d2842182e3b67c7c3ad5dcd6e9ed43bbb38f60fe75189,c4406c1f361929451bc7fbab6ce788fff260734a4865a9587b007f9013bec53c,c447b9ac0e30ca14794235c5ae3942e7d108b0d3fc8c0fb5ba2a7275f020daca,c46c049e11f6052e0747e5f1926b190ae911a450cef935883ab0df6974af430c,c49d1cd7b9e923a1e3cd977afdb611fca79f9a5a184de7598ed1b9de49bc8952,c4a1596dad6ae4d5fe165b55adc090db1578f6da30507b6ed1e6e5e2c6c123bf,c4a16926988fc21316fb79b9a019773dfe75c00a8998b9c63cc61e8ad6f853ec,c4c0fe2fb293baab474f0337ec99d17b9e17594fb5fa009f7e6935d8182912fb,c4ca088c47cce64b29eca6b797f477c1179670597d7130dfd24e8a1db477fc28,c4f9906b242952a3dbaf848d760a03bbd71debcb42c588118c298801d21bb282,c5062ff302e6c3cbef3752e09843049eb38213f0151aac839dad45b7c244dcc7,c524fbfb1d2524bd6f04223ee8af14e63335951e6d7c315ffcf14cbfc5e30696,c5ad2c0fad7931cdfcb8d69c48f5fac1d9564966121e0a8745d104c85fd1464e,c5b835a5c4ec2fe05a8e7d6bbaa6ae3d01785acb4a818cbef37aa9b75ea5eadb,c5d48fd4189b5f9f49f6b77be3d4cda33cb80665388e795be59a3c06f7e7fb98,c5db9d7a9048ea58c1f4bfcc1a98f52b86462e15a593763fdf71f8841aedaccd,c6329f24206aa97ac56e37cf573c2794f0326e08557a5b7eb8fb4f4d20cf268a,c638574809b2f4225693e9a45cebdc6b3fac024caf551a9edf7b0f9997e1ffb1,c6d52b97b04b80f21625b3ea128f6e0d85eec60d433b9341bcd0d6873db6230d,c6d7adaf36222c16c4b878d610bcbacc562d9d82191eaf89f9ba6f4b77f28c0e,c71b86e4ad0d95e4810150b4bdf0073b6cfee0ee01b77fc3cad5d3f834b5199d,c76186e56b3fe7d9bb3ab563baed4508168404720376396c840b072ed3c538a4,c76990e2b6a128f339f293856bb7bffa645905fa33aaedbbe84c305c7aecf7ea,c7b134d6c6ffe24abbd10fe4e7c554778280444ea67ff0e8e60a8e06be638f21,c7bc755d511e95b420666e2cc4007b2a95ee57f1ac3ab1127e32eb4ed689409d,c7dcdb36c42d0caf854d72a0fc8f1b40efad016374d6042920413adf7d68e8ca,c7ebaaa646a7c57938587e9a0a575d44509c26afdc957460ecde8b87594aafcc,c806f525e0f0d129281a9ef8c13bed9020fb00a3082d5dc5cfeb3cd4fe6b6a97,c8203dbdc5c0d3d6548ac09eed026afa8aa907535430cb84bc88ca2b8e1209b7,c828a199e03c67a3cda4352c31618bdaa5462ba5a4987815816eacb1ed368e8e,c82ccc48a1dcb602e055ec2ea0d896aeccdb0ffe61b6db74518348daad936dca,c86bdabee10b0ba0cc72a3ef0fe6beee079bc1ef07420b78cec4116eefa2ef4a,c9728148714253d32f23723c659b1eee4daaf8e3fa7916d4c4d0e2da7630f051,c979e65768e418fa8a4393e14895b603a558e8db1380705e06573e51cd9da989,c9a6f3e0b027feaa9bdb1163e51a0b483562a8f3589bf034ad7b844fe79aa592,c9ad4389b95f00575a0a9e4add65535b2d3482fd65f01443e165f3ebfdb8a80b,c9ad4721b517c459a17ddee5465a2a3381c83ecf38d06750f64530e299fdd981,c9be3a0f0c1f9bcdc2a74113214f84250acefd1688c448aec266234d452da760,c9cba4da55f132bc538a76988e1f11e3b42b13ca9bb3db7661f6f4b9ff3041c5,c9d8576e1479b2f24e47365ca019fb4e5694f07313ff14e4cc768e041ead7ae5,c9f21d8300e602cc7f9b649cf3fb4c5949d53bc8f01329bfcad56fdab3e24e5f,ca339b89a8d5019a89066b6017e689c549233cb692395a16240f355ab68b5b75,ca59dc2d0731cdc41704f5911a88f89eddb97913f4e2d0d6b7bf15deb88d9c9d,ca7b9dc6119668bec0d51096b696c82e889cc54e4989ed4de05b9c925093224c,ca9cdb81b507663f1ce8abaf8339753bc6ba39b98b97998f2b98c27374518517,cab38ed8beb281ea445be1c5133bfaf67052f0c307b70c8cb43a4fad920bf449,cadd81329c44e1ac0bf6804406eca0ab7abbe8219d061eb3f6a960007ecaabcf,cb14d9362df76eda8f56d483374c21558a75eed5905257820575d58a01d27548,cb2cb8d23bc0ff54ecfb92cfc9f96717b2649f3c89ae08d8794c7de9e35d1ea7,cb6fe7a574f869acc402d51dbb64fc2d9ea3ec08acb61ef64fcb2b6758124e31,cb76edbd7bfde072961feb54fef9f7797a96ec1fc51d58c6521e019cf8dcc115,cb7f5287a032f3adf910b145f3aa4fa64e5c1556bd00717f1441d3dfbdcd16c4,cb90b93a3f1be779154bf27610a9610441217cbaa5e188240a12161ff8d7438d,cba6a740d665d928c30b2ae93cf5cac9fed2cd85cdb72d78c32aef2462bb408d,cba81d519afd6f1e6279ebdb5a93babd9ad607defdc38287149bab9d56b63684,cbb7db8afb357dec42498693e0136325f2ba23cd240eeccc6ec21b0b9ac8f62e,cbc378b615572c77389ffcd5ad9f7f0a18742a4f7046133c0065281b7a8a2690,cbd318502ba200818ca900d59771f23463ab38c799c4ed94b3bd30123f8107b8,cbeb0795d1b76a3a14c3bef28aa38524e44ad05e0ae77ba175d115fca39c613c,cc4dd785b84a9e761e8d3f64807e5b4f88203b854126b9eb223b9d962e16ca16,cc6ede053e72a55dfa53892df042b7f4bf5af74c0b3e3773031732f361eb2fd6,cc9b1abed43adbad49af8364f3d2e15df73850fd20a61f75b6237c204dfe2988,cd8db71b62721ed9963b2e1845d28fdf729024e49af32cf82c71d82bfc4f76fa,cdd001ffddeaf4a33d04f168f5c36542ffba8385f658a2af03bbeefc37c0dd7a,cde8dffcc848d03fea7429f59c14ce283c5d78faea436ab18e755f0702984046,ce32af7b695b5693a00cbb0ab05f14d10c475105bfadbdcca28ed091c3b5e06d,ce53dcd92ecffe318dd21c3eb42362b07f61612a90a085a865567a98f5795391,ceaa2962032a859adcd4df9e06de3e2338206a70b50b9e09754bbe5b2f4df87b,cebfb6a2b68648a1ef1ae0b1ac5813cd85659327513f547286f9448ab408415c,cef9ca2b649fda2769f93c1d9c81c43d7092e03326b56b005664ff4c7c50d61d,cf00fc9474f53f1d1d56de5a7136c264660390d202ea8abbe9743adce80c3213,cf19a27345b2b0d1966421fabbbf06cf5345976330f37eaba05cbb343d2c587b,cf1fd0a4e8c7c662536e263903c864b37ea91ce9489735e352c628719045c995,cf280df148fb1d82d245e79e55be9a17831797f50aece93b9ab70199b1500761,cf2fe70e08d8f0482b5294a89f9e9fbb608bef6582acbd71e1c3ec280c313956,cf3ec64532767d0ac5e648a963be1a28f88e056801575d75359c3014110545ad,cf59e9b9b7d11b137a324ab663912d3a6a9ec0c2d32af4d273369f75dd57362a,cf5d1255eb8e32464bbd03be235f108fbc887edc0030543f53f1cde92e35a0b3,cf972b97dc8e74dd5a822db4f3d668b734f1ab8d7c20159297a10c7f479ce4c2,cfedba0a188cd9278dee695bc8525e344b697a40fe44b025dddc266c02eb5dfc,cff4856fbbfa478c176d6bfb3b5bcae9e6aed88391382bbc010ed9a9ddca7cb7,d020a9c93cf339516dfd005deec58229838e864690ed9a176c16731286c71139,d026035ef1afd91d783c658274e2018447f69d9b494972a7afd88f51649b17dc,d0433237e09487a67bd3b6589b2c4904762e018d2b6531e380b2d52fc8644561,d0548f70fa32396a7a2268b93706bbf763d6dee9dbdb161580984ae36381ab6d,d080e06890f625300809288301eded5109466615a8024724008c513c93c7fb1f,d09015ffd3626ee725f2eadbf773a9370b32fe3eaeab2508d202db3286fd06b8,d0de11a19f2187f2e1ae68556dc4c87be3cae6bf40f56e69c17d0fb27ff756de,d0fe981dcd6f53504c1c0242612f49381fae58d61da0e99440acdeb41afd7dcd,d11210ba8e1d1a18b23ae2da8b110499b670a78c86c0b494b055bd66f0febed3,d1143cbacbe31a423c02a735912a04ce2bbf8aadc7321b73fb886140ecb4410b,d114b7bd207554386b22a1c5a9c55f45be587afbf9f3a124afc8aacb79079b01,d147167f1ec7c419a8123c34ba135748b9befa7f24a3199895ea18f635bb4349,d1676c688f37cb71743f005a792de89dd31b8c8e684b297874287c0740cfdab0,d195d92fcf6a944e507555ba9b4a0327ca19b27bd9d96b66365b4ad635e462ca,d1ac04dc499ca8dbf9b701dc0b8111aa5351fcc59552fdc8d969374a1d8e05c4,d1b5992f5203d79cc7d6b04fc8a7b41b674af2b0bc2321173ffd34e57cdb5ff7,d1ef3501ca6b0caf7bc341ac6d5cd743988fac039b0a294dadfc0772437ea99d,d1f87dad3f1331368ae38524cea9b79060b6fef5424a93a0cfc800187e10dc45,d1fe41e697207b31a04b133dfeea2218d8f0d2a350261b4e4b836dba077b4620,d2009a689950927d572973b375437bf5f2cfd8ab33b30fe310faa5b686c70de7,d206da7cb338f0864b65e4ad81ec8c7a2b252153373f14cdf0e94562c584683a,d261a2d902f47f523f594a990f6cc50fd5fa521817a731cc477f8ce1923f8a48,d281f99f01627e8aecce0e418356512054fec3f152c982cb963ecba44fd35f5d,d2996ea6e1278b5c18bbaebe59f02a66d5bcef4ae426dcb343ea3a3277388a91,d2bf60854abf62fc0f07c21c4e08830c39aedbf36e345c7da2000c57ff54f567,d2d0b3014c2128c0428404f2d6f5905c248325a82095bf01a9f9de29c4e49d59,d2d8da6abe84390e4e9aafdcf0377ee2bf577a9159bba99d13e17ed335cafef9,d2ef28044f84dd6a18c984ee0f639ad1f079fa1719dea6f46cb8c64ea70c939c,d2f8175ac9695ed5fea211be4702527178188fb6ce51edc4b2a6aa5ba9ad2cfc,d315aaeb3ec7cd0d7d813e88347e22687350cad346e03a5b8d9981acda0fe1dc,d31baaad53e7a183edcc1dd73c303820e4fbeb251a84804a2969ceef05a8e65f,d32e881432ee9c26fe2cb7ecc1f0fea7dc0b98b8ef71ddd8c4500a751b8101bc,d3506baea67554abe8e368561215e9a90fdea7e1dfd100dc45ab67aec5023a61,d35906fe16c69fded641bd91815e8b2eae21464ae3ce4ebca65aca9070114b95,d35e35d5e3e4a46a91c2e7823bb8f27363bbd4cdfeab0cb2bb52cf4dafa97223,d38e22c687b86fd6eaa83864afa50b1ebedc08e959def49803e0a08a40619707,d3dcdae3b0f6447884e94a5f0894ab180d0eee3a73e0cca85d227a9695650afa,d3e03b3ff5b6f64f8ad5e0bef659a1381e38aa9525fb1764f2192b51e90f43ad,d3e3561a78b39fd5dfe3bf87b3d0d0ffdae3d74a17e2ccb1f7d231705cc25c26,d3e649f6eaee2e0f729d4157267803791a3196868622bcd29e2ee433f4c909f3,d3f688fa14120e268083997b1b2ff495ed26657ad8c8bb69993b6132d9c2c95e,d414bac3a54e704efa0dbd15e4ece91305cea1a133ccef303d07ee7507259994,d41829860c35672cf8aadf7cfe609893d10b451bc5afedf0cc968c7237dac0b4,d4262cf90c4829702a5394c7407ec592ae851ca4a730d33be67760ee73673f24,d489440b2e04cdf8cff36ea6bbbc9635ca34aebd99a09e94a3a47c8d67ca764c,d4b7659981e9a9707b1c68bc41538a7f64a47b7245e2cc063c8c782148795ec8,d4f4a56ae2cdb020612823bb7eb84949b6ac8cdfd0ff0263a0399a891f38ab34,d4f9c02de1cea53aeacb2c18afaf13bff2e97709e3dd95611897703f511b54b8,d50ae9d9c0bb21a28bf855f5eb85a0dedbb4f051c58d6d4a68a0af96900a244b,d51acd5c8aa67bdf7579b3f5eaa0de33a3686b2d7e200009aa2fd3c801d163c6,d51c90e45f7a38f1aed1fe383214834a730549a611b48ba5af8d84ae9c692b4b,d51c91be5fba9aadeb2b52adfb086fb2333a8e1dda41f31ac3773a5ce842161d,d53bf376b610d3929a5829ee861566b601f51ac4aaa46288d1d17d87c452ae54,d54d974fd9052a3d03b17e814a4f748fb8d9b55ca7c9fb9d29689b7245848689,d577b59013348e5b244210fdd4ea263018fe47c0587a278a08bafe85334eb249,d5a131adb899c6129492cf231858fc51c5c2f74d454d7e927b899531314f2c03,d5c2f507a7ad5a7f4d1a53e71f76b0a859a098abd4490abcba3fac79246a2805,d6374bb674eb40e871ecd74472ca88994a17fcc2c346c8ec6830c3fa23762670,d63fb44d7971d5b4f415837f869784e4a462a929d5ce8ecb1d17ef345d441d9f,d66da266a38fada5b8bfdb6fa907e843e8d0b71bfa7c2ac75cc42c79b09de266,d680873217f8e9cd762cfa200e2b883c564ce88ced9187377d006869a405039a,d6ad5d0c72c64e4ebd607b019c1e8fdcc906aec7e08f00babee0b8ead7166849,d71b731733c9dcf04116be55a06f336274e9e7eaa4594bf4e13ff60275b13c12,d71dbb64d7e451903aa5b4e5bc3ec9a46fe765fbef5afe9822543c01b8057193,d78503bbeb63d63b37e7ee40cda69c09d7675509e286d1db7639f49abd5e795a,d7859a38bf8c546a054f2899a187a08879f621368644adcce889c81f2b2c990a,d795483579e5d69fb0c18da2910c26da4e8dd1e9624a11aa61d8c253de97f34f,d7a9dc375b37b12ef77991d9a9c56bfd4f0d7222b1f62e70f71acbcd11fc0129,d7e1bb7908a269340dbbc9084e682162897ecd9b278355f3d7f81dfd5e6070a7,d8279c99c538ef5cf3b489d13c387fe76a9acc236cfb31a8766dfcf2b76e1dc2,d831eb39ca398463b9f21d5c7ecc02b4a8c866954cd4d7a68e58c2e13c77584b,d83c2df138bd04271dfbbacba4b7740193a2f83da6c455697e774bfa97ae0a01,d8444e5a98ff5cfbdb05123a014d401c2055dab0cf7c147cad2e8772f6ae9589,d84f9cbe2272662982630ce1385794077174c1cadeee5c59c57199790ea2c51c,d85533283139b5be263af42977aece1195fc473ebf03dabe82179c98b1d71628,d88fa9d8eaee22395b2edc6dcf419456a19acc7d9e77f5c8e093a52d9a0fe910,d8a3948e0d1eaac9fecebc4f8498281a8ffeaab7a91a35cb5c05dd9d72624637,d8c20d046920603b45f47d2699a93366328f67d2555e2e3902efecf6381d2bb7,d8dfd5099d8afbb8e25e79740e586593a2d429ed9d728cfd668792add73f42a1,d8fd8783792622bfb74102d36fd31ac3358e8f3e9378e61db1f801e03c0da702,d973a7e9b9365870c663e8aad12415d5809417a8de11f7a646dcf7923f33e5e1,d9a3e297a98c41cf64fee5d0393b2ecc9a74e6848b8fcae1468b8cda6a781184,d9bb328350c006c885ec265707cf4fe755064ee04d0416b9556b6bcff37280d8,d9bd2d9baad21dba28b31357160715456956e33113feaaa4ad82b600bc72c989,d9cacdf6fe10dd444c4fbdf8e7c2321248c1b5e420a8be2059a2c631dbfa7095,d9d963932ebdcd09df6086eb1c0520664725f7bf7b4b76cabc250dc31f9ecd1c,d9dee5204206421d84c058026a72c95953a322965d6447fadd17ad3d7e27edf8,d9f2969b134ff5952f5b1c157530a7d0f75ff2f9b62269b48bbf16fe396f9ff2,da191dcdd20232c288d6785007c1c87e7bdd64bee80164a03d436a8e9e16ea57,da31470d5c3c1e30a9601cbca58e47c4497eac702c8abe23ab9871a668d61d4d,db0b9775ae28e20f4d87a5430d06e4c764484c37deb6fbec8c51deebdd4649d8,db316b2d116a0ec014b480cf568e6bce3f3fd46d4c01340a9a8e7d6cca4925dd,db3378aa3765c2039baaeec734b0626c7e7831b1eb3a758bf3a35d1108827349,db3426e878068d28d269b6c87172322ce5372b65756d0789001d34835f601c03,db60b4c795d10c0d87fa75e00bd6471aa419541d79773e64270c401c49c7f8f4,db8cce94b9b7cbd19b69feb25d476920cd84adf891deff9fb7e5ba8a45872095,dbc5c7b67734b1fcfabefbb081f9194fd0c3bb223d17bb27ba6c9891bdde15e2,dbc77a84eb03caef31b560797ede8a386db72632204f3baf0880046b394d5196,dc1edd28df1a445f8eed330101ce3042270635027d1b30d3fd26ddd52577438d,dc39c6c73764e770738556b5402a4d3296fc8e1f554aa5f776b96efdf420a410,dc403d9f67ea4e2d063d368c627cf1319f135e0e40b427d9f02fb20e131096f5,dc58f26f2fe3738df53c898bcdbb07c09ce22bf2ddf3b2dfa1d52d7f8b0ba5b6,dc5a3231c1e9a6394b7d1be1e90b4377d581dd2e55d850dadc9980437af428d4,dc8a5f6d75aa7a9ae52338175059f00b2941aae1e97768d88c4987a14c4ddfdb,dd0578e4527d788d2d944731576e160c774eb68cfb34475fc76d70b2679605e5,dd3a68be02a85453b5a21ecfd61289b116be67bf67d4625aa8d95cd0335df6f0,dd41f097708ddb60fe80d1c7f60e5e3e1a8152fe9700f42559363cb478dbcc8e,dd4457103b297aa1456c010bfecf9db6e68d093fc46e81f0876ee883040ca6fb,dd45f6b8ef2afa5a2541dcf0ccfbab5ed7c21db18a4a6836f57262d85d8bb0d9,dd5f368941b9cf47aa3ca1a9d1f4608ebefca9b4882713dfe0ccda0fc6607cae,dd64f566cfda836ed701b8b9d4c6f9f1af2618f709fc2aad0b152455cc173a6d,dd72ff5b158e455113476630cf8736bc323bc933407595cb41027491fdab1f70,ddaa0961c9a8c264ff96fe0e248267c60ca507a87c099817f860034c3cd1afeb,ddcb21bf12b52d9a5f189a0327b477cc0772661d39382bf3ea3ac7fa307dbcbc,dde0598ef749cc3e667fcab17dee433a61fa97a6144a738328e9b4474dc228f4,de5d9c1daec35bd8df310ca620ee5431cdc29e73abc4aed8987c6eb2d9e28390,de66a5ae9add8d6acd19c247441544fa4a23b829c37c684f6e9b2b40c89acf32,de78e145a590f58fb28a7e0ec6d7ba7b1447d4d22661d0de74741b9bb54f61e0,de8b027f9d4797a2ee114026e4f0fc0c3941b92abc42628dac7e9a596d560ae1,ded116dd57daf3bba8200ceb6e96a2c07176e111bccb5a695ede92f8e56181bd,df085eabc2ac35b325542300a8f30dc4230aa1d05ab816a295b9d63c21310230,df115db21f33a03de4897c4b0bb9ca023c483507a6a72ef5de9783fb118657f7,df2abbbc6fe767583f2e29b51b8bd0ad0664267234a985b2391aa2a08568cc30,df400615ce9240566cddb1020641876a39c536e682643ff4ef360e18995deedb,df46079e74a562b79f7f8aa8bf5e6b635957b87ab09ffd39934dc5d00b4e0f63,df4fdf279e14a4010e2d5d5ff38a5a5a164eacb11675a506050490ecee78d823,df60ac8b5f77a223d140298cafa07621e0e748f9b042111ec6c3dce88e512175,df6273ce9a7e160b328f0bc97769359b574e02784c66a57c39e9c888a527c75c,df89ae959fe54087b58e978de6246236da1129967e33ba071beac33a9cac08b4,dfb0b47753581242e72d203e0b800eb7cede0af6315dceb0295e018c17c089cb,dfbb672aeefba4d7c8dd27a0e4845049129f9ab4d8b0f700818a5f4cf8c956cb,dfd3b4e02e96b3b898ef8e5c6116b33acc3f3ad57a51090f2d3a7328b23c2550,dfdadae7f660dbbae7d6f0d7f636d76509e5676aefe84202da111fe4418e580c,dffa713e36723427af5494f00e9f94c406cd67775ebe5f21874d033cdabfb9d5,e0063be8c1ac3d2e6d0e65bbfe353bbcfc2a32de2f2ee84a8b9f2af9153e6f7e,e022d856a665eecf0287187ec68be0cde821650fdb3a86cc127d94d49d044bb0,e031c85f0155f4e1eeabda5d97f0550a367e7599e012e005894c68a1f0c1dd08,e07c35710c7166b3ea2e0d72e63a246900353fc067c273e59e5758f883afecd5,e08ba72108c2bbc9fe1fe9531a4f5b62aea1a34f8fdda2b6f028dd6a297741ed,e0e240f581c4b09754c71fef62d049849557ad11c01f4ce89cd17772b4101856,e129a817e95e6fd200531a9f9ac97deb475526e40ec03735ce1b2d50b0fb92a0,e13554948ca76f495cf3f21179931c130ddc52e6e60617aaa8a8207f1b68b415,e1d51e18e65840c560852764dff0d7b4eed5c91044970537ce09314f222a15f4,e273bb993e0e673af71033fa63d05ff99759c79076451755e5113be4673131af,e297e1ba227060c4af02c390320cc511345f3d19ad3198d48f832e1133f515aa,e298802eb13a8997ca364002d38dee38573be20ced5c099839f2ccf8515f7740,e29dff307fd0f74ca57801a620393098a2de4485e4ec76e53c865b9cdbc474ba,e2a6a9c9f09d2939dbf0aa0d16e565b05fdcc97425a8a337c85ef85704f355c9,e2aee1547465eb8611cdd7e10422ba2609978717210ddf3605efbdcc41cd29a1,e2c611dcd5bdeb418dff8c375506334ac7b817d390f75db2a1e0dcbb6bd0e6f8,e2c8ce0998b2b15704f237dadcc681caed3e5811a0e372b4ca7c01fd80a28247,e2e89a3868efffb32e0c12666b0615adde97014b2bab24961a50c17641b331f2,e2f3b0e1d77eaf7be56bc15b407b8f69098703b3ba0ed6660b151bd1815c2d57,e31574bce09227a1917e8f75029ba6095f9e910224ba35470407051f100c3b9d,e3272888627c13dc01e59683be536ba410daf42cc770dc2f6486346c1e170d4a,e3324763382d00c7d5cdcf998099d82ce9c42e7eda613ba553775a9d594346b6,e33f2023c64028569685fb9a26f4f9883861489f43bef2c9ce183c0891999906,e3673dadc813428a6176fb3fe679a36d3bc29f7988115fcfc98200b1ac68231d,e38903e02b46347815a7e40954257a561b7ec75734f30b9020254f5861dc85c3,e392baf9757b51259dfbd23f8dadb918fcdf3e672dbc6f3d20cab9ca61f07dff,e396fc377daa6141b57122eba1be7305c739541a025b1a3d4d36c25712bb86f7,e401b2970b9169613f2d50fc6486a03d4c0fa5030dd9137461b1cf2d74fde96a,e407c8ff918f7585eab8de09812e013743e96ac901d38dccc4e46abfbb363898,e40dddc486ec30eb4b3b409c04ae5a633cdad4aeec55532181c54060ca929fac,e437cfde54d8363a23aa3fe3b3a85a2f92931a913ceefe0c3c155f2f1dbd14ff,e44d41e68875461f7ef4cdf31778a397e9555328c8a1dbbbd5ef834ebde8dd9d,e45d3dba54c744506f5fc05187db36117c32846c1559cbdf478922b4bb3e9f0c,e48072a91ff07ae23c3daddf6f4af4de60f3dabfd1b9a1d5b718957d862b606d,e493ee00a82e8331d3fa4e07e567a8b5bfacd51a6d63fa4a70cb7a5ca62205d4,e4c3c04d113beece2cd6e01be252eda85c13319113d5c61a0215158260b27c3d,e5162f62fc93b0ed4e1cbaef9019201bc10fe8198b0b532b9965bdf22d9a2537,e523806f3d5f865c204b561bae6cda3dc2df2aab1151a8f1e7e115afca2ba887,e5479caabdb5ba66d4dcb0ff72ae60350457a26746e885d6f7eb0b0303aa818e,e576846f1c21be9dfc5733e1dcc12157a7509ab57e91fb01a77b5cabb326871d,e59739235e46b47da206642a9909afe79949004b03434af626069a8a00d12d4d,e5c9fca2d0a7c4a39ff25fdb203e4d8d18c57fac704799d53f6781276c81dd7b,e5d25255c3dfb8e4f2ee35a1d9f53d809ad838cabaa3cd0b8eb93ca1142fd5d0,e630d26b0fe485d20cb4e5b454f7222d647d81884bb7ccbea2c2316362df3dc0,e65711001f581ee102bcf0a08fe0d3c98e17ecce437c920acd53542c5000d168,e6c1bff0003382acc7601d6f67d897971ba4c67ed50adf7a93cd0a514ad14b5b,e6d77036335b1183592648fa923de52817347abd2f6652768adc03ef117442b4,e70b772231b94bd00147c8e57b212c8b2f312f9500ca11b5d596c72ec7f94a88,e73e9e0fe8b33f544349b5018c4661d751e1b7e0da889b8a04e418cef9db3510,e73edb2d2ec7fbcc7ab775a8d33db595047baecb0c3f1a552b2152bbad06e0b9,e74545c9f6ab1f49688e19f6f2da5c530aee400c3ff3a2bb1c9c850c8702cd4d,e773e2c836184a52fad6eb67fbfec0b6de6c2fb88395a74c81df775b4d76726a,e77e834504a1caf5c29b72a1c81d2d28923127fbccb4ca248570b83f82db56a3,e78a15ae2e7a2ed9f583c485905e1cca7202c7a2b5451a4789e6eb850e742477,e7bada485e24d8d2c0a21bf50682a84c716d36148965ea959c03d6c1331b05e1,e8207901bd5ac3ba4ed7cb78cc594249f93418456a0083c8fe2addd0d2b30611,e82c47c985b3a9332595c0784a01c71c33df532bf3504b168dc7c229b02e8c29,e8305d3ec2c211bab61b9c39d60e72c84eb44be6ffff9d84a8c5417053376d03,e869dc547d81bdc363b4264f046316e2d2e2456c755817b5e7e6a7d303b32d6c,e86d3e3e9fc888260ed2bb40a92a54bd1ba99266d7f73a741b76e58a53cd7470,e88b18d16582d14f4feb8fcd1bd81d67148662394662904acc3f402fb4435d7c,e88d97d06ba25caccc5f6ad6d8836e9f00e6a054ebec9a4cd5b56d92c82fe962,e8a3251cb62ee71597de19542198314afc788ceadfcaa2f3775710286c977173,e9491fe169e0efdf61f73c5a06b31c5a5264d13d4d91b82f18179f94ce78d29c,e9960dcb1605af2b7ea7b3e8181814f3ab8bd8e71b04c7b80b2f9793aba46603,e9f727ae34f044dea2b0cdc93036f39765dd7e5c387191d679c01d451e622573,e9fe6f82075454e2638ff268b6318136bd7a10ff80b4b6f42b0c7f08ff489604,ea17857585151a17795e8e3fa69d71f6f7aa16c5aba84f9ede2d8337a7d51e70,ea94dfe5668e538a3b4198f1a5c0e42be94025c6d97100ed711052830867692f,eaa349139d49bd7553691361f971d89981f35e0443af3f2638fdf9dda548cc1a,eac11c326f7ef2a1832427d54597a770c71b73b58503d4bb5560c22541cc46ca,eb076e2b6cbdac10dc1485a8476e20d0b639112e83935753d3145c7ac643b508,eb293bb4e82218ab14da0c4865451d99dcd45134ab40c12aace0ca6b3f135396,eb38a566226066bc1e215890cc1849b65ae40cbad257fa59d130c1483183f121,eb4caa2ab4df3192df7f79d59155bde0dd6b37f90dad74bdb2e346f00b23687a,eb545a08942ff5e648e6da234dcbe373797c9c04ed3e349197ff5dc1caa5c605,eb5cca4d45da548cc15e4cab6a78373b11ece99369dcb2edb3d3ebcde4b7c8d7,eb64efcd27ec76f477179bec893f58ac6132970ae31df6c9ba67e9781819efd0,eb802caad02f2a7636feb89fe59c1b165315d8c9a6cfc8f9835ba33cdcea92e9,ebb000aa14e529e1f3f98dae729d8aee332b48351d1aa0d539a9c29496ce031f,ebcc69c4e6552033e88ecd80eff49edb55e89c978f47bf47ff23c917e95687cd,ebed944fb9a76cfe72803d2e153c97c615145aa7ba9bad9f6fd975cba12c8a3b,ec661d66181f2f6b7d6a4991b0e9f32728b83a56d8731f66910d0b99eb0b7988,ece26b4a1d302eaa43f51e4bdc5155e6cd189b1cbe82590cd16cf14c8bfad041,ecf1fff9c501fcb714990ff59ee9709e1040da86334effd0564d3540a8e0402d,ecfd24ca6e88431c117e4a92ca9e056fe1ebfe661da6684e44142f561521b20a,ed1c08d4dc2763acf75d6ce6b2bdbe45b1a7c69caa6c7009bf0a028ded2500e6,ed3f4a22924d7e3aee0ea8fa481b6fce1e16514d3449f6de51a8c5272d1cfa13,ed54708d001eddbcb43f83600d6a4646a1bf862967a1fe3eaa39950f20c90f08,ed5657128ae095afd72cc72508226cb8c98b8d4f1fcdb177f57845c276fc1b5e,ed697e79317372699cc85270dbe5ca8be2172bdf47d642a17db3609bed690ba3,ed7328864edfbf02091f6354e340d7490b790d52789acd0f3cb3dec7b2727626,ed78d55e5777d1a1161369087e05073b7837c3fcb2174f60281b5bc528274cba,ed8e472863e46172d4a72a5416a585c643efe95cfd99a22431f9d1de1c5d224d,ed944d24ab49d199caa65a64ff5590c5415f2393a5dd97808eb01bb3563efff7,edc086d85d839c4bd2696c107847625a8d9fd61ede33341fd45621f7a5d12268,eddc3937daeaeac97eb60afb47315d9086e156cbd6bc19118afefeaf7420a42d,edfabda4778a71e4508d0ee72a5a8432e3e8b0d695947cacedc4dadda751f19e,ee1703ae534490606d6ec8245d977c994808c6f9c17179564a53016e1eda0f47,ee4da63492487e14ce011741fda05cbc1ca8a9360c873adfd66109889aa03b64,ee6c617517d33394b922563df8cb53a22c1d41c74de0d4c5178ae25896a8f00e,ef373c9c768ff0fdfa463d7c8490c1f8c61eee7a2d3c103aeb740a516dccb472,ef5e4327606e624cddb8ed101d31dcaeb1ef6321abfaa418f50157a93b3dd306,ef5ec5b37f4e54dc6378f8e0e7eaf1ef2e96683c20f3fac260da2da283012b0c,efaa55588f8efdff13126a55657da5f4f5e979ca23d4a6fc6298af07e2826e70,efaf87dac00fbee21129b1e2be70f539ab561812202dda7e8e5ae17e3af00954,efba0e6237199999a352876d92bce1f447acc0f852eda63ecb237b4949135340,f01bf893c4cd75adfcb6b529b6490b8135c708bad062360e6d36b5bad64d05c5,f0495ae51b75aad979214ed8b755bc929e2f76e7bea132cb7560b8e392459ca1,f09d84f4c1902dbd675c232cd5273e84b09e2a5adcc796ef25dc45b85e5902bd,f0a4fa53e36f4dc0cfa8da16861cd52d9735b205bd903a9e2c50f994d9325968,f0e561fdce37aefea4c4535c3cdd662c72b886fe19723483f1d305b327d0aea1,f100c53820cbd6f93d467083457e4749476cbc54b7581f6cd3af73e72a309f74,f13a278b4b81cdbc1e2788e900724437c6da8b739fff7d9f1e695d8793b63ac8,f18b8b66725f9779586d1b2a387d5590e11f30657ce1bebb2a5d99b806e3a1c6,f198c1610ce89de8e6804c55f29a1e24b5324066bdfcd579d341b45602b8a248,f1f32a8c61f4207f5b20351b4352c30824e350560501a79fa0b4741de5e075e6,f2475fb55a06aeb21479de6f9b127b4fd05a779b4008edff74cea0c59fd13f72,f270f1f52077d10f0df4934d30ff5cca9b43e634159be57cedfed0688a192d9a,f297ada54a599806bd23115dfe7d37a7faed487f813d875a59cb7f3dc6298b62,f2bef9801b94f1f96a3d7b743dc2db19e8455de02541adbd79e81d20441a6895,f2c723c6495d835f87667e6866f2121daff0c03763418fada33aa09e5ca77464,f32594a378dd93d6afa64470c5d1b768dc0318f20ea2cd48e4520a9f8e429b09,f3a8a902215d7284330e7ddf73fabf51af0f42690f49c013a5249d02da376824,f3b552fc19062a7e7185fd0058978cb49e155dc1fa985d258a47bb51687d2c74,f3b59798cd9379525a8d68aee90b011268ec54f31c2fdb866fd197a5bb2ae13e,f42639763d5e2334dea1bdada2fd9a94e81a8593fe4d461d8dcf4cce84492ddc,f42ce1fa3252bd19a2dd41584404f6afa1621d37bec805c87afb7b6c94b64dad,f43f94880b2034854bb53f4fcb865e7d85e70a3b0c422fa3f8e15f153a01449b,f4597a08f3ab0dbfd7410fe6c735e835e827548bfe6ac83b71271c018435f3a2,f4b447db70fbead0e7a3084c64c35cd9f16fbf22c412da86999e6e394ec3d839,f4d1343b1acef53df92f0be07f52398d1fdef6b5a1c02e06d0ecf603f7f33d13,f4ef3967c4de638337697a731c33b0266d5df61a50f8deb6db8679a13716d8cb,f4f5597458cfb682ad8940cccd03c22646b800298e8e1bb2768191c55346d3fe,f50274804adee4f159360937c2b6805411fe4649e651c22e034995a95dac8604,f55634e4e672d8cff9748e1cba6582d39d23b88ca5ec48aae779cb99ba252ec0,f55f96e725a1ab89d188b73f1ce87eee6dc542bc0fc5a8299067201d1d10d347,f5b0e0d1ad70b37024796c1c55c8f2b855339a419b5552ec0f24c1b54d8d5e2e,f5b335b61b9c1217d0a1c6c6df6db3ab242973023f68ff386b2f12005d66e1cb,f5b3a4d630392ddfcfeeb99afa6d285701b6514d51ae43e2c9157106432f9355,f5d31a503859d98b12701eb57437a073e652903104ddc54476c654fe6f1f8a97,f5dcbaec31e0497cfb0b00da5b6ddb1a4f418ced827d18b8e2122d583281a789,f614412b1a42fe551f2385e4b377a23d29a91d1d174d8041dc05178d658c1d04,f61dabb2dfbca358e6b8e4a5d46081daf586d348c16cfda382ca0e27ed4ae6e6,f65f366c8fb6b54738bd97992fcf1e9d830c1551f6932de1887dd47c021e64cb,f687805e6a5b12ec1108000a05a8ce09295dba7497f1b80fa5c5cf0aeb029a98,f688a4b084e6a58faae3a006c1a8b87b8e60c4692afe3a590e63ee31a0c5fdf6,f68ec3bceebb9878ff23de675d533dfc56b472ed8d0f07a99869f4ab68584b93,f69f9968e07d99eb083f37ff977b158397d567d6d473604ee70f42de90a4a953,f6b41465345be457c7b69b26b1d378bf404ec33d67a4a863d9314ded1364d121,f6ce9ca521b35bd6be4d340dd5c0814b82b6698a3c036da1a43253c5b24ff221,f70edbec5f86405a86836793973081787310c63eb1c80749a074ee05411050b3,f72c1c6a647052f1568288ec69c06aabad050cce31a2a94797ab711ba0a35c15,f757df0a289a23205302c348513ca32fcc480c77189b0f22ac1fb9921d22e84e,f7640fdbc76261f7a20f444a362aeb3eca4a29fdb26ae470be21a4443b90774d,f77e9aff98969a76c133f85df1366958a6a1522d3d9bd41f2c18ccb1ea9d8331,f793b5d9297e70ca2a2f97d7b5180e7efbeef3b06914a6fa1566ffbe86973576,f7955b653fd5054292445310cef5fdc71eeafa3fc5b07361d6fb2d9ab8c071ac,f797f1ad70dcfee2890823086f5a1d8a1bc62a71a5c32067b756ddb43a1fac9d,f822ee9e19ebf24d8ca6094338efa273c9912e3711c1f6bf609e5dc5298f4a0e,f8292bb2bdaeaf59f96f9b7ade29307e51f620527319b2ad43aad5555064cbe6,f830a9977fb65a53c9c2d89f648ca637f60c43e6677c1b6d827a26d0c0351925,f832f507fbdfaa2aa852cca5dbe86da523a4113556354e991813fa665a36909d,f86a64e6a84d2add3ab81ba9835670c67c3e87617257de2e962ad23c62c931ac,f878004fc7c4aeced1bae5c4811ff865dd3a2714c69f3567b9fb33d9d0c2ebc3,f88345811213ffc2595710e3e40a9b911f2f8f3be5636b1399404774ef85c3dd,f895293cc1a5513142a199e923a2ad63f22b6e2d3dd75be138dcbeb79c2f4b96,f89c0712c609cb8e0d652eab44ae9c9ac5dfb148fa81289af837d44c5310f2d8,f8b5c7c8330bf1b34158c8972c0b839288e047de5e759bff991fa1a5e22307a4,f8fb116336670e16768a37af4f38c75b6f9e14e84e25bba412967d1ae047924b,f92c02cf34c98cfeab53cb4d940cb79f6fd20d2f27e27ea36fee3e03a0894aac,f93ea89012714d0093edf8c09f1435d4265c4776c901b3f8f0f915261da5c19c,f94a8359fe9fda466a37a9ca364ff250121f92d3e4887d1a4a0b13306b74009c,f96ea5dff85b796777b5881ffb91cfe563e136b3d34614f2ca2698a43a941d8d,f99d79bd3583142d0dda2ecf01764a38fb5ad36b09c25a5452f7e818e8634523,f9c10db42d6598472ada8633317b9f800d032d99ffb10fee0dcefa4d8b5cb757,f9ce446d0743287282faf64b230cf7f7170a921049e6b1569cc1be79b1f988dc,f9d6fc8e3b0c2bf57f20b285826595872f3100c104cb568c0b49d122ff3a7a71,f9d9245d539d565fe6c0e90d431246f3998c7e9863c84ecbcd95ae107bdb7ff2,f9dd02fa4e1389fa8150faa61bc86079b77036ca1dca54bda4659fe0c06ede7e,fad3085879c58c5ee10f0fba5eaa3a1a714b02e01aaac3e8563b010e9dc00be3,fae452ec5a6267679d975e9ca2846996ab8b9ea35dec999d8bd65571261c1d15,fae925ce4f83e30e6bd140afdaaf83fd82a03d4beffe072f63376d9ed3bd4e94,fb2c53562ec70bd628316de68e4e2879cc39da7dc1b2a3b0a936314715032ebe,fb480abf85f2f92d3c48ca589059cd799415eca91d9f20be60fa6dbaf1f33c3a,fb650c95a8ec3cc34eb52e41e51ee5d66063d71010a4381ec59fb5316b907985,fb6c36e772e6fa114b2d7a468ad9cddebd4521d00724bf94f4eae8acba272a7d,fbbca84c06eb2ae4df3ee692f6b6640a9892e78cd76bf409ab24e3e3e5fad55d,fbc8ec59d38333e05ab8615ae58cbd7f6988dc409531a1db1b5b2b69146efa85,fbeee85a6c04f1d9626de1408aba353df0f3e562b2b66db1e75f0e51e8fb6a92,fbf9257251eeb1b907dd266c73243b589ca47cfe1721d88bf346c3d337e32e78,fbfe2a65dfd1f350a1deaba6d8f26c383d4e130e5465ae80d848906e958c5d90,fc3de5a4c667872b82feeaf1a25042959b7693d2798e3af231500e8491c0f64d,fc44b7aa60826c1270d07b1dc0fb50b376716ab2fead4c49cedbf77319d4fead,fcaf36f4866556b7925441657c0e6764298869ebc5ecc3d02860e55e30dda8b4,fcd722cac33683603531a29273976522ac2222ea244163f355c96c2ab1dac1c5,fcd7b899d9cc610ff8fe585d6fb7429f1475209c3d49c00cc598648a9d6c0f34,fcd9af6871eb901f3c79af95769b96a37c97db028b5f3ad1168bad93f58d15a4,fce68e0aeadee68e0b1f479ad2af0ab1566969170e4598d2b63123b203af8a28,fd0125994287223897f5c75e56977fc428346b0fc8bb4b56dfe35f3524f6e3d9,fd03078cf7690e920840e038ebcc921f85f27cd4c73ed101f1f4f80a7d7e4bf7,fd213e7dd3791c71553262de2a79f9cdd331c19bc840fdb68946dae2e31ce4e0,fd5c48cf58ce42c312c19de66cd623015c444b6ba3a61b7bd3f7a363d906a312,fd643264270fa16b23fcb8c3e6ef40c9869d60f157ee6d5f834fd837927e62cf,fd74a14d17fb0cd9b394321d22919d60bed244e8340dd6a3a9b30ca14abdf44a,fdccb3496d32e0a1d46231be777c8b39834ea976ed36e3d009234926b5e58bed,fe16cf6b3d09b4b631e26f65e425a5beb918894795cd9f90ffc5fe022acb0381,fe2aaf587e611ed32e25e16e3b85adeda3edc2b5c92a19e2b08e5cf34c933f72,fe36f95f16e574a270ad5e004f25247a88be6137b4102e96ac8b8837d31148c1,fe41e17c351131a0b467cc9ac30afef087d9e301be6f42be0ec5eeaee1c2581b,fe44b5d0d0df37e2ab930119c63b252dae796ba2f43e9840ca33100a7e808369,fea44ccf0b815bb636832d064f95a464c295d4abe8f8b6def487bae1a012ec30,feee095e6f9371bc5cbddd4483eb537af798be2089084a99de955f3d5932dd4d,ff82cb475e62aae409dbee5170a7701d6a7610c2c26086b69e9332e2508941dd,ff835914cf93956e5bcefe9fc7c633dd0b21a86753cfdef2118e4436d504fada,ff850297120c3e7719229114edb8af5ed579c0d4eb5af0c85e1f82c5e9eebf66,ff9c7408ab5085ab71c299f76e9dac508048ae0084a8ec1d34410bd7e3748da8,ffb346fb06cd40aa39eb67b185cdad829bac528d977f62fef3c4fc82d3344585,ffd2a16bf4500f3d0336074a00d3a88d14c7d1f0b531a017880686fcfea5b18f,ffd9fcf137385ffb26ad6d6333366ef72e42c68809201f8d70a20706648eb60f,ffdc8ff12bee87f41343db6c1a5d59445eb002240da562018a92dc8a7fec1537]",
                    "[0157a781f89c3a6f2d5ab2a7b5bbf69da431cac6474b7d0b77ea1407b8ff82e9,020587679d5a239cf0efe3adf7ceef928dc6bc914e67e5eeea981281442de831,33fae4f66af3319557469fc5396cfca5afbdb5c95b3d531327424f091128f8e8,36f2f09b7ee51f7132c18aca77c9b99c93e0182ed63a160630da5a6501ea3a7d,404244b7d28ebd65534598767fb83b715c38291776257437e45f944d8e815409,4d59008c75d7bddbdbd4067bb2e088cc5ceb0628f80a50e3e9ee33b960a224c4,4eca5a0e7e65289e158e68bc823f01a92ccf43d36a17df2dbe2331da39c72aa7,55a7d6c0c5e327a6d6493ac6f386faee62d9e788faa642e8fea5eeaae3614817,708ca7839cc53a07d2f8efb9143a7f2943711fe16896fa8d0ab5a030b480a9fa,773a6857f4b2920417b8cf7c0728c0d762687f1bacc15aa8b2f7fb7afdc2138f,7d9ceffe2cb1708ea11fa12dd460cc4c8bebed398eaeb8defdd333775e118f14,7f9425bcf5eaff0df0eec37f85dc599b21f61c0f1e9af81ebae23a913d96b57b,8338b4dfccbe79ef7dfbc8fc598231f96da85ca17c10483966f38c9818b152cf,873828a3c72972ed8c0ae1ce2a9d9a1802d38f86fd210475258865b23d8a20c5,8b574a9e7ba22c51c1cbb43e20134292b0c8dfab7eeba56a7f574a3e45df4f03,90874f04baec77e670e25ca7256bcb0b1c71a67b60e7f4fe74f8a4ec378bc0cc,90ae17a847f6a0f0118170f35ac2fa635c40ee9e8a7e09262e9f831a42c6421d,9d016d5fe7aa4bce12dcfd366b705ee8297fb34aaa4b5e6b33eb3172fa4f9782,a98982d0ddfd97bd0036cf036378a50adedb4f55cc680132d6e3b52c97d220b4,aea6a025b64fd06965f8e5d84a445ea55c694f62e050db46633f3c45357a2c58,af0a7d5177798b6b0f7589a1d9b9a43189c86b523fa0de2978d3f0aa0158414c,b6a38fb8dac7a2cbc66748eab0daf1a1aeae67b04f64a0256ef3ad19149ce061,bcf7702395867a83a451fa84b9ce6a54e8d2689e231dff15770d7077d37d6b77,c03798b84575d392cb6786d80a4c4b5dcad8efbda2294dc9cc7803992680d496,c26e1b034a0992984f15409635d85fbb5dc00061dd57841aaa693e0810033966,c516a4d3c5d087af8fc3684fe43931fae611c0ba62aa6bcc123c5f20ed34ac61,d15c2d7784c88d026681958a11511c82886d18f7e2bbf3d3e7d8107cac083550,d2642e841eab544cdf2e91b26349df3a69b2730cf2dd1a394d92f212244556e6,d6567ff63d89c86317450646ef83cfbdfc97508752df9733996142167edaeae2,de314484152e18301bb040accbf475ddf429e16c5759c3a075dd20ce598dad5f,de3bcededbe97e8d8cb1493857a5da852f1365a52968c02f796fe44538390f53,e515ceb3fea7d3cd1caf5099a9a489d935795f6244617e085c1e37dea04747fc,eaae2ac32c7d15bc341f10ed04bb300c90fd96d2d1369892b38d2f5bc9eda65a]"
                  ],
                  "type": "string"
                },
                "full_snapshot": {
                  "custom_type": "bool",
                  "examples": [
                    true
                  ],
                  "type": "boolean"
                },
                "size": {
                  "custom_type": "int32",
                  "examples": [
                    0,
                    5,
                    3702,
                    850903,
                    220719099
                  ],
                  "excludeMaximum": 1090122301,
                  "minimum": 0,
                  "type": "number"
                },
                "update": {
                  "custom_type": "object",
                  "examples": [
                    {
                      "method": "merge",
                      "time": 1751258272.281009
                    },
                    {
                      "method": "periodic",
                      "time": 1743697733.0
                    },
                    {
                      "method": "periodic",
                      "time": 1746713152.0
                    },
                    {
                      "method": "periodic",
                      "time": 1749156937.0
                    },
                    {
                      "method": "periodic",
                      "time": 1751443874.0
                    }
                  ],
                  "properties": {
                    "method": {
                      "custom_type": "string",
                      "examples": [
                        "merge",
                        "periodic"
                      ],
                      "type": "string"
                    },
                    "time": {
                      "custom_type": "float64",
                      "examples": [
                        1743697733.0,
                        1749266797.0,
                        1749269206.055041,
                        1750959768.286105,
                        1751463309.0
                      ],
                      "type": "number"
                    }
                  },
                  "required": [
                    "method",
                    "time"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "size"
              ],
              "type": "object"
            },
            "findings": {
              "custom_type": "object",
              "examples": [
                {
                  "memo": "independent_events"
                },
                {
                  "memo": "independent_events"
                },
                {
                  "memo": "independent_events"
                },
                {
                  "memo": "independent_events"
                },
                {
                  "memo": "KFC-crazy-Thursday-VME50"
                }
              ],
              "properties": {
                "memo": {
                  "custom_type": "string",
                  "examples": [
                    "independent_events",
                    "independent_events",
                    "independent_events",
                    "independent_events",
                    "KFC-crazy-Thursday-VME50"
                  ],
                  "type": "string"
                }
              },
              "required": [
                "memo"
              ],
              "type": "object"
            },
            "instance": {
              "custom_type": "object",
              "examples": [
                {
                  "id": "primefuzz-28628edf-d6bd-4bd9-908a-570ece7579a5"
                },
                {
                  "id": "primefuzz-39410b79-413f-4c35-a6ac-2642662dc9ec"
                },
                {
                  "id": "primefuzz-966a7f36-373b-43c9-82e0-d36683e768c4"
                },
                {
                  "id": "primefuzz-adfa0dc8-0762-47de-afab-336bf5ccf816"
                },
                {
                  "id": "primefuzz-b251e147-cf15-4f50-b677-522544cf6309"
                }
              ],
              "properties": {
                "id": {
                  "custom_type": "string",
                  "examples": [
                    "primefuzz-28628edf-d6bd-4bd9-908a-570ece7579a5",
                    "primefuzz-39410b79-413f-4c35-a6ac-2642662dc9ec",
                    "primefuzz-966a7f36-373b-43c9-82e0-d36683e768c4",
                    "primefuzz-adfa0dc8-0762-47de-afab-336bf5ccf816",
                    "primefuzz-b251e147-cf15-4f50-b677-522544cf6309"
                  ],
                  "type": "string"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            }
          },
          "required": [],
          "type": "object"
        },
        "fuzzTooling": {
          "custom_type": "object",
          "examples": [
            {
              "url": "https://maintainerinterfacesstg.blob.core.windows.net/sources/8ec98e4efece75bc3116b80f61852d455b31141dad1747cd7676b7d21ac746ae?se=2025-06-10T18%3A08%3A57Z&sig=C1uZfQEMDaDHrxXmIpHjTKSNZ927NTVKXdop0X3b4sc%3D&sp=r&sr=b&sv=2025-01-05"
            },
            {
              "url": "https://maintainerinterfaces.blob.core.windows.net/sources/8c7379a463438d5f1c4c9f08cd0e2b1e34a7ac93c92b039a91d9fe401afd61cf?se=2025-06-11T06%3A41%3A19Z&sig=ibmoI4mD%2FsmERuz7bs5JFkG6J4s%2BLuwwjeteIR2ACdg%3D&sp=r&sr=b&sv=2025-01-05"
            },
            {
              "url": "https://maintainerinterfaces.blob.core.windows.net/sources/47793e33fec5f4926edf3dd25817f768d68793c4772c80310357cdcacc59ec5c?se=2025-06-11T01%3A56%3A24Z&sig=hk5L5TV0WZ%2FPF9puOprU1hmRxFB9vCXwTmZgZZ9hbM8%3D&sp=r&sr=b&sv=2025-01-05"
            },
            {
              "url": "https://maintainerinterfaces.blob.core.windows.net/sources/e76c584cb0e54cfe2196b91a92909c47b53d469a15f44886d120ee4e03df184a?se=2025-07-01T04%3A16%3A43Z&sig=otBRSoH%2FdfOCyqqaKxrfxZQbkNF97iq9drJwL8GxE3M%3D&sp=r&sr=b&sv=2025-01-05"
            },
            {
              "url": "https://maintainerinterfacesstg.blob.core.windows.net/sources/7cbc78564fb07d0ca99ecff42544f9c2cd85df9d20520b4f335aa240eaee3b2f?se=2025-06-30T20%3A37%3A34Z&sig=fwiUEXqOpsb6mT2wHK5W1%2BM6JM%2Bn6H97deiMlzO7Bes%3D&sp=r&sr=b&sv=2025-01-05"
            }
          ],
          "properties": {
            "url": {
              "custom_type": "string",
              "examples": [
                "https://maintainerinterfacesstg.blob.core.windows.net/sources/8ec98e4efece75bc3116b80f61852d455b31141dad1747cd7676b7d21ac746ae?se=2025-06-10T18%3A08%3A57Z&sig=C1uZfQEMDaDHrxXmIpHjTKSNZ927NTVKXdop0X3b4sc%3D&sp=r&sr=b&sv=2025-01-05",
                "https://maintainerinterfaces.blob.core.windows.net/sources/8c7379a463438d5f1c4c9f08cd0e2b1e34a7ac93c92b039a91d9fe401afd61cf?se=2025-06-11T06%3A41%3A19Z&sig=ibmoI4mD%2FsmERuz7bs5JFkG6J4s%2BLuwwjeteIR2ACdg%3D&sp=r&sr=b&sv=2025-01-05",
                "https://maintainerinterfaces.blob.core.windows.net/sources/47793e33fec5f4926edf3dd25817f768d68793c4772c80310357cdcacc59ec5c?se=2025-06-11T01%3A56%3A24Z&sig=hk5L5TV0WZ%2FPF9puOprU1hmRxFB9vCXwTmZgZZ9hbM8%3D&sp=r&sr=b&sv=2025-01-05",
                "https://maintainerinterfaces.blob.core.windows.net/sources/e76c584cb0e54cfe2196b91a92909c47b53d469a15f44886d120ee4e03df184a?se=2025-07-01T04%3A16%3A43Z&sig=otBRSoH%2FdfOCyqqaKxrfxZQbkNF97iq9drJwL8GxE3M%3D&sp=r&sr=b&sv=2025-01-05",
                "https://maintainerinterfacesstg.blob.core.windows.net/sources/7cbc78564fb07d0ca99ecff42544f9c2cd85df9d20520b4f335aa240eaee3b2f?se=2025-06-30T20%3A37%3A34Z&sig=fwiUEXqOpsb6mT2wHK5W1%2BM6JM%2Bn6H97deiMlzO7Bes%3D&sp=r&sr=b&sv=2025-01-05"
              ],
              "type": "string"
            }
          },
          "required": [
            "url"
          ],
          "type": "object"
        },
        "fuzzer": {
          "custom_type": "object",
          "examples": [
            {
              "afl": {
                "afl_banner": "/tmp/b3fuzz/afl/0197ae62-564a-7c5a-8929-28d27cc08a7e/json_fuzz/undefined/json_fuzz",
                "afl_version": "++4.10a",
                "auto_dict_entries": "0",
                "bitmap_cvg": "3.67%",
                "command_line": "afl-fuzz -i /tmp/b3fuzz/afl/0197ae62-564a-7c5a-8929-28d27cc08a7e/json_fuzz/seeds -o /tmp/b3fuzz/afl/0197ae62-564a-7c5a-8929-28d27cc08a7e/json_fuzz/undefined/output -S slave_2 -t 5000+ -x /tmp/merged_dict_4063563338.dict -- /tmp/b3fuzz/afl/0197ae62-564a-7c5a-8929-28d27cc08a7e/json_fuzz/undefined/json_fuzz",
                "corpus_count": "2691",
                "corpus_favored": "78",
                "corpus_found": "83",
                "corpus_imported": "43",
                "corpus_variable": "0",
                "cpu_affinity": "24",
                "cur_item": "1891",
                "cycles_done": "11",
                "cycles_wo_finds": "1",
                "edges_found": "286",
                "exec_timeout": "26866",
                "execs_done": "23353999",
                "execs_per_sec": "28945.31",
                "execs_ps_last_min": "26863.94",
                "execs_since_crash": "23353999",
                "fuzzer_pid": "1341092",
                "havoc_expansion": "5",
                "last_crash": "0",
                "last_find": "1750987192",
                "last_hang": "0",
                "last_update": "1750987326",
                "max_depth": "3",
                "peak_rss_mb": "17",
                "pending_favs": "0",
                "pending_total": "224",
                "run_time": "806",
                "saved_crashes": "0",
                "saved_hangs": "0",
                "slowest_exec_ms": "0",
                "stability": "100.00%",
                "start_time": "1750986520",
                "target_mode": "persistent shmem_testcase deferred",
                "testcache_count": "2336",
                "testcache_evict": "1771013",
                "testcache_size": "45515283",
                "time_wo_finds": "263",
                "total_edges": "7801",
                "var_byte_count": "0"
              }
            },
            {
              "path": "/crs-workdir/01974189-3a80-71b2-8e99-c886e5be1963-20250605-192003/fuzz-tooling/build/out/dropbear-undefined/fuzzer-client"
            },
            {
              "path": "/crs-workdir/0197ad06-074f-7306-b44a-f9fafceeea1f-20250626-161546/patch_workspace/fuzz-tooling/build/out/apache-commons-compress-address/ArchiverDumpFuzzer"
            },
            {
              "path": "/crs-workdir/0197c7ba-1b72-7e04-81de-ad091d44ac9c-20250701-204239/fuzz-tooling/build/out/ndpi-address/fuzz_ndpi_reader_pl7m_only_subclassification"
            },
            {
              "path": "/crs-workdir/26626b4e-9511-418a-8a19-6f322e673230-20250606-234823/fuzz-tooling/build/out/sqlite3-address/customfuzz3"
            }
          ],
          "properties": {
            "afl": {
              "custom_type": "object",
              "examples": [
                {
                  "afl_banner": "/tmp/b3fuzz/afl/0197bfbb-d350-7f91-99a7-eb419165fc6f/handler_zbee_zdp/address/handler_zbee_zdp",
                  "afl_version": "++4.10a",
                  "auto_dict_entries": "0",
                  "bitmap_cvg": "0.08%",
                  "command_line": "afl-fuzz -i /tmp/b3fuzz/afl/0197bfbb-d350-7f91-99a7-eb419165fc6f/handler_zbee_zdp/seeds -o /tmp/b3fuzz/afl/0197bfbb-d350-7f91-99a7-eb419165fc6f/handler_zbee_zdp/address/output -S slave_22 -t 5000+ -x /tmp/merged_dict_817524997.dict -- /tmp/b3fuzz/afl/0197bfbb-d350-7f91-99a7-eb419165fc6f/handler_zbee_zdp/address/handler_zbee_zdp",
                  "corpus_count": "339",
                  "corpus_favored": "6",
                  "corpus_found": "4",
                  "corpus_imported": "0",
                  "corpus_variable": "0",
                  "cpu_affinity": "22",
                  "cur_item": "338",
                  "cycles_done": "7",
                  "cycles_wo_finds": "6",
                  "edges_found": "339",
                  "exec_timeout": "2603",
                  "execs_done": "308166",
                  "execs_per_sec": "381.75",
                  "execs_ps_last_min": "369.78",
                  "execs_since_crash": "307021",
                  "fuzzer_pid": "2279036",
                  "havoc_expansion": "5",
                  "last_crash": "1751277206",
                  "last_find": "1751277215",
                  "last_hang": "0",
                  "last_update": "1751278012",
                  "max_depth": "3",
                  "peak_rss_mb": "318",
                  "pending_favs": "0",
                  "pending_total": "0",
                  "run_time": "807",
                  "saved_crashes": "4",
                  "saved_hangs": "0",
                  "slowest_exec_ms": "0",
                  "stability": "100.00%",
                  "start_time": "1751277205",
                  "target_mode": "persistent shmem_testcase deferred",
                  "testcache_count": "339",
                  "testcache_evict": "0",
                  "testcache_size": "2954451",
                  "time_wo_finds": "797",
                  "total_edges": "422425",
                  "var_byte_count": "0"
                },
                {
                  "afl_banner": "/tmp/b3fuzz/afl/0197b76b-009a-7cb0-98cf-f3aa0c6f7c97/curl_fuzzer_dict/address/curl_fuzzer_dict",
                  "afl_version": "++4.10a",
                  "auto_dict_entries": "0",
                  "bitmap_cvg": "9.97%",
                  "command_line": "afl-fuzz -i /tmp/b3fuzz/afl/0197b76b-009a-7cb0-98cf-f3aa0c6f7c97/curl_fuzzer_dict/seeds -o /tmp/b3fuzz/afl/0197b76b-009a-7cb0-98cf-f3aa0c6f7c97/curl_fuzzer_dict/address/output -S slave_2 -t 5000+ -x /tmp/merged_dict_2844995215.dict -- /tmp/b3fuzz/afl/0197b76b-009a-7cb0-98cf-f3aa0c6f7c97/curl_fuzzer_dict/address/curl_fuzzer_dict",
                  "corpus_count": "608",
                  "corpus_favored": "191",
                  "corpus_found": "121",
                  "corpus_imported": "16",
                  "corpus_variable": "20",
                  "cpu_affinity": "1",
                  "cur_item": "452",
                  "cycles_done": "12",
                  "cycles_wo_finds": "0",
                  "edges_found": "2864",
                  "exec_timeout": "94595",
                  "execs_done": "3421051",
                  "execs_per_sec": "4356.31",
                  "execs_ps_last_min": "5999.72",
                  "execs_since_crash": "3421051",
                  "fuzzer_pid": "3267242",
                  "havoc_expansion": "0",
                  "last_crash": "0",
                  "last_find": "1751132780",
                  "last_hang": "1751132189",
                  "last_update": "1751132783",
                  "max_depth": "6",
                  "peak_rss_mb": "83",
                  "pending_favs": "0",
                  "pending_total": "245",
                  "run_time": "785",
                  "saved_crashes": "0",
                  "saved_hangs": "2",
                  "slowest_exec_ms": "0",
                  "stability": "98.95%",
                  "start_time": "1751131998",
                  "target_mode": "persistent shmem_testcase deferred",
                  "testcache_count": "608",
                  "testcache_evict": "0",
                  "testcache_size": "20623032",
                  "time_wo_finds": "195",
                  "total_edges": "28716",
                  "var_byte_count": "30"
                },
                {
                  "afl_banner": "/tmp/b3fuzz/afl/0197b76b-009a-7cb0-98cf-f3aa0c6f7c97/curl_fuzzer/address/curl_fuzzer",
                  "afl_version": "++4.10a",
                  "auto_dict_entries": "0",
                  "bitmap_cvg": "25.76%",
                  "command_line": "afl-fuzz -i /tmp/b3fuzz/afl/0197b76b-009a-7cb0-98cf-f3aa0c6f7c97/curl_fuzzer/seeds -o /tmp/b3fuzz/afl/0197b76b-009a-7cb0-98cf-f3aa0c6f7c97/curl_fuzzer/address/output -S slave_15 -t 5000+ -x /tmp/merged_dict_1541745393.dict -- /tmp/b3fuzz/afl/0197b76b-009a-7cb0-98cf-f3aa0c6f7c97/curl_fuzzer/address/curl_fuzzer",
                  "corpus_count": "8270",
                  "corpus_favored": "438",
                  "corpus_found": "0",
                  "corpus_imported": "0",
                  "corpus_variable": "98",
                  "cpu_affinity": "14",
                  "cur_item": "0",
                  "cycles_done": "0",
                  "cycles_wo_finds": "0",
                  "edges_found": "7398",
                  "exec_timeout": "1210017",
                  "execs_done": "11159",
                  "execs_per_sec": "11159000.00",
                  "execs_ps_last_min": "0.00",
                  "execs_since_crash": "11159",
                  "fuzzer_pid": "3374771",
                  "havoc_expansion": "0",
                  "last_crash": "0",
                  "last_find": "0",
                  "last_hang": "0",
                  "last_update": "1751144840",
                  "max_depth": "1",
                  "peak_rss_mb": "53",
                  "pending_favs": "438",
                  "pending_total": "8270",
                  "run_time": "0",
                  "saved_crashes": "0",
                  "saved_hangs": "0",
                  "slowest_exec_ms": "0",
                  "stability": "99.39%",
                  "start_time": "1751144840",
                  "target_mode": "persistent shmem_testcase deferred",
                  "testcache_count": "0",
                  "testcache_evict": "0",
                  "testcache_size": "0",
                  "time_wo_finds": "0",
                  "total_edges": "28716",
                  "var_byte_count": "45"
                },
                {
                  "afl_banner": "/tmp/b3fuzz/afl/0197bd13-4679-7fe7-80c3-ea0ba1d891d6/dtlsserver/address/dtlsserver",
                  "afl_version": "++4.10a",
                  "auto_dict_entries": "0",
                  "bitmap_cvg": "6.72%",
                  "command_line": "afl-fuzz -i /tmp/b3fuzz/afl/0197bd13-4679-7fe7-80c3-ea0ba1d891d6/dtlsserver/seeds -o /tmp/b3fuzz/afl/0197bd13-4679-7fe7-80c3-ea0ba1d891d6/dtlsserver/address/output -S slave_8 -t 5000+ -x /tmp/merged_dict_3710915860.dict -- /tmp/b3fuzz/afl/0197bd13-4679-7fe7-80c3-ea0ba1d891d6/dtlsserver/address/dtlsserver",
                  "corpus_count": "399",
                  "corpus_favored": "84",
                  "corpus_found": "5",
                  "corpus_imported": "0",
                  "corpus_variable": "2",
                  "cpu_affinity": "23",
                  "cur_item": "345",
                  "cycles_done": "0",
                  "cycles_wo_finds": "0",
                  "edges_found": "6899",
                  "exec_timeout": "67248",
                  "execs_done": "25672",
                  "execs_per_sec": "33.28",
                  "execs_ps_last_min": "32.33",
                  "execs_since_crash": "25672",
                  "fuzzer_pid": "2051694",
                  "havoc_expansion": "0",
                  "last_crash": "0",
                  "last_find": "1751259925",
                  "last_hang": "0",
                  "last_update": "1751259967",
                  "max_depth": "2",
                  "peak_rss_mb": "61",
                  "pending_favs": "22",
                  "pending_total": "333",
                  "run_time": "771",
                  "saved_crashes": "0",
                  "saved_hangs": "0",
                  "slowest_exec_ms": "0",
                  "stability": "96.04%",
                  "start_time": "1751259196",
                  "target_mode": "persistent shmem_testcase deferred",
                  "testcache_count": "399",
                  "testcache_evict": "0",
                  "testcache_size": "10291397",
                  "time_wo_finds": "374",
                  "total_edges": "102699",
                  "var_byte_count": "273"
                },
                {
                  "afl_banner": "/tmp/b3fuzz/afl/0197c7ba-1b72-7e04-81de-ad091d44ac9c/fuzz_ds_kdtree/address/fuzz_ds_kdtree",
                  "afl_version": "++4.10a",
                  "auto_dict_entries": "0",
                  "bitmap_cvg": "0.62%",
                  "command_line": "afl-fuzz -i /tmp/b3fuzz/afl/0197c7ba-1b72-7e04-81de-ad091d44ac9c/fuzz_ds_kdtree/seeds -o /tmp/b3fuzz/afl/0197c7ba-1b72-7e04-81de-ad091d44ac9c/fuzz_ds_kdtree/address/output -S slave_13 -t 5000+ -x /tmp/merged_dict_4042553078.dict -- /tmp/b3fuzz/afl/0197c7ba-1b72-7e04-81de-ad091d44ac9c/fuzz_ds_kdtree/address/fuzz_ds_kdtree",
                  "corpus_count": "177",
                  "corpus_favored": "21",
                  "corpus_found": "26",
                  "corpus_imported": "15",
                  "corpus_variable": "0",
                  "cpu_affinity": "12",
                  "cur_item": "172",
                  "cycles_done": "3",
                  "cycles_wo_finds": "1",
                  "edges_found": "141",
                  "exec_timeout": "10306",
                  "execs_done": "468920",
                  "execs_per_sec": "586.69",
                  "execs_ps_last_min": "590.54",
                  "execs_since_crash": "468920",
                  "fuzzer_pid": "2006082",
                  "havoc_expansion": "1",
                  "last_crash": "0",
                  "last_find": "1751413629",
                  "last_hang": "0",
                  "last_update": "1751414009",
                  "max_depth": "4",
                  "peak_rss_mb": "98",
                  "pending_favs": "0",
                  "pending_total": "139",
                  "run_time": "799",
                  "saved_crashes": "0",
                  "saved_hangs": "0",
                  "slowest_exec_ms": "0",
                  "stability": "100.00%",
                  "start_time": "1751413210",
                  "target_mode": "persistent shmem_testcase deferred",
                  "testcache_count": "177",
                  "testcache_evict": "0",
                  "testcache_size": "1468919",
                  "time_wo_finds": "379",
                  "total_edges": "22831",
                  "var_byte_count": "0"
                }
              ],
              "properties": {
                "afl_banner": {
                  "custom_type": "string",
                  "examples": [
                    "/tmp/b3fuzz/afl/0197c256-9112-7810-8055-65036731c58f/TestFuzzCoreServer/address/TestFuzzCoreServer",
                    "/tmp/b3fuzz/afl/0197bfbb-d350-7f91-99a7-eb419165fc6f/handler_aim/undefined/handler_aim",
                    "/tmp/b3fuzz/afl/0197c7b9-4d7b-7421-a567-b2c94b228a99/fuzz_decode_stream/memory/fuzz_decode_stream",
                    "/tmp/b3fuzz/afl/0197bd13-4679-7fe7-80c3-ea0ba1d891d6/ml-dsa/address/ml-dsa",
                    "/tmp/b3fuzz/afl/0197b0f6-c289-7533-81c3-6ae813bb264d/curl_fuzzer_pop3/undefined/curl_fuzzer_pop3"
                  ],
                  "type": "string"
                },
                "afl_version": {
                  "custom_type": "string",
                  "examples": [
                    "++4.10a",
                    "++4.10a",
                    "++4.10a",
                    "++4.10a",
                    "++4.10a"
                  ],
                  "type": "string"
                },
                "auto_dict_entries": {
                  "custom_type": "string",
                  "examples": [
                    "0",
                    "0",
                    "0",
                    "0",
                    "0"
                  ],
                  "type": "string"
                },
                "bitmap_cvg": {
                  "custom_type": "string",
                  "examples": [
                    "11.44%",
                    "26.85%",
                    "26.55%",
                    "10.69%",
                    "57.72%"
                  ],
                  "type": "string"
                },
                "command_line": {
                  "custom_type": "string",
                  "examples": [
                    "afl-fuzz -i /tmp/b3fuzz/afl/0197c256-9112-7810-8055-65036731c58f/TestFuzzCommonAssistanceHexStringToBin/seeds -o /tmp/b3fuzz/afl/0197c256-9112-7810-8055-65036731c58f/TestFuzzCommonAssistanceHexStringToBin/address/output -S slave_13 -t 5000+ -x /tmp/merged_dict_253335716.dict -- /tmp/b3fuzz/afl/0197c256-9112-7810-8055-65036731c58f/TestFuzzCommonAssistanceHexStringToBin/address/TestFuzzCommonAssistanceHexStringToBin",
                    "afl-fuzz -i /tmp/b3fuzz/afl/0197ae62-564a-7c5a-8929-28d27cc08a7e/json_fuzz/seeds -o /tmp/b3fuzz/afl/0197ae62-564a-7c5a-8929-28d27cc08a7e/json_fuzz/undefined/output -S slave_2 -t 5000+ -x /tmp/merged_dict_4063563338.dict -- /tmp/b3fuzz/afl/0197ae62-564a-7c5a-8929-28d27cc08a7e/json_fuzz/undefined/json_fuzz",
                    "afl-fuzz -i /tmp/b3fuzz/afl/0197ae62-780d-74c9-a199-e9fab28625ef/cms_transform_all_fuzzer/seeds -o /tmp/b3fuzz/afl/0197ae62-780d-74c9-a199-e9fab28625ef/cms_transform_all_fuzzer/memory/output -S slave_25 -t 5000+ -x /tmp/merged_dict_3752835037.dict -- /tmp/b3fuzz/afl/0197ae62-780d-74c9-a199-e9fab28625ef/cms_transform_all_fuzzer/memory/cms_transform_all_fuzzer",
                    "afl-fuzz -i /tmp/b3fuzz/afl/0197bfbb-d350-7f91-99a7-eb419165fc6f/handler_s1ap/seeds -o /tmp/b3fuzz/afl/0197bfbb-d350-7f91-99a7-eb419165fc6f/handler_s1ap/address/output -S slave_4 -t 5000+ -x /tmp/merged_dict_493970952.dict -- /tmp/b3fuzz/afl/0197bfbb-d350-7f91-99a7-eb419165fc6f/handler_s1ap/address/handler_s1ap",
                    "afl-fuzz -i /tmp/b3fuzz/afl/0197b0f6-c289-7533-81c3-6ae813bb264d/curl_fuzzer_pop3/seeds -o /tmp/b3fuzz/afl/0197b0f6-c289-7533-81c3-6ae813bb264d/curl_fuzzer_pop3/undefined/output -S slave_9 -t 5000+ -x /tmp/merged_dict_3666289593.dict -- /tmp/b3fuzz/afl/0197b0f6-c289-7533-81c3-6ae813bb264d/curl_fuzzer_pop3/undefined/curl_fuzzer_pop3"
                  ],
                  "type": "string"
                },
                "corpus_count": {
                  "custom_type": "string",
                  "examples": [
                    "283",
                    "459",
                    "645",
                    "880",
                    "9"
                  ],
                  "type": "string"
                },
                "corpus_favored": {
                  "custom_type": "string",
                  "examples": [
                    "41",
                    "85",
                    "142",
                    "96",
                    "300"
                  ],
                  "type": "string"
                },
                "corpus_found": {
                  "custom_type": "string",
                  "examples": [
                    "19",
                    "2",
                    "21",
                    "376",
                    "0"
                  ],
                  "type": "string"
                },
                "corpus_imported": {
                  "custom_type": "string",
                  "examples": [
                    "11",
                    "0",
                    "0",
                    "9",
                    "6"
                  ],
                  "type": "string"
                },
                "corpus_variable": {
                  "custom_type": "string",
                  "examples": [
                    "0",
                    "397",
                    "574",
                    "0",
                    "13"
                  ],
                  "type": "string"
                },
                "cpu_affinity": {
                  "custom_type": "string",
                  "examples": [
                    "4",
                    "25",
                    "23",
                    "19",
                    "6"
                  ],
                  "type": "string"
                },
                "cur_item": {
                  "custom_type": "string",
                  "examples": [
                    "63",
                    "257",
                    "202",
                    "76",
                    "141"
                  ],
                  "type": "string"
                },
                "cycles_done": {
                  "custom_type": "string",
                  "examples": [
                    "0",
                    "16",
                    "0",
                    "17",
                    "8"
                  ],
                  "type": "string"
                },
                "cycles_wo_finds": {
                  "custom_type": "string",
                  "examples": [
                    "0",
                    "1",
                    "0",
                    "1",
                    "94"
                  ],
                  "type": "string"
                },
                "edges_found": {
                  "custom_type": "string",
                  "examples": [
                    "484",
                    "1037",
                    "2881",
                    "7470",
                    "6593"
                  ],
                  "type": "string"
                },
                "exec_timeout": {
                  "custom_type": "string",
                  "examples": [
                    "170506",
                    "238488",
                    "8755",
                    "13614",
                    "225082"
                  ],
                  "type": "string"
                },
                "execs_done": {
                  "custom_type": "string",
                  "examples": [
                    "5073117",
                    "4888",
                    "8900",
                    "37631",
                    "25672"
                  ],
                  "type": "string"
                },
                "execs_per_sec": {
                  "custom_type": "string",
                  "examples": [
                    "35339.04",
                    "4818.61",
                    "827.96",
                    "11159000.00",
                    "33.28"
                  ],
                  "type": "string"
                },
                "execs_ps_last_min": {
                  "custom_type": "string",
                  "examples": [
                    "12770.86",
                    "35996.97",
                    "0.87",
                    "14262.61",
                    "3978.95"
                  ],
                  "type": "string"
                },
                "execs_since_crash": {
                  "custom_type": "string",
                  "examples": [
                    "5073117",
                    "4888",
                    "8900",
                    "37631",
                    "25672"
                  ],
                  "type": "string"
                },
                "fuzzer_pid": {
                  "custom_type": "string",
                  "examples": [
                    "2590079",
                    "11483",
                    "203",
                    "196995",
                    "3448"
                  ],
                  "type": "string"
                },
                "havoc_expansion": {
                  "custom_type": "string",
                  "examples": [
                    "0",
                    "3",
                    "0",
                    "1",
                    "3"
                  ],
                  "type": "string"
                },
                "last_crash": {
                  "custom_type": "string",
                  "examples": [
                    "0",
                    "1751288552",
                    "0",
                    "1751010765",
                    "0"
                  ],
                  "type": "string"
                },
                "last_find": {
                  "custom_type": "string",
                  "examples": [
                    "1751038379",
                    "1751266461",
                    "0",
                    "1751229973",
                    "1751443964"
                  ],
                  "type": "string"
                },
                "last_hang": {
                  "custom_type": "string",
                  "examples": [
                    "0",
                    "1751132189",
                    "0",
                    "0",
                    "0"
                  ],
                  "type": "string"
                },
                "last_update": {
                  "custom_type": "string",
                  "examples": [
                    "1751321159",
                    "1750984088",
                    "1751126755",
                    "1750980034",
                    "1751443994"
                  ],
                  "type": "string"
                },
                "max_depth": {
                  "custom_type": "string",
                  "examples": [
                    "4",
                    "2",
                    "2",
                    "3",
                    "5"
                  ],
                  "type": "string"
                },
                "peak_rss_mb": {
                  "custom_type": "string",
                  "examples": [
                    "138",
                    "69",
                    "68",
                    "242",
                    "1379"
                  ],
                  "type": "string"
                },
                "pending_favs": {
                  "custom_type": "string",
                  "examples": [
                    "81",
                    "0",
                    "140",
                    "76",
                    "222"
                  ],
                  "type": "string"
                },
                "pending_total": {
                  "custom_type": "string",
                  "examples": [
                    "249",
                    "678",
                    "643",
                    "791",
                    "582"
                  ],
                  "type": "string"
                },
                "run_time": {
                  "custom_type": "string",
                  "examples": [
                    "795",
                    "482",
                    "309",
                    "775",
                    "228"
                  ],
                  "type": "string"
                },
                "saved_crashes": {
                  "custom_type": "string",
                  "examples": [
                    "0",
                    "4",
                    "0",
                    "0",
                    "3"
                  ],
                  "type": "string"
                },
                "saved_hangs": {
                  "custom_type": "string",
                  "examples": [
                    "0",
                    "2",
                    "0",
                    "0",
                    "0"
                  ],
                  "type": "string"
                },
                "slowest_exec_ms": {
                  "custom_type": "string",
                  "examples": [
                    "0",
                    "0",
                    "0",
                    "0",
                    "0"
                  ],
                  "type": "string"
                },
                "stability": {
                  "custom_type": "string",
                  "examples": [
                    "100.00%",
                    "92.85%",
                    "97.27%",
                    "100.00%",
                    "25.63%"
                  ],
                  "type": "string"
                },
                "start_time": {
                  "custom_type": "string",
                  "examples": [
                    "1751418886",
                    "1750997050",
                    "1751034340",
                    "1750997896",
                    "1751412411"
                  ],
                  "type": "string"
                },
                "target_mode": {
                  "custom_type": "string",
                  "examples": [
                    "persistent shmem_testcase deferred",
                    "persistent shmem_testcase deferred",
                    "persistent shmem_testcase deferred",
                    "persistent shmem_testcase deferred",
                    "persistent shmem_testcase deferred"
                  ],
                  "type": "string"
                },
                "testcache_count": {
                  "custom_type": "string",
                  "examples": [
                    "283",
                    "467",
                    "328",
                    "740",
                    "665"
                  ],
                  "type": "string"
                },
                "testcache_evict": {
                  "custom_type": "string",
                  "examples": [
                    "0",
                    "1771013",
                    "0",
                    "198",
                    "410275"
                  ],
                  "type": "string"
                },
                "testcache_size": {
                  "custom_type": "string",
                  "examples": [
                    "8671286",
                    "30053",
                    "29517746",
                    "0",
                    "73882"
                  ],
                  "type": "string"
                },
                "time_wo_finds": {
                  "custom_type": "string",
                  "examples": [
                    "316",
                    "298",
                    "78",
                    "304",
                    "159"
                  ],
                  "type": "string"
                },
                "total_edges": {
                  "custom_type": "string",
                  "examples": [
                    "22787",
                    "9065",
                    "7935",
                    "422425",
                    "8066"
                  ],
                  "type": "string"
                },
                "var_byte_count": {
                  "custom_type": "string",
                  "examples": [
                    "0",
                    "28",
                    "34",
                    "0",
                    "2"
                  ],
                  "type": "string"
                }
              },
              "required": [
                "afl_banner",
                "afl_version",
                "auto_dict_entries",
                "bitmap_cvg",
                "command_line",
                "corpus_count",
                "corpus_favored",
                "corpus_found",
                "corpus_imported",
                "corpus_variable",
                "cpu_affinity",
                "cur_item",
                "cycles_done",
                "cycles_wo_finds",
                "edges_found",
                "exec_timeout",
                "execs_done",
                "execs_per_sec",
                "execs_ps_last_min",
                "execs_since_crash",
                "fuzzer_pid",
                "havoc_expansion",
                "last_crash",
                "last_find",
                "last_hang",
                "last_update",
                "max_depth",
                "peak_rss_mb",
                "pending_favs",
                "pending_total",
                "run_time",
                "saved_crashes",
                "saved_hangs",
                "slowest_exec_ms",
                "stability",
                "start_time",
                "target_mode",
                "testcache_count",
                "testcache_evict",
                "testcache_size",
                "time_wo_finds",
                "total_edges",
                "var_byte_count"
              ],
              "type": "object"
            },
            "path": {
              "custom_type": "string",
              "examples": [
                "/crs-workdir/01974189-3a80-71b2-8e99-c886e5be1963-20250605-192003/fuzz-tooling/build/out/dropbear-undefined/fuzzer-kexmlkem-cli",
                "/crs-workdir/0197ad06-074f-7306-b44a-f9fafceeea1f-20250626-161546/patch_workspace/fuzz-tooling/build/out/apache-commons-compress-address/ArchiverDumpFuzzer",
                "/crs-workdir/0197c256-49fc-703d-bf22-c1206be5006a-20250630-193526/fuzz-tooling/build/out/libavif-address/avif_fuzztest_enc_dec@EncodeDecodeAvifFuzzTest.EncodeDecodeValid",
                "/crs-workdir/0197c7ba-1b72-7e04-81de-ad091d44ac9c-20250701-204239/patch_workspace/fuzz-tooling/build/out/ndpi-address/fuzz_ds_ahocorasick",
                "/crs-workdir/26626b4e-9511-418a-8a19-6f322e673230-20250606-234823/fuzz-tooling/build/out/sqlite3-address/customfuzz3"
              ],
              "type": "string"
            }
          },
          "required": [],
          "type": "object"
        },
        "fuzzer_name": {
          "custom_type": "string",
          "examples": [
            "reader",
            "html",
            "xml",
            "valid",
            "fuzz"
          ],
          "type": "string"
        },
        "fuzzer_path": {
          "custom_type": "string",
          "examples": [
            "/crs-workdir/0196a6de-f416-7b71-96df-c0f51a52298d-20250506-183234/fuzz-tooling/build/out/freerdp-undefined/TestFuzzCommonAssistanceBinToHexString",
            "/crs-workdir/356fbffd-e713-41ff-804c-4285242ec7cf-20250402-001312/patch_workspace/fuzz-tooling/build/out/libpng-address/libpng_read_fuzzer",
            "/crs-workdir/a0d92c38-0bf0-44ca-ae5d-b7df44f4e7b5-20250507-181508/fuzz-tooling/build/out/libpng-undefined/libpng_read_fuzzer",
            "/crs-workdir/0196a6de-f416-7b71-96df-c0f51a52298d-20250506-183234/fuzz-tooling/build/out/freerdp-address/TestFuzzCommonAssistanceParseFileBuffer",
            "/crs-workdir/0196b661-60be-7a25-96c5-dc16017dca48-20250509-184919/fuzz-tooling/build/out/apache-commons-compress-address/ArchiverArFuzzer"
          ],
          "type": "string"
        },
        "gen_ai": {
          "custom_type": "object",
          "examples": [
            {
              "finish_reason": "tool_use",
              "request": {
                "max_tokens": 4096,
                "model": "claude-3-5-sonnet-20241022",
                "temperature": 0.7
              },
              "response": {
                "id": "msg_01TVZBjNeSRLrpD5CssnnzMv"
              },
              "system": "anthropic",
              "tool_choice": "{'type': 'auto'}",
              "tools": "[{'name': 'read_definition', 'input_schema': {'type': 'object', 'properties': {'name': {'type': 'string', 'description': 'The name of the definition to read'}, 'path': {'type': 'string', 'description': '(Optional) path to the file. Not needed if the name is (expected to be) unique.\\nIf not provided and the name is ambiguous, this tool will return an error that\\nincludes possible file paths to rety with.'}, 'display_lines': {'type': 'boolean', 'description': '(Optional) whether to include the line numbers in the source code content.\\nDefaults to True.'}}, 'required': ['name']}, 'description': 'Read the definition of {name}. {path} is optional, and not needed if the\\nsymbol {name} is likely unique. If you already know the {path}, you should\\nprobably provide it to be safe. If you want the line numbers for each line of\\ncode, set {display_lines} to True.\\n<important>\\nUse this when you want to read the source code defining a symbol directly, without\\nusing multiple other tool calls.\\n</important>'}, {'name': 'read_source', 'input_schema': {'type': 'object', 'properties': {'file_name': {'type': 'string', 'description': \"The relative path of the source file, eg 'src/foo/bar.c'\"}, 'line_number': {'type': 'integer', 'description': 'The line number around which to fetch, eg 234'}}, 'required': ['file_name', 'line_number']}, 'description': \"Read a portion of the source code file located at {file_name}\\nand centered around {line_number}. This is LIMITED to 100 lines before\\nand after the given line number. The output will therefore LIKELY BE\\nTRUNCATED. To read later in the file, call with later line_numbers\\n<important>\\nUse this tool when you want to read source code, but can't use read_definition\\nor another more precise tool.\\n</important>\"}, {'name': 'find_definition', 'input_schema': {'type': 'object', 'properties': {'name': {'type': 'string', 'description': 'The name of the function or symbol for which to search'}, 'path': {'type': 'string', 'description': '(Optional) path to the file. Not needed if the name is (expected to be) unique.\\nIf not provided and the name is ambiguous, this tool will return an error that\\nincludes possible file paths to rety with.'}, 'case_insensitive': {'type': 'boolean', 'description': '(Optional) If true, searches without regards to the case. Defaults to false.'}}, 'required': ['name']}, 'description': 'Search for all definitions of a method, macro, global symbol, etc globally in the repository.\\nIf {path} is provided, it must be a file path where the definition lives. If you do not know\\nwhere it lives, omit {path} from the arguments.\\nReturns a list of filenames and references (line, content) for each matching file\\neg [{\"file_name\":\"src/foo/bar.c\", \"refs\":[{\"line\": 123}, {\"content\": \"foo(1337);\"}]}]\\n<warning>\\nsearches for the function name only. For functions defined as part of a class\\nsuch as FooClass.BarFunction, search only for BarFunction\\n</warning>\\n<important>\\nIf you plan to only read the definition once you find it, use the `read_definition`\\ntool instead.\\n</important>'}, {'name': 'find_references', 'input_schema': {'type': 'object', 'properties': {'name': {'type': 'string', 'description': 'The name of the function or symbol for which to search. Note if you are searching for a\\nstruct or class member variable, you must not include the struct or class name in this\\nparameter.'}, 'path': {'type': 'string', 'description': '(Optional) path to the file. Not needed if you want to search for all references.'}, 'case_insensitive': {'type': 'boolean', 'description': 'If true, searches without regards to the case'}}, 'required': ['name']}, 'description': 'Search for all references to a given symbol (i.e. method, macro, variable, struct member, etc.)\\nIf {path} is provided, it must be a valid file and the search is restricted to references within it.\\nThis not a \"grep\" tool: the {name} must be a symbol name with no additional syntax.\\nReturns a dictionary of filenames and line numbers at which references occured\\neg [{\"file_name\":\"src/foo/bar.c\", \"refs\":[{\"line\": 123}, {\"content\": \"foo(1337);\"}]}]\\n<warning>\\nsearches for the function name only. For functions defined as part of a class\\nsuch as FooClass.BarFunction, search only for BarFunction\\n</warning>\\n<important>\\nUse this tool to find where a symbol is referenced in the codebase. This can be useful for\\nfind callers of a function or macro, users of a certain type, etc.\\n</important>'}, {'name': 'query_coverage', 'input_schema': {'type': 'object', 'properties': {'target_file': {'type': 'string', 'description': 'The path to the source file'}, 'target_line': {'type': 'integer', 'description': 'The line number in the {target_file}'}}, 'required': ['target_file', 'target_line']}, 'description': 'Attempts to answer the question \"does the PoV reach the {target_line}\\ndefined in {target_file}?\"\\n<important>\\nBe sure you know the exact line you care about. In order to be reached, the line must contain executable code,\\nrather simply variable declarations. You should use a source-reading tool to find the exact line number of the\\ncode you\\'re targeting.\\n</important>'}, {'name': 'get_output', 'input_schema': {'type': 'object', 'properties': {}}, 'description': 'Runs the PoV input on the harness and returns the output.\\nCan be useful for debugging unexpected behavior, especially when you suspect there is error output.'}, {'name': 'gdb_exec', 'input_schema': {'type': 'object', 'properties': {'source_file': {'type': 'string', 'description': 'The source file path of the code you want to break in.'}, 'line_number': {'type': 'integer', 'description': 'The line number in the file that you want to break at.\\nNOTE: you should be careful to ensure that the variable(s) you are interested in are\\ndefined BEFORE the breakpoint. Otherwise, their value may be invalid / undefined.'}, 'command': {'type': 'string', 'description': 'The gdb command to run at the specified breakpoint.'}}, 'required': ['source_file', 'line_number', 'command']}, 'description': 'Runs the harness on the PoV input with a breakpoint set at the specified location.\\nReturns the result of running `command` in gdb at that breakpoint.\\n<important>\\nThis will run the command AT THE SPECIFIED BREAKPOINT, so be careful to break the\\ncorrect location. For example, if you break at the start of a function, the value\\nof local variables assigned later in the function will be incorrect.\\n</important>'}, {'name': 'terminate', 'input_schema': {'type': 'object', 'properties': {'summary': {'type': 'string', 'description': 'a summary of the actions taken to answer the question(s)'}, 'answer': {'type': 'string', 'description': 'the answer(s) to any question(s) in the debug query'}}, 'required': ['summary', 'answer']}, 'description': 'Terminate and produce the final result. Only call this when you are completely finished with your task.'}]",
              "usage": {
                "input_tokens": 90,
                "output_tokens": 369,
                "total_tokens": 459
              }
            },
            {
              "operation": {
                "name": "chat"
              },
              "output": {
                "type": "text"
              },
              "request": {
                "frequency_penalty": 0.0,
                "is_stream": false,
                "max_tokens": -1,
                "model": "claude-3-7-sonnet-20250219",
                "presence_penalty": 0.0,
                "seed": "",
                "service_tier": "auto",
                "stop_sequences": "[]",
                "temperature": 0.0,
                "top_p": 1.0,
                "user": ""
              },
              "response": {
                "finish_reasons": "[\"tool_calls\"]",
                "id": "chatcmpl-59b3633a-d990-43e0-85ae-5cdbd7de1505",
                "model": "claude-3-7-sonnet-20250219",
                "system_fingerprint": "None",
                "tool_calls": "[{'index': 1, 'function': {'arguments': '{\"class_name\": null, \"function_name\": \"block_debug_pragmas\"}', 'name': 'search_function_signatures'}, 'id': 'toolu_0192CyqQf4gEVEEPYARY5z3n', 'type': 'function'}]"
              },
              "sdk": {
                "version": "1.63.2"
              },
              "server": {
                "time_to_first_token": 2.8242413997650146
              },
              "system": "litellm",
              "usage": {
                "cost": 0.046391999999999996,
                "input_tokens": 14984,
                "output_tokens": 96,
                "total_tokens": 15080
              }
            },
            {
              "operation": {
                "name": "chat"
              },
              "output": {
                "type": "text"
              },
              "request": {
                "frequency_penalty": 0.0,
                "is_stream": true,
                "max_tokens": -1,
                "model": "gpt-4o",
                "presence_penalty": 0.0,
                "seed": "",
                "service_tier": "auto",
                "stop_sequences": "[]",
                "temperature": 0.0,
                "top_p": 1.0,
                "user": ""
              },
              "response": {
                "id": "chatcmpl-3cc51cf0-36dd-427d-99bc-01a68b3af3aa",
                "model": "gpt-4o",
                "service_tier": "fp_898ac29719",
                "system_fingerprint": "fp_898ac29719"
              },
              "sdk": {
                "version": "1.63.7"
              },
              "server": {
                "time_per_output_token": 0.013820193296561211,
                "time_to_first_token": 0.21524429321289062
              },
              "system": "litellm",
              "usage": {
                "cost": 0.0834985,
                "input_tokens": 149618,
                "output_tokens": 5793,
                "total_tokens": 155411
              }
            },
            {
              "request": {
                "is_streaming": true,
                "model": "o3"
              },
              "response": {
                "id": "chatcmpl-BniMJYAqCs46P5Nbv1ckT03dx7zLF",
                "model": "azure/o3-2025-04-16"
              },
              "system": "azure",
              "usage": {
                "input_tokens": 2639,
                "output_tokens": 25,
                "total_tokens": 2664
              }
            },
            {
              "reasoning_effort": "medium",
              "request": {
                "model": "o1-2024-12-17",
                "service_tier": "default"
              },
              "response": {
                "id": "chatcmpl-BfG3VjHZuBsSR8vzjItDHm55KqgIc"
              },
              "system": "openai",
              "tool_choice": "required",
              "tools": "[{'type': 'function', 'function': {'name': 'read_definition', 'description': 'Read the definition of {name}. {path} is optional, and not needed if the\\nsymbol {name} is likely unique. If you already know the {path}, you should\\nprobably provide it to be safe. If you want the line numbers for each line of\\ncode, set {display_lines} to True.\\n<important>\\nUse this when you want to read the source code defining a symbol directly, without\\nusing multiple other tool calls.\\n</important>', 'parameters': {'type': 'object', 'properties': {'name': {'type': 'string', 'description': 'The name of the definition to read'}, 'path': {'type': 'string', 'description': '(Optional) path to the file. Not needed if the name is (expected to be) unique.\\nIf not provided and the name is ambiguous, this tool will return an error that\\nincludes possible file paths to rety with.'}, 'display_lines': {'type': 'boolean', 'description': '(Optional) whether to include the line numbers in the source code content.\\nDefaults to True.'}}, 'required': ['name']}}}, {'type': 'function', 'function': {'name': 'read_source', 'description': \"Read a portion of the source code file located at {file_name}\\nand centered around {line_number}. This is LIMITED to 100 lines before\\nand after the given line number. The output will therefore LIKELY BE\\nTRUNCATED. To read later in the file, call with later line_numbers\\n<important>\\nUse this tool when you want to read source code, but can't use read_definition\\nor another more precise tool.\\n</important>\", 'parameters': {'type': 'object', 'properties': {'file_name': {'type': 'string', 'description': \"The relative path of the source file, eg 'src/foo/bar.c'\"}, 'line_number': {'type': 'integer', 'description': 'The line number around which to fetch, eg 234'}}, 'required': ['file_name', 'line_number']}}}, {'type': 'function', 'function': {'name': 'find_definition', 'description': 'Search for all definitions of a method, macro, global symbol, etc globally in the repository.\\nIf {path} is provided, it must be a file path where the definition lives. If you do not know\\nwhere it lives, omit {path} from the arguments.\\nReturns a list of filenames and references (line, content) for each matching file\\neg [{\"file_name\":\"src/foo/bar.c\", \"refs\":[{\"line\": 123}, {\"content\": \"foo(1337);\"}]}]\\n<warning>\\nsearches for the function name only. For functions defined as part of a class\\nsuch as FooClass.BarFunction, search only for BarFunction\\n</warning>\\n<important>\\nIf you plan to only read the definition once you find it, use the `read_definition`\\ntool instead.\\n</important>', 'parameters': {'type': 'object', 'properties': {'name': {'type': 'string', 'description': 'The name of the function or symbol for which to search'}, 'path': {'type': 'string', 'description': '(Optional) path to the file. Not needed if the name is (expected to be) unique.\\nIf not provided and the name is ambiguous, this tool will return an error that\\nincludes possible file paths to rety with.'}, 'case_insensitive': {'type': 'boolean', 'description': '(Optional) If true, searches without regards to the case. Defaults to false.'}}, 'required': ['name']}}}, {'type': 'function', 'function': {'name': 'find_references', 'description': 'Search for all references to a given symbol (i.e. method, macro, variable, struct member, etc.)\\nIf {path} is provided, it must be a valid file and the search is restricted to references within it.\\nThis not a \"grep\" tool: the {name} must be a symbol name with no additional syntax.\\nReturns a dictionary of filenames and line numbers at which references occured\\neg [{\"file_name\":\"src/foo/bar.c\", \"refs\":[{\"line\": 123}, {\"content\": \"foo(1337);\"}]}]\\n<warning>\\nsearches for the function name only. For functions defined as part of a class\\nsuch as FooClass.BarFunction, search only for BarFunction\\n</warning>\\n<important>\\nUse this tool to find where a symbol is referenced in the codebase. This can be useful for\\nfind callers of a function or macro, users of a certain type, etc.\\n</important>', 'parameters': {'type': 'object', 'properties': {'name': {'type': 'string', 'description': 'The name of the function or symbol for which to search. Note if you are searching for a\\nstruct or class member variable, you must not include the struct or class name in this\\nparameter.'}, 'path': {'type': 'string', 'description': '(Optional) path to the file. Not needed if you want to search for all references.'}, 'case_insensitive': {'type': 'boolean', 'description': 'If true, searches without regards to the case'}}, 'required': ['name']}}}, {'type': 'function', 'function': {'name': 'terminate', 'description': 'Terminate and produce the final result. Only call this when you are completely finished with your task.', 'parameters': {'type': 'object', 'properties': {'answer': {'type': 'string', 'description': 'the answer to the question'}}, 'required': ['answer']}}}]",
              "usage": {
                "input_tokens": 1634,
                "output_tokens": 350,
                "total_tokens": 1984
              }
            }
          ],
          "properties": {
            "application_name": {
              "custom_type": "string",
              "examples": [
                "diffguy",
                "patcher",
                "patchery_smart",
                "seed-gen",
                "veronica-task-server"
              ],
              "type": "string"
            },
            "client": {
              "custom_type": "object",
              "properties": {
                "token": {
                  "custom_type": "object",
                  "properties": {
                    "usage": {
                      "custom_type": "int32",
                      "excludeMaximum": 180062,
                      "minimum": 7589,
                      "type": "number"
                    }
                  },
                  "required": [
                    "usage"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "token"
              ],
              "type": "object"
            },
            "endpoint": {
              "custom_type": "string",
              "examples": [
                "langchain.chat_models",
                "litellm.completion",
                "openai.chat.completions"
              ],
              "type": "string"
            },
            "environment": {
              "custom_type": "string",
              "examples": [
                "default"
              ],
              "type": "string"
            },
            "finish_reason": {
              "custom_type": "string",
              "examples": [
                "end_turn",
                "tool_use"
              ],
              "type": "string"
            },
            "operation": {
              "custom_type": "object",
              "examples": [
                {
                  "name": "chat"
                },
                {
                  "name": "embeddings"
                }
              ],
              "properties": {
                "name": {
                  "custom_type": "string",
                  "examples": [
                    "chat",
                    "embeddings"
                  ],
                  "type": "string"
                }
              },
              "required": [
                "name"
              ],
              "type": "object"
            },
            "output": {
              "custom_type": "object",
              "examples": [
                {
                  "type": "text"
                }
              ],
              "properties": {
                "type": {
                  "custom_type": "string",
                  "examples": [
                    "text"
                  ],
                  "type": "string"
                }
              },
              "required": [
                "type"
              ],
              "type": "object"
            },
            "reasoning_effort": {
              "custom_type": "string",
              "examples": [
                "high",
                "medium"
              ],
              "type": "string"
            },
            "request": {
              "custom_type": "object",
              "examples": [
                {
                  "frequency_penalty": 0.0,
                  "is_stream": false,
                  "max_tokens": -1,
                  "model": "claude-3.7-sonnet",
                  "presence_penalty": 0.0,
                  "seed": "",
                  "temperature": 0.5,
                  "top_p": 1.0,
                  "user": "claude-budget"
                },
                {
                  "frequency_penalty": 0.0,
                  "is_stream": false,
                  "max_tokens": 1000,
                  "model": "gpt-4o-2024-08-06",
                  "presence_penalty": 0.0,
                  "seed": "",
                  "service_tier": "auto",
                  "stop_sequences": "[]",
                  "temperature": 0.0,
                  "top_p": 1.0,
                  "user": ""
                },
                {
                  "frequency_penalty": 0.0,
                  "is_stream": true,
                  "max_tokens": -1,
                  "model": "claude-3.7-sonnet",
                  "presence_penalty": 0.0,
                  "seed": "",
                  "service_tier": "auto",
                  "stop_sequences": "[]",
                  "temperature": 0.019378407964268818,
                  "top_p": 1.0,
                  "user": ""
                },
                {
                  "is_streaming": true
                },
                {
                  "model": "o3-2025-04-16",
                  "service_tier": ""
                }
              ],
              "properties": {
                "encoding_formats": {
                  "custom_type": "list",
                  "examples": [
                    [
                      "base64"
                    ],
                    [
                      "base64"
                    ],
                    [
                      "base64"
                    ],
                    [
                      "base64"
                    ],
                    [
                      "base64"
                    ]
                  ],
                  "items": {
                    "custom_type": "string",
                    "examples": [
                      "base64",
                      "base64",
                      "base64",
                      "base64",
                      "base64"
                    ],
                    "type": "string"
                  },
                  "type": "array"
                },
                "frequency_penalty": {
                  "custom_type": "float64",
                  "examples": [
                    0.0
                  ],
                  "type": "number"
                },
                "is_stream": {
                  "custom_type": "bool",
                  "examples": [
                    false,
                    true
                  ],
                  "type": "boolean"
                },
                "is_streaming": {
                  "custom_type": "bool",
                  "examples": [
                    true
                  ],
                  "type": "boolean"
                },
                "max_tokens": {
                  "custom_type": "int32",
                  "examples": [
                    -1,
                    1,
                    10240,
                    32000,
                    100000
                  ],
                  "excludeMaximum": 100000,
                  "minimum": -1,
                  "type": "number"
                },
                "model": {
                  "custom_type": "string",
                  "examples": [
                    "claude-3-haiku-20240307",
                    "o1",
                    "o3",
                    "o4-mini-2025-04-16",
                    "openai/o1-preview"
                  ],
                  "type": "string"
                },
                "presence_penalty": {
                  "custom_type": "float64",
                  "examples": [
                    0.0
                  ],
                  "type": "number"
                },
                "seed": {
                  "custom_type": "string",
                  "examples": [
                    ""
                  ],
                  "type": "string"
                },
                "service_tier": {
                  "custom_type": "string",
                  "examples": [
                    "",
                    "auto",
                    "default"
                  ],
                  "type": "string"
                },
                "stop_sequences": {
                  "custom_type": "string",
                  "examples": [
                    "[]"
                  ],
                  "type": "string"
                },
                "temperature": {
                  "custom_type": "float64",
                  "examples": [
                    0.0,
                    0.019378407964268818,
                    0.5,
                    0.7032132320355062,
                    1.0
                  ],
                  "type": "number"
                },
                "top_k": {
                  "custom_type": "float64",
                  "examples": [
                    1.0
                  ],
                  "type": "number"
                },
                "top_p": {
                  "custom_type": "float64",
                  "examples": [
                    1.0
                  ],
                  "type": "number"
                },
                "user": {
                  "custom_type": "string",
                  "examples": [
                    "",
                    "claude-budget",
                    "grammar-budget",
                    "openai-budget"
                  ],
                  "type": "string"
                }
              },
              "required": [],
              "type": "object"
            },
            "response": {
              "custom_type": "object",
              "examples": [
                {
                  "finish_reasons": "[\"function_call\"]",
                  "id": "chatcmpl-BVFbELikLwVYd7UTekPpfqJUTRrVx",
                  "model": "o1-2024-12-17",
                  "service_tier": "default",
                  "system_fingerprint": "fp_03be0c45cc"
                },
                {
                  "finish_reasons": "[\"length\"]",
                  "id": "chatcmpl-1e8fc6e2-f5c1-43d6-8be6-9afba2c1510e"
                },
                {
                  "finish_reasons": "[\"stop\"]",
                  "id": "chatcmpl-BoEmKMV9D3qiKVnIxAze7FZUINy2O",
                  "model": "o3-2025-04-16",
                  "service_tier": "default",
                  "system_fingerprint": "None"
                },
                {
                  "id": "chatcmpl-77758228-cd1e-4bba-aab8-96ac32cb50c7"
                },
                {
                  "id": "msg_01MTZoHQodzBuSkvsrwJtMuN"
                }
              ],
              "properties": {
                "finish_reasons": {
                  "custom_type": "string",
                  "examples": [
                    "[\"function_call\"]",
                    "[\"length\"]",
                    "[\"stop\"]",
                    "[\"tool_calls\"]"
                  ],
                  "type": "string"
                },
                "id": {
                  "custom_type": "string",
                  "examples": [
                    "65aa876d-2774-4d10-a191-665a6405305f",
                    "chatcmpl-BHyAOQLUQJfiYseKkJFAcQWPvjKSo",
                    "chatcmpl-Bfq6yk9YmKdq85mLqXOqXp9blH9OT",
                    "d89deadd-8e28-433e-872c-874eb7046eeb",
                    "msg_01VxSoRrWGNue2MEjjaaSyaV"
                  ],
                  "type": "string"
                },
                "model": {
                  "custom_type": "string",
                  "examples": [
                    "claude-3-7-sonnet-latest",
                    "gpt-4.1",
                    "gpt-4o",
                    "models/betarixm/eraser",
                    "o3-mini-2025-01-31"
                  ],
                  "type": "string"
                },
                "service_tier": {
                  "custom_type": "string",
                  "examples": [
                    "None",
                    "fp_1982538c78",
                    "fp_898ac29719",
                    "fp_b38e740b47",
                    "fp_de57b65c90"
                  ],
                  "type": "string"
                },
                "system_fingerprint": {
                  "custom_type": "string",
                  "examples": [
                    "None",
                    "fp_0b05c463d3",
                    "fp_90122d973c",
                    "fp_a8c84eaef4",
                    "fp_b376dfbbd5"
                  ],
                  "type": "string"
                },
                "tool_calls": {
                  "custom_type": "string",
                  "examples": [
                    "[{'function': {'arguments': '{\"command\": \"create\", \"path\": \"/crs-scratch/LLM_Mutator/round-exhibition1b-libxml2/test_deep_gen_1234567890.py\", \"file_text\": \"<script>\\\\nimport argparse\\\\nimport os\\\\nimport random\\\\nimport struct\\\\n\\\\n# This script generates fuzzing test cases for our LLVMFuzzerTestOneInput harness.\\\\n# It generates unique .bin files containing test cases. Each file is a binary blob that\\\\n# may either be completely random or intelligently structured to mimic expected formats.\\\\n\\\\n# The fuzz harness reads the blob in several segments:\\\\n# - The first 4 bytes are interpreted as options.\\\\n# - The next 4 bytes set a failure injection value.\\\\n# - Then additional data is processed as the main entity (often XML content).\\\\n#\\\\n# To maximize coverage, the corpus includes:\\\\n# 1. Pure random binary data.\\\\n# 2. Structured data with a valid-looking XML header and DTD to cover XML parsing paths.\\\\n# 3. Hybrid data with noise surrounding valid XML segments.\\\\n\\\\ndef generate_random_blob(min_size=10, max_size=200):\\\\n    size = random.randint(min_size, max_size)\\\\n    return os.urandom(size)\\\\n\\\\n\\\\ndef generate_structured_blob():\\\\n    # Generate a blob with a structured format:\\\\n    # 4 bytes: random integer for options\\\\n    options = random.randint(0, 0xFFFFFFFF)\\\\n    # 4 bytes: random integer for failure injection\\\\n    failure_val = random.randint(0, 0xFFFFFFFF)\\\\n    header = struct.pack(\\'<II\\', options, failure_val)\\\\n\\\\n    # Choose an XML template with some variation\\\\n    xml_templates = [\\\\n        \\'<?xml version=\\\\\"1.0\\\\\"?>\\\\\\\\n<!DOCTYPE note [\\\\\\\\n<!ELEMENT note (to,from,heading,body)>\\\\\\\\n<!ENTITY writer \\\\\"John Doe\\\\\">\\\\\\\\n]>\\\\\\\\n<note>\\\\\\\\n  <to>Tove</to>\\\\\\\\n  <from>&writer;</from>\\\\\\\\n  <heading>Reminder</heading>\\\\\\\\n  <body>Don\\\\\\\\\\'t forget me this weekend!</body>\\\\\\\\n</note>\\',\\\\n        \\'<?xml version=\\\\\"1.0\\\\\"?>\\\\\\\\n<root attr=\\\\\"{}\\\\\">\\\\\\\\n  <child>Some text</child>\\\\\\\\n</root>\\',\\\\n        \\'<!DOCTYPE data [<!ELEMENT data ANY>]><data>RandomContent</data>\\'\\\\n    ]\\\\n    template = random.choice(xml_templates)\\\\n\\\\n    # For one template, insert a random attribute value if needed\\\\n    if \\'{}\\' in template:\\\\n        random_attr = str(random.randint(100, 999))\\\\n        template = template.format(random_attr)\\\\n\\\\n    # Convert the XML string to bytes\\\\n    xml_bytes = template.encode(\\'utf-8\\')\\\\n\\\\n    # Optionally, prepend or append some random noise\\\\n    noise_before = os.urandom(random.randint(0, 10))\\\\n    noise_after = os.urandom(random.randint(0, 10))\\\\n\\\\n    return header + noise_before + xml_bytes + noise_after\\\\n\\\\n\\\\ndef generate_hybrid_blob():\\\\n    # Hybrid blob: random structured header followed by a mix of valid XML and random noise\\\\n    options = random.randint(0, 0xFFFFFFFF)\\\\n    failure_val = random.randint(0, 0xFFFFFFFF)\\\\n    header = struct.pack(\\'<II\\', options, failure_val)\\\\n\\\\n    # Valid XML segment\\\\n    xml_segment = \\'<data><item id=\\\\\"1\\\\\">Value</item><item id=\\\\\"2\\\\\">Another</item></data>\\'.encode(\\'utf-8\\')\\\\n\\\\n    # Random noise in the middle\\\\n    noise = os.urandom(random.randint(5, 20))\\\\n\\\\n    # Append another XML segment with slight variations\\\\n    xml_segment2 = \\'<extra attr=\\\\\"{}\\\\\">ExtraContent</extra>\\'.format(random.randint(0, 999)).encode(\\'utf-8\\')\\\\n\\\\n    return header + noise + xml_segment + noise + xml_segment2\\\\n\\\\n\\\\ndef main(nblobs):\\\\n    # Create output directory if it does not exist\\\\n    output_dir = \\'fuzz_corpus\\'\\\\n    os.makedirs(output_dir, exist_ok=True)\\\\n\\\\n    for i in range(nblobs):\\\\n        # Randomly choose one of the three generation strategies\\\\n        mode = random.choice([0, 1, 2])\\\\n        if mode == 0:\\\\n            blob = generate_random_blob()\\\\n        elif mode == 1:\\\\n            blob = generate_structured_blob()\\\\n        else:\\\\n            blob = generate_hybrid_blob()\\\\n\\\\n        # Write to a .bin file with unique name\\\\n        filename = os.path.join(output_dir, f\\'fuzz_seed_{i:04d}.bin\\')\\\\n        with open(filename, \\'wb\\') as f:\\\\n            f.write(blob)\\\\n\\\\n    print(f\\'Generated {nblobs} fuzzing test case(s) in directory \\\\\"{output_dir}\\\\\".\\')\\\\n\\\\nif __name__ == \\'__main__\\':\\\\n    parser = argparse.ArgumentParser(description=\\'Generate fuzzing test cases for LLVMFuzzerTestOneInput harness.\\')\\\\n    parser.add_argument(\\'--nblobs\\', type=int, default=50, help=\\'Number of fuzzing blobs to generate\\')\\\\n    args = parser.parse_args()\\\\n    main(args.nblobs)\\\\n</script>\\\\n\", \"description\": \"Wrap the fuzzing test script with <script> tags\"}', 'name': 'textEditor'}, 'id': 'call_A7Iuv7IHpRyZFQLpockfSuPL', 'type': 'function'}]",
                    "[{'function': {'arguments': '{\"key_conditions\":[2,7,20,24,30,51,60,69,77,148,173,179,193,196,288,329,332,340,358,365,368,379,384],\"should_be_taken_lines\":[1,6,12,13,14,15,16,18,19,24,30,37,39,45,46,47,48,49,57,65,66,67,69,70,83,84,85,86,87,89,91,93,94,95,97,98,99,100,104,126,142,143,288,289,303,309,338,347,349,353,354,355,356,379,380,387,392,393]}', 'name': 'KeyConditionReport'}, 'id': 'call_wpRZLBXiIO6HnnRozrp3pt69', 'type': 'function'}]",
                    "[{'function': {'arguments': '{\"result\": \"After reviewing the code base, the URI/path handling functionality is concentrated in a couple of key files:\\\\n\\\\n1. In the header file /include/libxml/uri.h, you\u2019ll find the declaration of the xmlURI struct (typedef struct _xmlURI) which holds all components of a URI \u2013 including the scheme, authority, path, query, and fragment. In addition, functions declared here that relate to logging or processing paths include:\\\\n  \u2022 xmlParseURI(), xmlParseURISafe(), and xmlParseURIRaw() \u2013 used to parse a URI string into its components.\\\\n  \u2022 xmlBuildURI() and xmlBuildRelativeURI(), which take a URI along with a base and resolve a complete URI from them. This is particularly relevant for relative paths such as \\\\\"../data/config.xml\\\\\" and cases such as deep nested paths.\\\\n  \u2022 xmlNormalizeURIPath() \u2013 which specifically normalizes the path element of a URI. This function is useful for handling variations between absolute paths (like \\\\\"/home/user/documents/report.txt\\\\\") and root paths (\\\\\"/\\\\\").\\\\n  \u2022 xmlCanonicPath() and xmlPathToURI() \u2013 these functions deal with converting or cleaning up file system paths to proper URI syntax (e.g. handling spaces in paths, such as \\\\\"/User Documents/My Project/source code.txt\\\\\").\\\\n\\\\n2. In /uri.c, you will see the implementations of many of the functions whose prototypes appear in uri.h. This file contains routines such as:\\\\n  \u2022 xmlParse3986Scheme(), xmlParse3986Fragment(), xmlParse3986Query() \u2013 which dissect the URI string into its various components in accordance with RFC 3986.\\\\n\\\\nTogether, these files form the core of the libxml2 URI handling logic. Although your grep search for keywords like \\\\\"path_parse\\\\\", \\\\\"uri_normalize\\\\\", \\\\\"path_resolve\\\\\", \\\\\"path_split\\\\\", and \\\\\"uri_path\\\\\" did not yield separate symbols for splitting or resolving paths, the functionality is integrated into the higher\u2011level routines (like xmlParseURI, xmlBuildURI, and xmlNormalizeURIPath) within these files. These functions manage various cases:\\\\n  \u2022 Absolute paths: e.g. \\\\\"/home/user/documents/report.txt\\\\\" are handled by xmlParseURI and later normalized by xmlNormalizeURIPath or xmlCanonicPath\\\\n  \u2022 Relative paths: e.g. \\\\\"../data/config.xml\\\\\" are processed by httpBuildURI or xmlBuildRelativeURI that combine them with a base URI\\\\n  \u2022 Root paths (\\\\\"/\\\\\") and deep nested paths like \\\\\"/var/www/html/projects/libxml2/src/parser.c\\\\\" are similarly parsed and normalized\\\\n  \u2022 Paths containing spaces (\\\\\"/User Documents/My Project/source code.txt\\\\\") are managed via xmlPathToURI and xmlCanonicPath to ensure proper encoding\\\\n\\\\nIn summary, the functions declared in /include/libxml/uri.h and implemented in uri.c are the primary locations that contain the logic for handling and parsing various URI and path examples in the code base.\"}', 'name': 'agentDone'}, 'id': 'call_CGGqIbchu59rdFquD4km5hp8', 'type': 'function'}]",
                    "[{'id': 'call_wVYdPNMxgxNkDn7xc0WkmJYH', 'function': {'arguments': '{\"project\": \"/app/.tmp/tasks/0197c7b9-4d7b-7421-a567-b2c94b228a99/claude-4-sonnet/round-final-phase7-xz\", \"scan_depth\": 2}', 'name': 'analyze_project'}, 'type': 'function'}, {'id': 'call_U4tRTfB5cByFev9yj1RmoKgp', 'function': {'arguments': '{\"project\": \"/app/.tmp/tasks/0197c7b9-4d7b-7421-a567-b2c94b228a99/claude-4-sonnet/round-final-phase7-xz\", \"pattern\": \"aixcc\", \"max_results\": 10}', 'name': 'find_text'}, 'type': 'function'}, {'id': 'call_aiH1En3IFAxtNChSPYBVtdvh', 'function': {'arguments': '{\"project\": \"/app/.tmp/tasks/0197c7b9-4d7b-7421-a567-b2c94b228a99/claude-4-sonnet/round-final-phase7-xz\", \"pattern\": \"jazzer\", \"max_results\": 10}', 'name': 'find_text'}, 'type': 'function'}, {'id': 'call_xkMWdweoVAA3MWzFodZdfjrV', 'function': {'arguments': '{\"project\": \"/app/.tmp/tasks/0197c7b9-4d7b-7421-a567-b2c94b228a99/claude-4-sonnet/round-final-phase7-xz\", \"pattern\": \"backdoor\", \"max_results\": 10}', 'name': 'find_text'}, 'type': 'function'}, {'id': 'call_084MUax4rNydxRpbt8NzFwlB', 'function': {'arguments': '{\"project\": \"/app/.tmp/tasks/0197c7b9-4d7b-7421-a567-b2c94b228a99/claude-4-sonnet/round-final-phase7-xz\", \"pattern\": \"password\", \"max_results\": 10}', 'name': 'find_text'}, 'type': 'function'}]",
                    "[{'index': 0, 'function': {'arguments': '{\"chain_of_thought\": \"I need to analyze the harness and diff to understand the potential bugs in the XLIFF parser and enhance the testlang accordingly.\\\\n\\\\nFirst, let\\'s look at the harness:\\\\n- The harness is using Apache Tika\\'s XLIFF12Parser to parse XLIFF documents.\\\\n- It creates a ContentHandler, ParseContext, and uses TikaInputStream to parse the input bytes.\\\\n- Any exceptions (TikaException, SAXException, IOException) are caught but not propagated.\\\\n\\\\nNow, looking at the diff:\\\\nThe diff shows a significant change in the HTML parsing component of Apache Tika:\\\\n1. The main change is replacing `HtmlParser` with `JSoupParser` throughout the codebase.\\\\n2. The implementation is completely different - HtmlParser was using TagSoup library, while JSoupParser uses JSoup.\\\\n3. There are changes in how metadata is handled, particularly with prefixing HTML meta tags with \\\\\"html_meta:\\\\\".\\\\n4. There\\'s a new feature in the HtmlHandler class that configures ExifTool for processing embedded images.\\\\n\\\\nThe most interesting part for potential bugs is in the HtmlHandler.java file:\\\\n- There\\'s a new method `configureExifTool` that sets up an ExternalParser for JPEG files.\\\\n- There\\'s a new method `resetExifTool` that cleans up after using ExifTool.\\\\n- These methods are called in the `handleImage` method, which processes embedded images in HTML.\\\\n\\\\nSince XLIFF is an XML-based format that can contain HTML-like content, there\\'s a potential interaction between the XLIFF parser and the new HTML parser. The XLIFF parser might be using the HTML parser internally to handle certain content.\\\\n\\\\nPotential bugs:\\\\n1. The change from TagSoup to JSoup might handle malformed XML/HTML differently, potentially causing parsing issues.\\\\n2. The new ExifTool configuration might be triggered if XLIFF content contains image references.\\\\n3. The metadata handling changes (prefixing with \\\\\"html_meta:\\\\\") might affect how metadata from XLIFF is processed.\\\\n4. The JSoupParser might have different behavior with deeply nested elements or large content.\\\\n\\\\nLet\\'s enhance our testlang to target these potential issues:\\\\n\\\\n1. We should create test cases that include HTML content within XLIFF, especially content that might trigger the ExifTool functionality (embedded images).\\\\n2. We should test with malformed XLIFF that might be handled differently by the new parser.\\\\n3. We should test with XLIFF containing metadata that might be affected by the prefix changes.\\\\n4. We should test with deeply nested elements and large content to test parser robustness.\\\\n\\\\nLet\\'s update our generators to focus on these scenarios.\", \"sub_testlang\": \"{\\\\n  \\\\\"default_endian\\\\\": \\\\\"little\\\\\",\\\\n  \\\\\"mode\\\\\": \\\\\"Bytes\\\\\",\\\\n  \\\\\"is_partial\\\\\": true,\\\\n  \\\\\"records\\\\\": [\\\\n    {\\\\n      \\\\\"name\\\\\": \\\\\"XliffDocumentUnion\\\\\",\\\\n      \\\\\"kind\\\\\": \\\\\"union\\\\\",\\\\n      \\\\\"fields\\\\\": [\\\\n        {\\\\n          \\\\\"name\\\\\": \\\\\"html_content_xliff\\\\\",\\\\n          \\\\\"kind\\\\\": \\\\\"record\\\\\",\\\\n          \\\\\"items\\\\\": {\\\\n            \\\\\"kind\\\\\": \\\\\"record\\\\\",\\\\n            \\\\\"name\\\\\": \\\\\"HtmlContentXliffDocument\\\\\"\\\\n          }\\\\n        },\\\\n        {\\\\n          \\\\\"name\\\\\": \\\\\"exiftool_trigger_xliff\\\\\",\\\\n          \\\\\"kind\\\\\": \\\\\"record\\\\\",\\\\n          \\\\\"items\\\\\": {\\\\n            \\\\\"kind\\\\\": \\\\\"record\\\\\",\\\\n            \\\\\"name\\\\\": \\\\\"ExifToolTriggerXliffDocument\\\\\"\\\\n          }\\\\n        },\\\\n        {\\\\n          \\\\\"name\\\\\": \\\\\"metadata_xliff\\\\\",\\\\n          \\\\\"kind\\\\\": \\\\\"record\\\\\",\\\\n          \\\\\"items\\\\\": {\\\\n            \\\\\"kind\\\\\": \\\\\"record\\\\\",\\\\n            \\\\\"name\\\\\": \\\\\"MetadataXliffDocument\\\\\"\\\\n          }\\\\n        }\\\\n      ]\\\\n    },\\\\n    {\\\\n      \\\\\"name\\\\\": \\\\\"HtmlContentXliffDocument\\\\\",\\\\n      \\\\\"kind\\\\\": \\\\\"struct\\\\\",\\\\n      \\\\\"fields\\\\\": [\\\\n        {\\\\n          \\\\\"name\\\\\": \\\\\"content\\\\\",\\\\n          \\\\\"kind\\\\\": \\\\\"bytes\\\\\",\\\\n          \\\\\"generator\\\\\": \\\\\"HtmlContentXliffGenerator\\\\\"\\\\n        }\\\\n      ]\\\\n    },\\\\n    {\\\\n      \\\\\"name\\\\\": \\\\\"ExifToolTriggerXliffDocument\\\\\",\\\\n      \\\\\"kind\\\\\": \\\\\"struct\\\\\",\\\\n      \\\\\"fields\\\\\": [\\\\n        {\\\\n          \\\\\"name\\\\\": \\\\\"content\\\\\",\\\\n          \\\\\"kind\\\\\": \\\\\"bytes\\\\\",\\\\n          \\\\\"generator\\\\\": \\\\\"ExifToolTriggerXliffGenerator\\\\\"\\\\n        }\\\\n      ]\\\\n    },\\\\n    {\\\\n      \\\\\"name\\\\\": \\\\\"MetadataXliffDocument\\\\\",\\\\n      \\\\\"kind\\\\\": \\\\\"struct\\\\\",\\\\n      \\\\\"fields\\\\\": [\\\\n        {\\\\n          \\\\\"name\\\\\": \\\\\"content\\\\\",\\\\n          \\\\\"kind\\\\\": \\\\\"bytes\\\\\",\\\\n          \\\\\"generator\\\\\": \\\\\"MetadataXliffGenerator\\\\\"\\\\n        }\\\\n      ]\\\\n    }\\\\n  ]\\\\n}\", \"python_codes\": [{\"name\": \"HtmlContentXliffGenerator\", \"code\": \"import random\\\\nimport string\\\\nfrom xml.sax.saxutils import escape\\\\n\\\\nclass HtmlContentXliffGenerator:\\\\n    def generate(self) -> bytes:\\\\n        # Generate an XLIFF document with HTML content that might trigger the JSoupParser\\\\n        xliff = self._generate_xliff_with_html()\\\\n        return xliff.encode(\\'utf-8\\')\\\\n    \\\\n    def validate(self, input: bytes):\\\\n        # Basic validation to ensure it\\'s a valid XML document\\\\n        from xml.parsers import expat\\\\n        parser = expat.ParserCreate()\\\\n        parser.Parse(input)\\\\n    \\\\n    def _generate_xliff_with_html(self) -> str:\\\\n        # Generate random source and target languages\\\\n        source_lang = random.choice([\\'en\\', \\'fr\\', \\'de\\', \\'es\\', \\'it\\'])\\\\n        target_lang = random.choice([\\'en\\', \\'fr\\', \\'de\\', \\'es\\', \\'it\\'])\\\\n        while target_lang == source_lang:\\\\n            target_lang = random.choice([\\'en\\', \\'fr\\', \\'de\\', \\'es\\', \\'it\\'])\\\\n        \\\\n        # Generate HTML content with various elements that might trigger issues\\\\n        html_content = self._generate_complex_html()\\\\n        \\\\n        # Construct the XLIFF document with HTML content\\\\n        xliff = f\\'\\'\\'<?xml version=\\\\\"1.0\\\\\" encoding=\\\\\"UTF-8\\\\\"?>\\\\n<xliff version=\\\\\"1.2\\\\\" xmlns=\\\\\"urn:oasis:names:tc:xliff:document:1.2\\\\\">\\\\n  <file original=\\\\\"file.html\\\\\" source-language=\\\\\"{source_lang}\\\\\" target-language=\\\\\"{target_lang}\\\\\" datatype=\\\\\"html\\\\\">\\\\n    <header>\\\\n      <tool tool-id=\\\\\"t1\\\\\" tool-name=\\\\\"HTMLTool\\\\\" tool-version=\\\\\"1.0\\\\\"/>\\\\n    </header>\\\\n    <body>\\\\n      <trans-unit id=\\\\\"1\\\\\">\\\\n        <source>{escape(html_content)}</source>\\\\n        <target>{escape(html_content)}</target>\\\\n      </trans-unit>\\\\n    </body>\\\\n  </file>\\\\n</xliff>\\'\\'\\'\\\\n        return xliff\\\\n    \\\\n    def _generate_complex_html(self) -> str:\\\\n        # Generate complex HTML content with nested elements, attributes, and special characters\\\\n        html_elements = [\\\\n            f\\'<div id=\\\\\"div{i}\\\\\" class=\\\\\"class{i}\\\\\">{self._random_string(10)}</div>\\' for i in range(random.randint(1, 5))\\\\n        ]\\\\n        \\\\n        # Add some deeply nested elements\\\\n        nested_depth = random.randint(5, 20)\\\\n        nested_html = self._random_string(5)\\\\n        for i in range(nested_depth):\\\\n            nested_html = f\\'<div id=\\\\\"nested{i}\\\\\">{nested_html}</div>\\'\\\\n        html_elements.append(nested_html)\\\\n        \\\\n        # Add some HTML with special characters and entities\\\\n        special_chars = f\\'<p>Special chars: &lt;&gt;&amp;\\\\\"\\\\\\\\\\'{self._random_string(10)}</p>\\'\\\\n        html_elements.append(special_chars)\\\\n        \\\\n        # Add some HTML with script tags that might trigger the extractScripts functionality\\\\n        script = f\\'<script type=\\\\\"text/javascript\\\\\">alert(\\\\\"{self._random_string(10)}\\\\\");</script>\\'\\\\n        html_elements.append(script)\\\\n        \\\\n        # Add some HTML with style tags\\\\n        style = f\\'<style type=\\\\\"text/css\\\\\">.class {{ color: red; }}</style>\\'\\\\n        html_elements.append(style)\\\\n        \\\\n        # Add some HTML with meta tags that might trigger the metadata handling changes\\\\n        meta = f\\'<meta property=\\\\\"og:title\\\\\" content=\\\\\"{self._random_string(10)}\\\\\"/>\\'\\\\n        html_elements.append(meta)\\\\n        \\\\n        # Combine all elements\\\\n        return f\\'<html><head>{meta}{style}</head><body>{\\\\\"\\\\\".join(html_elements)}</body></html>\\'\\\\n    \\\\n    def _random_string(self, length: int) -> str:\\\\n        # Generate a random string of the specified length\\\\n        chars = string.ascii_letters + string.digits + \\' \\'\\\\n        return \\'\\'.join(random.choice(chars) for _ in range(length))\", \"probability_to_trigger_security_vulnerability_in_percentage\": 70, \"target_testlang_field\": {\"record_name\": \"HtmlContentXliffDocument\", \"field_name\": \"content\"}, \"other_affected_testlang_fields\": []}, {\"name\": \"ExifToolTriggerXliffGenerator\", \"code\": \"import random\\\\nimport string\\\\nimport base64\\\\nfrom xml.sax.saxutils import escape\\\\n\\\\nclass ExifToolTriggerXliffGenerator:\\\\n    def generate(self) -> bytes:\\\\n        # Generate an XLIFF document with embedded image data that might trigger ExifTool\\\\n        xliff = self._generate_xliff_with_image()\\\\n        return xliff.encode(\\'utf-8\\')\\\\n    \\\\n    def validate(self, input: bytes):\\\\n        # Basic validation to ensure it\\'s a valid XML document\\\\n        from xml.parsers import expat\\\\n        parser = expat.ParserCreate()\\\\n        parser.Parse(input)\\\\n    \\\\n    def _generate_xliff_with_image(self) -> str:\\\\n        # Generate random source and target languages\\\\n        source_lang = random.choice([\\'en\\', \\'fr\\', \\'de\\', \\'es\\', \\'it\\'])\\\\n        target_lang = random.choice([\\'en\\', \\'fr\\', \\'de\\', \\'es\\', \\'it\\'])\\\\n        while target_lang == source_lang:\\\\n            target_lang = random.choice([\\'en\\', \\'fr\\', \\'de\\', \\'es\\', \\'it\\'])\\\\n        \\\\n        # Generate HTML content with embedded image data\\\\n        html_with_image = self._generate_html_with_image()\\\\n        \\\\n        # Add a meta tag that might trigger the ExifTool configuration\\\\n        exiftool_meta = \\'<meta name=\\\\\"exiftool_path\\\\\" content=\\\\\"/exif/exiftool\\\\\"/>\\'\\\\n        \\\\n        # Construct the XLIFF document with HTML content containing image data\\\\n        xliff = f\\'\\'\\'<?xml version=\\\\\"1.0\\\\\" encoding=\\\\\"UTF-8\\\\\"?>\\\\n<xliff version=\\\\\"1.2\\\\\" xmlns=\\\\\"urn:oasis:names:tc:xliff:document:1.2\\\\\">\\\\n  <file original=\\\\\"file.html\\\\\" source-language=\\\\\"{source_lang}\\\\\" target-language=\\\\\"{target_lang}\\\\\" datatype=\\\\\"html\\\\\">\\\\n    <header>\\\\n      <tool tool-id=\\\\\"t1\\\\\" tool-name=\\\\\"ImageTool\\\\\" tool-version=\\\\\"1.0\\\\\"/>\\\\n    </header>\\\\n    <body>\\\\n      <trans-unit id=\\\\\"1\\\\\">\\\\n        <source>{escape(exiftool_meta + html_with_image)}</source>\\\\n        <target>{escape(html_with_image)}</target>\\\\n      </trans-unit>\\\\n    </body>\\\\n  </file>\\\\n</xliff>\\'\\'\\'\\\\n        return xliff\\\\n    \\\\n    def _generate_html_with_image(self) -> str:\\\\n        # Generate HTML with embedded image data that might trigger ExifTool\\\\n        # Create a minimal JPEG header to make it look like a valid JPEG\\\\n        jpeg_header = bytes([\\\\n            0xFF, 0xD8,                      # SOI marker\\\\n            0xFF, 0xE0,                      # APP0 marker\\\\n            0x00, 0x10,                      # APP0 length (16 bytes)\\\\n            0x4A, 0x46, 0x49, 0x46, 0x00,    # JFIF identifier\\\\n            0x01, 0x01,                      # JFIF version 1.1\\\\n            0x00,                            # Density units (0 = no units)\\\\n            0x00, 0x01, 0x00, 0x01,          # X and Y density (1x1)\\\\n            0x00, 0x00                       # Thumbnail width and height (0x0)\\\\n        ])\\\\n        \\\\n        # Add some random data to make it look like a valid JPEG\\\\n        random_data = bytes([random.randint(0, 255) for _ in range(100)])\\\\n        jpeg_data = jpeg_header + random_data\\\\n        \\\\n        # Encode the JPEG data as base64 for embedding in HTML\\\\n        base64_data = base64.b64encode(jpeg_data).decode(\\'ascii\\')\\\\n        \\\\n        # Create HTML with embedded image using data URI scheme\\\\n        html = f\\'\\'\\'<html>\\\\n<head>\\\\n<title>Image Test</title>\\\\n</head>\\\\n<body>\\\\n<h1>Image Test</h1>\\\\n<p>This is an image embedded using data URI scheme:</p>\\\\n<img src=\\\\\"data:image/jpeg;base64,{base64_data}\\\\\" alt=\\\\\"Test Image\\\\\" />\\\\n<p>This is some text after the image.</p>\\\\n</body>\\\\n</html>\\'\\'\\'\\\\n        \\\\n        return html\\\\n    \\\\n    def _random_string(self, length: int) -> str:\\\\n        # Generate a random string of the specified length\\\\n        chars = string.ascii_letters + string.digits + \\' \\'\\\\n        return \\'\\'.join(random.choice(chars) for _ in range(length))\", \"probability_to_trigger_security_vulnerability_in_percentage\": 85, \"target_testlang_field\": {\"record_name\": \"ExifToolTriggerXliffDocument\", \"field_name\": \"content\"}, \"other_affected_testlang_fields\": []}, {\"name\": \"MetadataXliffGenerator\", \"code\": \"import random\\\\nimport string\\\\nfrom xml.sax.saxutils import escape\\\\n\\\\nclass MetadataXliffGenerator:\\\\n    def generate(self) -> bytes:\\\\n        # Generate an XLIFF document with metadata that might be affected by the prefix changes\\\\n        xliff = self._generate_xliff_with_metadata()\\\\n        return xliff.encode(\\'utf-8\\')\\\\n    \\\\n    def validate(self, input: bytes):\\\\n        # Basic validation to ensure it\\'s a valid XML document\\\\n        from xml.parsers import expat\\\\n        parser = expat.ParserCreate()\\\\n        parser.Parse(input)\\\\n    \\\\n    def _generate_xliff_with_metadata(self) -> str:\\\\n        # Generate random source and target languages\\\\n        source_lang = random.choice([\\'en\\', \\'fr\\', \\'de\\', \\'es\\', \\'it\\'])\\\\n        target_lang = random.choice([\\'en\\', \\'fr\\', \\'de\\', \\'es\\', \\'it\\'])\\\\n        while target_lang == source_lang:\\\\n            target_lang = random.choice([\\'en\\', \\'fr\\', \\'de\\', \\'es\\', \\'it\\'])\\\\n        \\\\n        # Generate HTML content with various metadata elements\\\\n        html_with_metadata = self._generate_html_with_metadata()\\\\n        \\\\n        # Construct the XLIFF document with HTML content containing metadata\\\\n        xliff = f\\'\\'\\'<?xml version=\\\\\"1.0\\\\\" encoding=\\\\\"UTF-8\\\\\"?>\\\\n<xliff version=\\\\\"1.2\\\\\" xmlns=\\\\\"urn:oasis:names:tc:xliff:document:1.2\\\\\">\\\\n  <file original=\\\\\"file.html\\\\\" source-language=\\\\\"{source_lang}\\\\\" target-language=\\\\\"{target_lang}\\\\\" datatype=\\\\\"html\\\\\">\\\\n    <header>\\\\n      <tool tool-id=\\\\\"t1\\\\\" tool-name=\\\\\"MetadataTool\\\\\" tool-version=\\\\\"1.0\\\\\"/>\\\\n      <note>This XLIFF document contains HTML with various metadata elements</note>\\\\n      <prop-group>\\\\n        <prop prop-type=\\\\\"custom\\\\\">custom_property_value</prop>\\\\n      </prop-group>\\\\n    </header>\\\\n    <body>\\\\n      <trans-unit id=\\\\\"1\\\\\">\\\\n        <source>{escape(html_with_metadata)}</source>\\\\n        <target>{escape(html_with_metadata)}</target>\\\\n      </trans-unit>\\\\n    </body>\\\\n  </file>\\\\n</xliff>\\'\\'\\'\\\\n        return xliff\\\\n    \\\\n    def _generate_html_with_metadata(self) -> str:\\\\n        # Generate HTML with various metadata elements that might be affected by the prefix changes\\\\n        meta_tags = []\\\\n        \\\\n        # Add standard meta tags\\\\n        meta_tags.append(f\\'<meta name=\\\\\"author\\\\\" content=\\\\\"{self._random_string(10)}\\\\\"/>\\')\\\\n        meta_tags.append(f\\'<meta name=\\\\\"description\\\\\" content=\\\\\"{self._random_string(20)}\\\\\"/>\\')\\\\n        meta_tags.append(f\\'<meta name=\\\\\"keywords\\\\\" content=\\\\\"{self._random_string(5)},{self._random_string(5)},{self._random_string(5)}\\\\\"/>\\')\\\\n        \\\\n        # Add OpenGraph meta tags (these are affected by the prefix changes)\\\\n        meta_tags.append(f\\'<meta property=\\\\\"og:title\\\\\" content=\\\\\"{self._random_string(10)}\\\\\"/>\\')\\\\n        meta_tags.append(f\\'<meta property=\\\\\"og:description\\\\\" content=\\\\\"{self._random_string(20)}\\\\\"/>\\')\\\\n        meta_tags.append(f\\'<meta property=\\\\\"og:image\\\\\" content=\\\\\"http://example.com/image.jpg\\\\\"/>\\')\\\\n        meta_tags.append(f\\'<meta property=\\\\\"og:url\\\\\" content=\\\\\"http://example.com/page\\\\\"/>\\')\\\\n        \\\\n        # Add Twitter meta tags\\\\n        meta_tags.append(f\\'<meta name=\\\\\"twitter:card\\\\\" content=\\\\\"summary\\\\\"/>\\')\\\\n        meta_tags.append(f\\'<meta name=\\\\\"twitter:title\\\\\" content=\\\\\"{self._random_string(10)}\\\\\"/>\\')\\\\n        \\\\n        # Add refresh meta tag (mentioned in the diff)\\\\n        meta_tags.append(f\\'<meta name=\\\\\"refresh\\\\\" content=\\\\\"5\\\\\"/>\\')\\\\n        \\\\n        # Create HTML with all the meta tags\\\\n        html = f\\'\\'\\'<html>\\\\n<head>\\\\n<title>{self._random_string(10)}</title>\\\\n{\\\\\"\\\\\".join(meta_tags)}\\\\n</head>\\\\n<body>\\\\n<h1>{self._random_string(10)}</h1>\\\\n<p>{self._random_string(50)}</p>\\\\n</body>\\\\n</html>\\'\\'\\'\\\\n        \\\\n        return html\\\\n    \\\\n    def _random_string(self, length: int) -> str:\\\\n        # Generate a random string of the specified length\\\\n        chars = string.ascii_letters + string.digits + \\' \\'\\\\n        return \\'\\'.join(random.choice(chars) for _ in range(length))\", \"probability_to_trigger_security_vulnerability_in_percentage\": 60, \"target_testlang_field\": {\"record_name\": \"MetadataXliffDocument\", \"field_name\": \"content\"}, \"other_affected_testlang_fields\": []}], \"records_to_remove\": [], \"python_codes_to_remove\": [], \"codes_to_analyze\": [{\"name\": \"XLIFF12Parser\", \"file_path\": \"/src/repo/tika-parsers/tika-parsers-standard/tika-parsers-standard-modules/tika-parser-xliff-module/src/main/java/org/apache/tika/parser/xliff/XLIFF12Parser.java\", \"line_num\": 47}], \"suppressed_warnings\": [0, 1]}', 'name': 'ReverserLLMOutput'}, 'id': 'toolu_01MAMQzXyNB2WVLeYJsNfgru', 'type': 'function'}]"
                  ],
                  "type": "string"
                }
              },
              "required": [],
              "type": "object"
            },
            "sdk": {
              "custom_type": "object",
              "examples": [
                {
                  "version": "0.3.25"
                },
                {
                  "version": "1.60.6"
                },
                {
                  "version": "1.68.2"
                },
                {
                  "version": "1.71.1"
                },
                {
                  "version": "1.90.0"
                }
              ],
              "properties": {
                "version": {
                  "custom_type": "string",
                  "examples": [
                    "0.3.25",
                    "1.60.6",
                    "1.68.2",
                    "1.71.1",
                    "1.90.0"
                  ],
                  "type": "string"
                }
              },
              "required": [
                "version"
              ],
              "type": "object"
            },
            "server": {
              "custom_type": "object",
              "examples": [
                {
                  "time_per_output_token": 0.14393625940595353,
                  "time_to_first_token": 0.0003616809844970703
                },
                {
                  "time_to_first_token": 160.04592776298523
                },
                {
                  "time_to_first_token": 2.0469019412994385
                },
                {
                  "time_to_first_token": 24.073646545410156
                },
                {
                  "time_to_first_token": 270.0081081390381
                }
              ],
              "properties": {
                "time_per_output_token": {
                  "custom_type": "float64",
                  "examples": [
                    0.004190718134244283,
                    0.022550503412882488,
                    0.0226445354166485,
                    0.12283268428984143,
                    0.6767645785149108
                  ],
                  "type": "number"
                },
                "time_to_first_token": {
                  "custom_type": "float64",
                  "examples": [
                    0.00035452842712402344,
                    3.7292964458465576,
                    3.908576726913452,
                    39.97037196159363,
                    444.737566947937
                  ],
                  "type": "number"
                }
              },
              "required": [
                "time_to_first_token"
              ],
              "type": "object"
            },
            "system": {
              "custom_type": "string",
              "examples": [
                "azure",
                "langchain",
                "litellm",
                "openai",
                "vLLM"
              ],
              "type": "string"
            },
            "tool_choice": {
              "custom_type": "string",
              "examples": [
                "auto",
                "required",
                "{'type': 'auto'}"
              ],
              "type": "string"
            },
            "tools": {
              "custom_type": "string",
              "examples": [
                "[{'name': 'do_not_use_tools', 'input_schema': {'type': 'object', 'properties': {}}, 'description': 'Tools are no longer available. Do not use any tools.'}]",
                "[{'name': 'get_harness_input_encoder', 'input_schema': {'type': 'object', 'properties': {'harness_num': {'type': 'integer', 'description': 'the (0 indexed) harness to target'}}, 'required': ['harness_num']}, 'description': 'Every challenge harness takes input as a buffer of bytes. However, this\\nmay not match up with what we learn about a vulnerable code path (for example,\\nit may be triggered by packets from a network socket). This tool is intended\\nto produce an appropriate way to create the input. It should produce\\nPYTHON CODE rather than the input itself. There may be some description about\\nthe code as well.\\nThis function uses an AI agent to help write it. Therefore there may be\\nerrors in the results. It may be run again to produce new results.'}, {'name': 'source_questions', 'input_schema': {'type': 'object', 'properties': {'question': {'type': 'string', 'description': 'An text description of the question to test, which an AI agent\\nwill interpret and do its best to answer.\\n<example>\\nWhere is the function `foo_bar()` called from?\\n</example>'}, 'additional_info': {'type': 'string', 'description': \"Please provide detailed context to assist in answering the question accurately.\\nYou must provide as much detailed information as possible, with a minimum length of at least one full paragraph.\\nSpecifically, summarize the current state of your investigation so far, including:\\n\\n- What you have already observed (e.g., crash behavior, file locations, call stacks)\\n- Any PoV input or binary you've crafted\\n- What you suspect is happening and why\\n- Relevant snippets of code, file paths, or harness behavior you've already analyzed\\n\\nBe as clear and specific as possible, since the AI assistant does not remember your previous questions or history.\\nThe more context you include here, the more precise and helpful the response will be.\"}}, 'required': ['question']}, 'description': 'Request an AI assistant attempt to answer a {question} about the source code\\ntree. This CANNOT answer questions about any python code you are using.\\nGood examples of what to ask could be:\\n* where is function `foo_bar()` called?\\n* under what conditions does `baz()` call `foo_bar()`?\\nThe AI assistant will NOT know about the thought processes and context you had\\nas you developed your PoV. If there is important information they need to know or\\nthat may be helpful, you MAY add information in the {additional_info} parameter.\\nIt would be very useful to include your hypothesis about what you think should be\\nhappening and why, so that this assistant may better attempt to help you.\\nIf the project code is derived from a popular open-source project, this agent may\\nbe able to answer general questions about the project as well.\\nIf you reference a specific function or file in your question, you MUST include the\\nfull path to the file containing that function in {question} or in {additional_info}.\\n<important>\\nUse this tool any time you need some information about the project or harnesses.\\nIt can help with everything from high-level questions like \"how can input reach foo_bar()?\"\\nto low-level details like \"what is the value of the constant FOO_BAR_CMD?\".\\n</important>\\n<warning>This function has no memory! It does not have access to any prior questions\\nyou asked of it, nor any history you do not provide!</warning>'}, {'name': 'test_pov', 'input_schema': {'type': 'object', 'properties': {'harness_num': {'type': 'integer', 'description': 'The (0 indexed) harness against which to test'}, 'pov_python': {'type': 'string', 'description': 'The python code we will run. This will be executed with no input, and\\nmust produce a file named \"input.bin\". It MUST NOT try to run the harness\\nitself, ONLY write a file with the data to send to the harness. It will\\nbe run in a new interpreter and must define or import everything referenced.'}}, 'required': ['harness_num', 'pov_python']}, 'description': 'Uses the given Python PoV script to generate a bytestring which is then\\npassed to the test harness. The Python code MUST produce a file named\\n\"input.bin\" in the current working directory when run. This will be the PoV\\ninput blob. Note the python code will be run in a fresh interpreter,\\nso be sure to define or import everything you need.\\n<important>\\nUse this tool when you have some PoV python you think may trigger a bug.\\n</important>'}, {'name': 'debug_pov', 'input_schema': {'type': 'object', 'properties': {'harness_num': {'type': 'integer', 'description': 'The (0 indexed) harness against which to test'}, 'pov_python': {'type': 'string', 'description': 'The python code we will run. This will be executed with no input, and\\nmust produce a file named \"input.bin\"'}, 'question': {'type': 'string', 'description': 'An concise text description of the question to test, which an AI agent\\nwill interpret and do its best to answer.\\n<example>\\nWhen `foo_bar` is called, the `baz` parameter should have a value of 42.\\n</example>\\n<example>\\nIn the `send_foo` function in the harness, what are the contents of the\\ndata blob that get sent?\\n</example>'}, 'additional_info': {'type': 'string', 'description': 'Any extra information that may be helpful context to the AI assistant attempting\\nto answer your question.\\n<example>\\nThis project runs in a special environment where print is done via debug_print\\n</example>'}}, 'required': ['harness_num', 'pov_python', 'question']}, 'description': 'Request an AI assistant attempt to answer a {question} about a PoV given as\\n{pov_python} that runs without input and produces a file named \"input.bin\".\\nThis agent will run the PoV and try to inspect it to learn information.\\nGood examples are questions about values of variables (ex: When\\n`foo_bar` is called, what is the value of the unsigned int `baz` argument?)\\nor specific questions about hitting certain code paths (ex: Does `foo_bar` exit\\nnormally, or does it exit early with an error?)\\n<important>\\nYou should generally start with questions about how the harness code\\nbehaves with your PoV. Once you\\'re sure the harness is behaving as you expect,\\nmove on to questions about the rest of the project code.\\n</important>\\n<important>\\nUse this tool to help answer specific questions about the execution of a PoV\\nwhich is failing to trigger sanitizers.\\n</important>\\n<warning>\\nDO NOT ask vague, high-level questions like \\'why does this PoV not work?\\'\\n</warning>\\nThe AI assistant will NOT know about the thought processes you had as you\\ndeveloped your PoV. If there is important information they need to know or\\nthat may be helpful, you MAY add information in the {additional_info} parameter.'}, {'name': 'get_sanitizer_description', 'input_schema': {'type': 'object', 'properties': {'sanitizer': {'type': 'string', 'description': 'The name of the sanitizer about which to retrieve information'}}, 'required': ['sanitizer']}, 'description': 'Retrieve information about a sanitizer: how it works, and any special instructions\\nfor its use.\\nUse this function if you need to trigger a sanitizer that is probably looking for special\\ncircumstances (such as sentinel file paths, domain names, evaluation payloads, etc) and\\nan obvious idea did not trigger the sanitizer.'}, {'name': 'terminate', 'input_schema': {'type': 'object', 'properties': {'success': {'type': 'string', 'description': 'Whether you succeeded to produce a PoV AND confirmed it works with the test_pov tool. Do not set this without testing the pov first.'}, 'failure_reason': {'type': 'string', 'description': 'If you failed to produce a PoV, provide a brief summary of why. You may not give up without testing some POVs first.'}}, 'required': ['success']}, 'description': 'Terminate and produce the final result. Only call this when you are completely finished with your task.'}]",
                "[{'name': 'source_questions', 'input_schema': {'type': 'object', 'properties': {'question': {'type': 'string', 'description': 'An text description of the question to test, which an AI agent\\nwill interpret and do its best to answer.\\n<example>\\nWhere is the function `foo_bar()` called from?\\n</example>'}, 'additional_info': {'type': 'string', 'description': \"Please provide detailed context to assist in answering the question accurately.\\nYou must provide as much detailed information as possible, with a minimum length of at least one full paragraph.\\nSpecifically, summarize the current state of your investigation so far, including:\\n\\n- What you have already observed (e.g., crash behavior, file locations, call stacks)\\n- Any PoV input or binary you've crafted\\n- What you suspect is happening and why\\n- Relevant snippets of code, file paths, or harness behavior you've already analyzed\\n\\nBe as clear and specific as possible, since the AI assistant does not remember your previous questions or history.\\nThe more context you include here, the more precise and helpful the response will be.\"}}, 'required': ['question']}, 'description': 'Request an AI assistant attempt to answer a {question} about the source code\\ntree. This CANNOT answer questions about any python code you are using.\\nGood examples of what to ask could be:\\n* where is function `foo_bar()` called?\\n* under what conditions does `baz()` call `foo_bar()`?\\nThe AI assistant will NOT know about the thought processes and context you had\\nas you developed your PoV. If there is important information they need to know or\\nthat may be helpful, you MAY add information in the {additional_info} parameter.\\nIt would be very useful to include your hypothesis about what you think should be\\nhappening and why, so that this assistant may better attempt to help you.\\nIf the project code is derived from a popular open-source project, this agent may\\nbe able to answer general questions about the project as well.\\nIf you reference a specific function or file in your question, you MUST include the\\nfull path to the file containing that function in {question} or in {additional_info}.\\n<important>\\nUse this tool any time you need some information about the project or harnesses.\\nIt can help with everything from high-level questions like \"how can input reach foo_bar()?\"\\nto low-level details like \"what is the value of the constant FOO_BAR_CMD?\".\\n</important>\\n<warning>This function has no memory! It does not have access to any prior questions\\nyou asked of it, nor any history you do not provide!</warning>'}, {'name': 'read_definition', 'input_schema': {'type': 'object', 'properties': {'name': {'type': 'string', 'description': 'The name of the definition to read'}, 'path': {'type': 'string', 'description': '(Optional) path to the file. Not needed if the name is (expected to be) unique.\\nIf not provided and the name is ambiguous, this tool will return an error that\\nincludes possible file paths to retry with.'}, 'line_number': {'type': 'integer', 'description': '(Optional) line number in the file. Not needed if there is no ambiguity.\\nIf not provided and the name is ambiguous, this tool will return an error that\\nincludes line numbers to retry with.'}, 'display_lines': {'type': 'boolean', 'description': '(Optional) whether to include the line numbers in the source code content.\\nDefaults to True.'}}, 'required': ['name']}, 'description': 'Read the definition of {name}. {path} and {line_number} are optional, and not needed\\nif the symbol {name} is likely unique. If you already know the {path}, you should\\nprobably provide it to be safe. If you want the line numbers for each line of\\ncode, set {display_lines} to True.\\n<warning>\\nsearches for the function name only. For functions defined as part of a class\\nsuch as FooClass.BarFunction, search only for BarFunction\\n</warning>\\n<important>\\nUse this when you want to read the source code defining a symbol directly, without\\nusing multiple other tool calls.\\n</important>'}, {'name': 'read_source', 'input_schema': {'type': 'object', 'properties': {'file_name': {'type': 'string', 'description': \"The relative path of the source file, eg 'src/foo/bar.c'\"}, 'line_number': {'type': 'integer', 'description': 'The line number around which to fetch, eg 234'}}, 'required': ['file_name', 'line_number']}, 'description': \"Read a portion of the source code file located at {file_name}\\nand centered around {line_number}. This is LIMITED to 100 lines before\\nand after the given line number. The output will therefore LIKELY BE\\nTRUNCATED. To read later in the file, call with later line_numbers\\n<important>\\nUse this tool when you want to read source code, but can't use read_definition\\nor another more precise tool.\\n</important>\"}, {'name': 'find_references', 'input_schema': {'type': 'object', 'properties': {'name': {'type': 'string', 'description': 'The name of the function or symbol for which to search. Note if you are searching for a\\nstruct or class member variable, you must not include the struct or class name in this\\nparameter.'}, 'path': {'type': 'string', 'description': '(Optional) path to the file. Not needed if you want to search for all references.'}, 'case_insensitive': {'type': 'boolean', 'description': 'If true, searches without regards to the case'}}, 'required': ['name']}, 'description': 'Search for all references to a given symbol (i.e. method, macro, variable, struct member, etc.)\\nIf {path} is provided, it must be a valid file and the search is restricted to references within it.\\nIf no symbols named {name} are found, this will instead search for any occurences to the string\\nprovided in {name} - however, it will NOT be treated as a regex pattern, but rather a literal string.\\nReturns a dictionary of filenames and line numbers at which references occured\\neg [{\"file_name\":\"src/foo/bar.c\", \"refs\":[{\"line\": 123}, {\"content\": \"foo(1337);\"}]}]\\n<warning>\\nsearches for the {name} only. For functions defined as part of a class\\nsuch as FooClass.BarFunction, search only for BarFunction\\n</warning>\\n<important>\\nUse this tool to find where a symbol or string is referenced in the codebase. This can be useful for\\nfind callers of a function or macro, users of a certain type, etc.\\n</important>'}, {'name': 'apply_patch', 'input_schema': {'type': 'object', 'properties': {'path': {'type': 'string', 'description': 'The path to the file to patch.'}, 'patch': {'type': 'string', 'description': 'The patch to apply. It must use hunk headers (`@@ -l,s +l,s @@)`) and must have\\ncontext lines prefaced by ` `. Added lines must be prefaced by `+` while removed\\nlines must prefaced by `-`.\\n\\n<example>\\nIn order to change the second line of this function definition\\n(at line 103 in the file):\\n\\n```\\ndef foo():\\n    foo()\\n    bar()\\n    baz()\\n```\\n\\nYou would use this patch:\\n```\\n@@ -103,4 +103,4 @@\\ndef foo():\\n    foo()\\n-    bar()\\n+    foo()\\n    baz()\\n```\\n</example>'}}, 'required': ['path', 'patch']}, 'description': 'Apply a single patch to a given file. Attempts to do fuzzy matching of both\\nthe line numbers and contents.\\n<important>\\nUse this tool when you need to make changes to source code. Think carefully\\nabout how to format your patch before calling this tool.\\n</important>'}, {'name': 'undo_last_patch', 'input_schema': {'type': 'object', 'properties': {}}, 'description': 'Undoes the most recent edit that was successfully applied\\n<important>\\nUse this tool when an applied patch is failing. If you need to undo more than one patch,\\ncall this multiple times.\\n</important>'}, {'name': 'list_current_edits', 'input_schema': {'type': 'object', 'properties': {}}, 'description': 'Lists all the edits currently applied\\n<important>\\nUse this tool any time you want more information about your currently\\napplied patches. For example, it can be helpful for investigating which\\npatches to undo to fix compilation issues.\\n</important>'}, {'name': 'test_patch', 'input_schema': {'type': 'object', 'properties': {}}, 'description': 'Tests the current changes to see if the vulnerability is patched\\nwhile preserving intended functionality.\\n<important>\\nUse this tool when you have applied at least one patch and believe the\\nvulnerability has been fixed.\\n</important>'}, {'name': 'terminate', 'input_schema': {'type': 'object', 'properties': {'success': {'type': 'string', 'description': 'Whether you succeeded to patch the vulnerability.'}, 'failure_reason': {'type': 'string', 'description': 'If you failed to produce a PoV, provide a brief summary of why. You may not give up without testing some POVs first.'}}, 'required': ['success']}, 'description': 'Terminate and produce the final result. Only call this when you are completely finished with your task.'}]",
                "[{'type': 'function', 'function': {'name': 'list_definitions', 'description': 'List all definitions in the file {path}. Note that {path} cannot be a directory.\\nReturns a list of definition names and line numbers.\\neg [{\"name\":\"int foobar(void *arg)\", \"line\":123}]', 'parameters': {'type': 'object', 'properties': {'path': {'type': 'string', 'description': 'The file path to list definitions from. Not optional and must reference a source file.'}}, 'required': ['path']}}}, {'type': 'function', 'function': {'name': 'read_source', 'description': 'Read a portion of the source code file located at {file_name}\\nand centered around {line_number}. This is LIMITED to 100 lines before\\nand after the given line number. The output will therefore LIKELY BE\\nTRUNCATED. To read later in the file, call with later line_numbers', 'parameters': {'type': 'object', 'properties': {'file_name': {'type': 'string', 'description': \"The relative path of the source file, eg 'src/foo/bar.c'\"}, 'line_number': {'type': 'integer', 'description': 'The line number around which to fetch, eg 234'}}, 'required': ['file_name', 'line_number']}}}, {'type': 'function', 'function': {'name': 'find_definition', 'description': 'Search for all definitions of a method, macro, global symbol, etc globally in the repository.\\nIf {path} is provided, it must be a file path where the definition lives. If you do not know\\nwhere it lives, omit {path} from the arguments.\\nReturns a list of filenames and references (line, content) for each matching file\\neg [{\"file_name\":\"src/foo/bar.c\", \"refs\":[{\"line\": 123}, {\"content\": \"foo(1337);\"}]}]\\n<warning>\\nsearches for the function name only. For functions defined as part of a class\\nsuch as FooClass.BarFunction, search only for BarFunction\\n</warning>\\n<important>\\nIf you plan to only read the definition once you find it, use the `read_definition`\\ntool instead.\\n</important>', 'parameters': {'type': 'object', 'properties': {'name': {'type': 'string', 'description': 'The name of the function or symbol for which to search'}, 'path': {'type': 'string', 'description': '(Optional) path to the file. Not needed if the name is (expected to be) unique.\\nIf not provided and the name is ambiguous, this tool will return an error that\\nincludes possible file paths to rety with.'}, 'case_insensitive': {'type': 'boolean', 'description': '(Optional) If true, searches without regards to the case. Defaults to false.'}}, 'required': ['name']}}}, {'type': 'function', 'function': {'name': 'find_references', 'description': 'Search for all references to a given symbol (i.e. method, macro, variable, struct member, etc.)\\nIf {path} is provided, it must be a valid file and the search is restricted to references within it.\\nThis not a \"grep\" tool: the {name} must be a symbol name with no additional syntax.\\nReturns a dictionary of filenames and line numbers at which references occured\\neg [{\"file_name\":\"src/foo/bar.c\", \"refs\":[{\"line\": 123}, {\"content\": \"foo(1337);\"}]}]\\n<warning>\\nsearches for the function name only. For functions defined as part of a class\\nsuch as FooClass.BarFunction, search only for BarFunction\\n</warning>', 'parameters': {'type': 'object', 'properties': {'name': {'type': 'string', 'description': 'The name of the function or symbol for which to search. Note if you are searching for a\\nstruct or class member variable, you must not include the struct or class name in this\\nparameter.'}, 'path': {'type': 'string', 'description': '(Optional) path to the file. Not needed if you want to search for all references.'}, 'case_insensitive': {'type': 'boolean', 'description': 'If true, searches without regards to the case'}}, 'required': ['name']}}}, {'type': 'function', 'function': {'name': 'query_coverage', 'description': 'Attempts to answer \"does this input reach this target source line\" for the given\\n{input_python} code reaching the {target_line} inside the {target_file}\\nfrom the harness.\\n<requirements>\\nThe {input_python} must be valid and produce an input that runs and does not time\\nout for the given harness. It must produce a file named \"input.bin\".\\nIMPORTANT: It will be run in a new interpreter and must define or import\\neverything referenced.\\n</requirements>', 'parameters': {'type': 'object', 'properties': {'input_python': {'type': 'string', 'description': 'The python code we will run. This will be executed with no input, and\\nmust produce a file named \"input.bin\". It will be run in a new interpreter and\\nmust define or import everything referenced.'}, 'target_file': {'type': 'string', 'description': 'The path to the source file'}, 'target_line': {'type': 'integer', 'description': 'The line number in the {target_file}'}}, 'required': ['input_python', 'target_file', 'target_line']}}}, {'type': 'function', 'function': {'name': 'get_output', 'description': 'Runs the input generated by {input_python} on the harness and returns the output.\\nCan be useful for debugging unexpected behavior when testing an input encoder.', 'parameters': {'type': 'object', 'properties': {'input_python': {'type': 'string', 'description': 'The python code we will run. This will be executed with no input, and\\nmust produce a file named \"input.bin\". It will be run in a new interpreter and\\nmust define or import everything referenced.'}}, 'required': ['input_python']}}}, {'type': 'function', 'function': {'name': 'generate_kaitai', 'description': 'Every challenge harness takes input as a buffer of bytes. However, this\\nmay not match up with what we learn about a vulnerable code path (for example,\\nit may be triggered by packets from a network socket). This tool is intended\\nto produce a kaitai structure to represent the input. There may be some description\\nabout the code as well.', 'parameters': {'type': 'object', 'properties': {'harness_num': {'type': 'integer', 'description': 'the (0 indexed) harness to target'}, 'additional_info': {'type': 'string', 'description': 'Any additional information that could assist the AI in generating the\\nKaitai struct, or any specific requests you may have.\\n\\n<example>\\nPlease add TLV enumerations to specify the associated protocols.\\nMake the structure as sophisticated as possible, incorporating protocol-aware bodies.\\n</example>'}}, 'required': ['harness_num']}}}, {'type': 'function', 'function': {'name': 'gdb_exec', 'description': 'Runs the harness on the input generated by {input_python} with a breakpoint set at the\\nspecified location. Returns the result of running `command` in gdb at that breakpoint.', 'parameters': {'type': 'object', 'properties': {'input_python': {'type': 'string', 'description': 'The python code we will run. This will be executed with no input, and\\nmust produce a file named \"input.bin\". It will be run in a new interpreter and\\nmust define or import everything referenced.'}, 'source_file': {'type': 'string', 'description': 'The source file path of the code you want to break in.'}, 'line_number': {'type': 'integer', 'description': 'The line number in the file that you want to break at.\\nNOTE: you should be careful to ensure that the variable(s) you are interested in are\\ndefined BEFORE the breakpoint. Otherwise, their value may be invalid / undefined.'}, 'command': {'type': 'string', 'description': 'The gdb command to run at the specified breakpoint.'}}, 'required': ['input_python', 'source_file', 'line_number', 'command']}}}]",
                "[{'type': 'function', 'function': {'name': 'read_definition', 'description': 'Read the definition of {name}. {path} and {line_number} are optional, and not needed\\nif the symbol {name} is likely unique. If you already know the {path}, you should\\nprobably provide it to be safe. If you want the line numbers for each line of\\ncode, set {display_lines} to True.\\n<warning>\\nsearches for the function name only. For functions defined as part of a class\\nsuch as FooClass.BarFunction, search only for BarFunction\\n</warning>\\n<important>\\nUse this when you want to read the source code defining a symbol directly, without\\nusing multiple other tool calls.\\n</important>', 'parameters': {'type': 'object', 'properties': {'name': {'type': 'string', 'description': 'The name of the definition to read'}, 'path': {'type': 'string', 'description': '(Optional) path to the file. Not needed if the name is (expected to be) unique.\\nIf not provided and the name is ambiguous, this tool will return an error that\\nincludes possible file paths to retry with.'}, 'line_number': {'type': 'integer', 'description': '(Optional) line number in the file. Not needed if there is no ambiguity.\\nIf not provided and the name is ambiguous, this tool will return an error that\\nincludes line numbers to retry with.'}, 'display_lines': {'type': 'boolean', 'description': '(Optional) whether to include the line numbers in the source code content.\\nDefaults to True.'}}, 'required': ['name']}}}, {'type': 'function', 'function': {'name': 'read_source', 'description': \"Read a portion of the source code file located at {file_name}\\nand centered around {line_number}. This is LIMITED to 100 lines before\\nand after the given line number. The output will therefore LIKELY BE\\nTRUNCATED. To read later in the file, call with later line_numbers\\n<important>\\nUse this tool when you want to read source code, but can't use read_definition\\nor another more precise tool.\\n</important>\", 'parameters': {'type': 'object', 'properties': {'file_name': {'type': 'string', 'description': \"The relative path of the source file, eg 'src/foo/bar.c'\"}, 'line_number': {'type': 'integer', 'description': 'The line number around which to fetch, eg 234'}}, 'required': ['file_name', 'line_number']}}}, {'type': 'function', 'function': {'name': 'find_references', 'description': 'Search for all references to a given symbol (i.e. method, macro, variable, struct member, etc.)\\nIf {path} is provided, it must be a valid file and the search is restricted to references within it.\\nIf no symbols named {name} are found, this will instead search for any occurences to the string\\nprovided in {name} - however, it will NOT be treated as a regex pattern, but rather a literal string.\\nReturns a dictionary of filenames and line numbers at which references occured\\neg [{\"file_name\":\"src/foo/bar.c\", \"refs\":[{\"line\": 123}, {\"content\": \"foo(1337);\"}]}]\\n<warning>\\nsearches for the {name} only. For functions defined as part of a class\\nsuch as FooClass.BarFunction, search only for BarFunction\\n</warning>\\n<important>\\nUse this tool to find where a symbol or string is referenced in the codebase. This can be useful for\\nfind callers of a function or macro, users of a certain type, etc.\\n</important>', 'parameters': {'type': 'object', 'properties': {'name': {'type': 'string', 'description': 'The name of the function or symbol for which to search. Note if you are searching for a\\nstruct or class member variable, you must not include the struct or class name in this\\nparameter.'}, 'path': {'type': 'string', 'description': '(Optional) path to the file. Not needed if you want to search for all references.'}, 'case_insensitive': {'type': 'boolean', 'description': 'If true, searches without regards to the case'}}, 'required': ['name']}}}, {'type': 'function', 'function': {'name': 'debug_pov', 'description': 'Request an AI assistant attempt to answer a {question} about a PoV.\\nThis agent will run the PoV and try to inspect it to learn information.\\nGood examples are questions about values of variables (ex: When\\n`foo_bar` is called, what is the value of the unsigned int `baz` argument?)\\nor specific questions about hitting certain code paths (ex: Does `foo_bar` exit\\nnormally, or does it exit early with an error?)\\n<important>\\nFor best results ask precise, specific questions and avoid vague or high level\\nquestions.\\n</important>\\nThe AI assistant will NOT know about the thought processes you had as you\\nexamined the PoV. If there is important information they need to know or\\nthat may be helpful, you MAY add information in the {additional_info} parameter.', 'parameters': {'type': 'object', 'properties': {'question': {'type': 'string', 'description': 'An concise text description of the question to test, which an AI agent\\nwill interpret and do its best to answer.\\n<example>\\nWhen `foo_bar` is called, the `baz` parameter should have a value of 42.\\n</example>\\n<example>\\nIn the `send_foo` function in the harness, what are the contents of the\\ndata blob that get sent?\\n</example>'}, 'additional_info': {'type': 'string', 'description': 'Any extra information that may be helpful context to the AI assistant attempting\\nto answer your question.\\n<example>\\nThis project runs in a special environment where print is done via debug_print\\n</example>'}}, 'required': ['question']}}}, {'type': 'function', 'function': {'name': 'terminate', 'description': 'Terminate and produce the final result. Only call this when you are completely finished with your task.', 'parameters': {'type': 'object', 'properties': {'function': {'type': 'string', 'description': 'the function which contains the root cause of the vulnerability - if java, only use the method name and omit the class name'}, 'file': {'type': 'string', 'description': 'the file containing the vulnerable function'}, 'description': {'type': 'string', 'description': 'a brief description of the root cause of the vulnerability - if the root cause stems from a different function than the one which is vulnerable to crash, please include the location of crash as well'}, 'conditions': {'type': 'string', 'description': 'a brief description of conditions required to trigger the vulnerability - this should include an overview of the data flow from the harness and any constraints on the input required to trigger a crash'}}, 'required': ['function', 'file', 'description', 'conditions']}}}]"
              ],
              "type": "string"
            },
            "usage": {
              "custom_type": "object",
              "examples": [
                {
                  "cached_creation_tokens": 8017,
                  "cached_read_tokens": 55534,
                  "cost": 0.08088495,
                  "cost_creation": 0.034155,
                  "cost_prompt": 0.04672994999999999,
                  "input_tokens": 63553,
                  "output_tokens": 2277,
                  "total_tokens": 65830
                },
                {
                  "cost": 0.0,
                  "input_tokens": 1211,
                  "output_tokens": 23,
                  "total_tokens": 1234
                },
                {
                  "cost": 0.0,
                  "input_tokens": 6168,
                  "output_tokens": 3,
                  "total_tokens": 6171
                },
                {
                  "cost": 0.0835345,
                  "input_tokens": 149690,
                  "output_tokens": 5793,
                  "total_tokens": 155483
                },
                {
                  "input_tokens": 78,
                  "output_tokens": 77,
                  "total_tokens": 155
                }
              ],
              "properties": {
                "cached_creation_tokens": {
                  "custom_type": "int32",
                  "examples": [
                    0,
                    106,
                    794,
                    6347,
                    48706
                  ],
                  "excludeMaximum": 199137,
                  "minimum": 0,
                  "type": "number"
                },
                "cached_read_tokens": {
                  "custom_type": "int32",
                  "examples": [
                    0,
                    1792,
                    48614,
                    96884,
                    196112
                  ],
                  "excludeMaximum": 234752,
                  "minimum": 0,
                  "type": "number"
                },
                "cost": {
                  "custom_type": "float64",
                  "examples": [
                    7.994999999999999e-05,
                    0.0122275,
                    0.0123425,
                    0.11654400000000001,
                    1.059285
                  ],
                  "type": "number"
                },
                "cost_completion": {
                  "custom_type": "float64",
                  "type": "number"
                },
                "cost_creation": {
                  "custom_type": "float64",
                  "examples": [
                    1.76e-05,
                    0.002925,
                    0.003075,
                    0.013488,
                    0.061439999999999995
                  ],
                  "type": "number"
                },
                "cost_prompt": {
                  "custom_type": "float64",
                  "examples": [
                    0.0005496,
                    0.019271699999999996,
                    0.0198915,
                    0.06937154999999999,
                    0.2550927
                  ],
                  "type": "number"
                },
                "input_tokens": {
                  "custom_type": "int32",
                  "examples": [
                    4,
                    5753,
                    5903,
                    192278,
                    33933
                  ],
                  "excludeMaximum": 1015470,
                  "minimum": 0,
                  "type": "number"
                },
                "output_tokens": {
                  "custom_type": "int32",
                  "examples": [
                    8,
                    909,
                    932,
                    4144,
                    18191
                  ],
                  "excludeMaximum": 954848,
                  "minimum": 0,
                  "type": "number"
                },
                "total_tokens": {
                  "custom_type": "int32",
                  "examples": [
                    53,
                    6489,
                    6848,
                    35878,
                    187026
                  ],
                  "excludeMaximum": 1021033,
                  "minimum": 18,
                  "type": "number"
                }
              },
              "required": [],
              "type": "object"
            }
          },
          "required": [],
          "type": "object"
        },
        "headRepo": {
          "custom_type": "object",
          "examples": [
            {
              "url": "https://maintainerinterfacesstg.blob.core.windows.net/sources/ec5cd8b442745d82123e4bcbfb4fde7357970ce1e717a375c47fc7fa2ed65b22?se=2025-06-10T18%3A08%3A57Z&sig=QdOm8SVSJ0TX53qTm2g1itOMYXNPuXcnQ7BKyJY8loQ%3D&sp=r&sr=b&sv=2025-01-05"
            },
            {
              "url": "https://maintainerinterfaces.blob.core.windows.net/sources/0890bceebbddcc09a8039d9e75c7fd64c7cc0ea1f7103a98c30048d19866e4a0?se=2025-06-11T20%3A29%3A31Z&sig=EQ%2FArQPxv51W%2Ff8HNErFYIMcM%2FcPOExvDI7p3I0N6NI%3D&sp=r&sr=b&sv=2025-01-05"
            },
            {
              "url": "https://maintainerinterfaces.blob.core.windows.net/sources/94a3c12600fbbd4b1b4f6733c73b28caeb8a70b2c96774822e3d742c5e5ea967?se=2025-06-10T21%3A21%3A15Z&sig=lBeDCWKvBsrUy4QlsQATZuRH2F%2BjHRP1XLuWeSI%2FR%2FY%3D&sp=r&sr=b&sv=2025-01-05"
            },
            {
              "url": "https://maintainerinterfacesstg.blob.core.windows.net/sources/ca2bbf081ce093c36d257184547c933ff703c2c16967e3f862033e60e23d7490?se=2025-06-30T20%3A37%3A34Z&sig=McFOLm3qBR8zqXqrJhKtlc%2FoVk7rjREYGGsr6ECO4j8%3D&sp=r&sr=b&sv=2025-01-05"
            },
            {
              "url": "https://maintainerinterfaces.blob.core.windows.net/sources/ecdd2e2c26044a31ec9acdd5495829f1405da40d6541b3376b29d4bc0149f9bf?se=2025-07-01T05%3A47%3A47Z&sig=BxIAPhYgqsuWTtJX75BWhBuMn8HR%2BL%2FCW%2FzibapehtU%3D&sp=r&sr=b&sv=2025-01-05"
            }
          ],
          "properties": {
            "url": {
              "custom_type": "string",
              "examples": [
                "https://maintainerinterfacesstg.blob.core.windows.net/sources/ec5cd8b442745d82123e4bcbfb4fde7357970ce1e717a375c47fc7fa2ed65b22?se=2025-06-10T18%3A08%3A57Z&sig=QdOm8SVSJ0TX53qTm2g1itOMYXNPuXcnQ7BKyJY8loQ%3D&sp=r&sr=b&sv=2025-01-05",
                "https://maintainerinterfaces.blob.core.windows.net/sources/0890bceebbddcc09a8039d9e75c7fd64c7cc0ea1f7103a98c30048d19866e4a0?se=2025-06-11T20%3A29%3A31Z&sig=EQ%2FArQPxv51W%2Ff8HNErFYIMcM%2FcPOExvDI7p3I0N6NI%3D&sp=r&sr=b&sv=2025-01-05",
                "https://maintainerinterfaces.blob.core.windows.net/sources/94a3c12600fbbd4b1b4f6733c73b28caeb8a70b2c96774822e3d742c5e5ea967?se=2025-06-10T21%3A21%3A15Z&sig=lBeDCWKvBsrUy4QlsQATZuRH2F%2BjHRP1XLuWeSI%2FR%2FY%3D&sp=r&sr=b&sv=2025-01-05",
                "https://maintainerinterfacesstg.blob.core.windows.net/sources/ca2bbf081ce093c36d257184547c933ff703c2c16967e3f862033e60e23d7490?se=2025-06-30T20%3A37%3A34Z&sig=McFOLm3qBR8zqXqrJhKtlc%2FoVk7rjREYGGsr6ECO4j8%3D&sp=r&sr=b&sv=2025-01-05",
                "https://maintainerinterfaces.blob.core.windows.net/sources/ecdd2e2c26044a31ec9acdd5495829f1405da40d6541b3376b29d4bc0149f9bf?se=2025-07-01T05%3A47%3A47Z&sig=BxIAPhYgqsuWTtJX75BWhBuMn8HR%2BL%2FCW%2FzibapehtU%3D&sp=r&sr=b&sv=2025-01-05"
              ],
              "type": "string"
            }
          },
          "required": [
            "url"
          ],
          "type": "object"
        },
        "headRepoPath": {
          "custom_type": "string",
          "examples": [
            "/data/challengetask1966660770/round-exhibition2-libpng"
          ],
          "type": "string"
        },
        "host": {
          "custom_type": "object",
          "examples": [
            {
              "name": "pixel-phantom-fb0.ea13ojtfz2pupc1wxyq5kwp2og.bx.internal.cloudapp.net"
            },
            {
              "name": "veth6683747"
            },
            {
              "name": "vetha912c49"
            },
            {
              "name": "vethd3f6633"
            },
            {
              "name": "vethe7705e8"
            }
          ],
          "properties": {
            "name": {
              "custom_type": "string",
              "examples": [
                "pixel-phantom-fb1.ea13ojtfz2pupc1wxyq5kwp2og.bx.internal.cloudapp.net",
                "veth604699a",
                "veth85a9032",
                "vethbb3ee09",
                "vethc4f16ff"
              ],
              "type": "string"
            }
          },
          "required": [
            "name"
          ],
          "type": "object"
        },
        "host_api_url": {
          "custom_type": "string",
          "examples": [
            "https://api.tail7e9b4c.ts.net/v1/task/0195f1f6-8cbb-7a6a-ad05-e7376c96cda4/pov/",
            "http://localhost:1323/v1/task/ecfa4c35-21c1-4c37-bdd6-f703e2b18d8d/patch/",
            "http://localhost:1323/v1/task/4c778415-0afe-415f-9ac7-2f5e16bf3f18/pov/",
            "http://localhost:1323/v1/task/6edd4017-5d51-446d-b231-55ec0297147c/patch/",
            "https://api.tail7e9b4c.ts.net/v1/task/0196b2f1-1628-7210-a06d-fc9e0606d769/pov/"
          ],
          "type": "string"
        },
        "http": {
          "custom_type": "object",
          "examples": [
            {
              "flavor": "1.1",
              "host": "52.160.33.135",
              "method": "HEAD",
              "scheme": "http",
              "server_name": "0.0.0.0",
              "status_code": 404,
              "target": "/web/.phpinfo",
              "user_agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36"
            },
            {
              "method": "DELETE",
              "status_code": 204,
              "url": "https://api.tail7e9b4c.ts.net/v1/task/0197ad06-15b5-731b-a908-945d4deff835/bundle/0197ae42-4aba-7621-bc44-29d764cf1b03/"
            },
            {
              "method": "HEAD",
              "url": "http://dind:2375/_ping"
            },
            {
              "method": "POST",
              "request_content_length": 1866,
              "response_content_length": 88,
              "scheme": "http",
              "status_code": 201,
              "target": "/v1.49/containers/create"
            },
            {
              "method": "POST",
              "route": "/v1/task/:task_id/pov/"
            }
          ],
          "properties": {
            "client_ip": {
              "custom_type": "string",
              "examples": [
                "10.224.0.84",
                "100.110.155.109",
                "100.80.20.73",
                "45.26.229.81",
                "74.133.66.18"
              ],
              "type": "string"
            },
            "flavor": {
              "custom_type": "string",
              "examples": [
                "1.1",
                "1.1",
                "1.1",
                "1.1",
                "1.1"
              ],
              "type": "string"
            },
            "host": {
              "custom_type": "string",
              "examples": [
                "binary-blade-exhibition1.tail7e9b4c.ts.net",
                "binary-blade-exhibition1.tail7e9b4c.ts.net",
                "binary-blade-exhibition1.tail7e9b4c.ts.net",
                "52.160.33.135",
                "binary-blade-final.tail7e9b4c.ts.net"
              ],
              "type": "string"
            },
            "method": {
              "custom_type": "string",
              "examples": [
                "DELETE",
                "GET",
                "HEAD",
                "POST"
              ],
              "type": "string"
            },
            "request": {
              "custom_type": "object",
              "examples": [
                {
                  "header": {
                    "accept_encoding": "gzip",
                    "authority": "ghcr.io",
                    "authorization": "****",
                    "method": "GET",
                    "path": "/token?scope=repository%3Aaixcc-finals%2Fbase-builder-jvm%3Apull&service=ghcr.io",
                    "scheme": "https",
                    "traceparent": "00-db7b1196f23baec446e20d44b8f0084a-32d69d46ce19d3f0-01",
                    "user_agent": "containerd/1.7.24+unknown"
                  }
                },
                {
                  "header": {
                    "accept_encoding": "gzip",
                    "authority": "ghcr.io",
                    "method": "GET",
                    "path": "/token?scope=repository%3Aaixcc-afc%2Fbase-builder%3Apull&service=ghcr.io",
                    "scheme": "https",
                    "traceparent": "00-ea7f81d7fdf7790db801752b4a0ea7f3-c55982a74bffe255-01",
                    "user_agent": "containerd/2.0.2+unknown"
                  }
                },
                {
                  "header": {
                    "accept_encoding": "gzip",
                    "authority": "ghcr.io",
                    "method": "GET",
                    "path": "/token?scope=repository%3Aaixcc-finals%2Fbase-builder%3Apull&service=ghcr.io",
                    "scheme": "https",
                    "traceparent": "00-eec8c35564ed797396e1737d7884586a-410aec966d5fe241-01",
                    "user_agent": "containerd/2.1.1+unknown"
                  }
                },
                {
                  "header": {
                    "accept_encoding": "gzip",
                    "content_length": "283",
                    "content_type": "application/x-www-form-urlencoded; charset=utf-8",
                    "host": "artiphishellciroundex2jxliqzs6.azurecr.io",
                    "traceparent": "00-60ba6904a3545b70222bbd2208d5f751-a20be676bb113092-01",
                    "user_agent": "containerd/2.0.4+unknown"
                  }
                },
                {
                  "header": {
                    "accept_encoding": "gzip",
                    "host": "auth.docker.io",
                    "traceparent": "00-4cf7e57a5d291b1561e78fe60494354b-5f8931c5d8aa777d-01",
                    "user_agent": "containerd/2.0.2+unknown"
                  }
                }
              ],
              "properties": {
                "header": {
                  "custom_type": "object",
                  "examples": [
                    {
                      "accept_encoding": "gzip",
                      "authority": "ghcr.io",
                      "authorization": "****",
                      "method": "GET",
                      "path": "/token?scope=repository%3Aaixcc-finals%2Fbase-builder-jvm%3Apull&service=ghcr.io",
                      "scheme": "https",
                      "traceparent": "00-db7b1196f23baec446e20d44b8f0084a-32d69d46ce19d3f0-01",
                      "user_agent": "containerd/1.7.24+unknown"
                    },
                    {
                      "accept_encoding": "gzip",
                      "authority": "ghcr.io",
                      "method": "GET",
                      "path": "/token?scope=repository%3Aaixcc-finals%2Fbase-builder%3Apull&service=ghcr.io",
                      "scheme": "https",
                      "traceparent": "00-7c273cc779cc05ce319ef5cfa3df1410-d0b66678766eaeb8-01",
                      "user_agent": "containerd/2.1.1+unknown"
                    },
                    {
                      "accept_encoding": "gzip",
                      "authority": "ghcr.io",
                      "method": "GET",
                      "path": "/token?scope=repository%3Aaixcc-finals%2Fbase-builder%3Apull&service=ghcr.io",
                      "scheme": "https",
                      "traceparent": "00-eec8c35564ed797396e1737d7884586a-410aec966d5fe241-01",
                      "user_agent": "containerd/2.1.1+unknown"
                    },
                    {
                      "accept_encoding": "gzip",
                      "content_length": "283",
                      "content_type": "application/x-www-form-urlencoded; charset=utf-8",
                      "host": "artiphishellciroundex2jxliqzs6.azurecr.io",
                      "traceparent": "00-60ba6904a3545b70222bbd2208d5f751-a20be676bb113092-01",
                      "user_agent": "containerd/2.0.4+unknown"
                    },
                    {
                      "accept_encoding": "gzip",
                      "host": "auth.docker.io",
                      "traceparent": "00-4cf7e57a5d291b1561e78fe60494354b-5f8931c5d8aa777d-01",
                      "user_agent": "containerd/2.0.2+unknown"
                    }
                  ],
                  "properties": {
                    ":authority": {
                      "custom_type": "string",
                      "type": "string"
                    },
                    ":method": {
                      "custom_type": "string",
                      "type": "string"
                    },
                    ":path": {
                      "custom_type": "string",
                      "type": "string"
                    },
                    ":scheme": {
                      "custom_type": "string",
                      "type": "string"
                    },
                    "accept-encoding": {
                      "custom_type": "string",
                      "type": "string"
                    },
                    "authorization": {
                      "custom_type": "string",
                      "examples": [
                        "****",
                        "****",
                        "****",
                        "****",
                        "****"
                      ],
                      "type": "string"
                    },
                    "content-length": {
                      "custom_type": "string",
                      "type": "string"
                    },
                    "content-type": {
                      "custom_type": "string",
                      "type": "string"
                    },
                    "host": {
                      "custom_type": "string",
                      "examples": [
                        "auth.docker.io",
                        "auth.docker.io",
                        "auth.docker.io",
                        "artiphishellciroundex2jxliqzs6.azurecr.io",
                        "artiphishellciroundafcu8ek4o5v.azurecr.io"
                      ],
                      "type": "string"
                    },
                    "traceparent": {
                      "custom_type": "string",
                      "examples": [
                        "00-006f0459d06087788766af55f76e8a19-de1ef66fbf63142c-01",
                        "00-5225ea33cba5cdb75ffce9ed14742385-5faf4555a49fa858-01",
                        "00-a13016ecb334e4d61a61fbfd3f1a7a96-6ffb86759acc0e25-01",
                        "00-ba24632a22278bc099edd8c7543782fd-de4720a1e9a99c5b-01",
                        "00-cf88dc9574fe40e203ee25e265c84047-3f181ecc37d1cf97-01"
                      ],
                      "type": "string"
                    },
                    "user-agent": {
                      "custom_type": "string",
                      "type": "string"
                    }
                  },
                  "required": [
                    "accept-encoding",
                    "traceparent",
                    "user-agent"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "header"
              ],
              "type": "object"
            },
            "request_content_length": {
              "custom_type": "int32",
              "examples": [
                29,
                324,
                325,
                1866,
                3552
              ],
              "excludeMaximum": 2002548736,
              "minimum": 29,
              "type": "number"
            },
            "response_content_length": {
              "custom_type": "int32",
              "examples": [
                2,
                1359,
                1361,
                2334242,
                24728
              ],
              "excludeMaximum": 271940282,
              "minimum": 2,
              "type": "number"
            },
            "route": {
              "custom_type": "string",
              "examples": [
                "/health/",
                "/v1/task/:task_id/broadcast-sarif-assessment/:sarif_id/",
                "/v1/task/:task_id/bundle/:bundle_id/",
                "/v1/task/:task_id/pov/",
                "/webhook/github/"
              ],
              "type": "string"
            },
            "scheme": {
              "custom_type": "string",
              "examples": [
                "http"
              ],
              "type": "string"
            },
            "server_name": {
              "custom_type": "string",
              "examples": [
                "0.0.0.0",
                "0.0.0.0",
                "0.0.0.0",
                "0.0.0.0",
                "0.0.0.0"
              ],
              "type": "string"
            },
            "status_code": {
              "custom_type": "int16",
              "examples": [
                200,
                202,
                307,
                404,
                204
              ],
              "excludeMaximum": 500,
              "minimum": 200,
              "type": "number"
            },
            "target": {
              "custom_type": "string",
              "examples": [
                "/_ping",
                "/v1.48/exec/09bb3a7823016b7e70dba6cf93c5330f279501993cf6849fcb9cc0c182d601f3/start",
                "/v1.50/exec/e0ee5929ed54dc8c47df4155fbf246647c237b47c711ca9ada82fef570dbfe61/start",
                "/v1/task/0197b38c-95a7-7031-a990-b32ef0893f22/patch/0197b404-33ae-7589-87ee-934d4593924a/",
                "/version"
              ],
              "type": "string"
            },
            "url": {
              "custom_type": "string",
              "examples": [
                "http://dind:2375/_ping",
                "https://api.tail7e9b4c.ts.net/v1/task/01974189-7c01-7635-892f-06b064dc065c/pov/",
                "https://api.tail7e9b4c.ts.net/v1/task/0197c3b3-3f71-798d-9b93-770fd5e5aa51/bundle/",
                "https://auth.docker.io/token?scope=repository%3Alibrary%2Fdocker%3Apull&service=registry.docker.io",
                "https://pkg-containers.githubusercontent.com/ghcr1/blobs/sha256:67c8ef114d7db3b292008731bce773220febb27a23d32b2a197e6c8f7b3566f0?se=2025-07-02T09%3A00%3A00Z&sig=XsQ766KgXC8fr9KbLWYM61AhHV39t1a3elKPTFgTK9A%3D&ske=2025-07-02T18%3A44%3A24Z&skoid=fb3d2a07-ec6c-4fe4-aced-9efe0fd2fe1a&sks=b&skt=2025-07-01T18%3A44%3A24Z&sktid=398a6654-997b-47e9-b12b-9515b896b4de&skv=2025-01-05&sp=r&spr=https&sr=b&sv=2025-01-05&hmac=e609926e30b14552e56b512c67435db09cd6deb5a57df7903c6a74925599c8b6"
              ],
              "type": "string"
            },
            "user_agent": {
              "custom_type": "string",
              "examples": [
                "Go-http-client/2.0",
                "Go-http-client/2.0",
                "Go-http-client/2.0",
                "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36",
                "Edge Health Probe"
              ],
              "type": "string"
            }
          },
          "required": [
            "method"
          ],
          "type": "object"
        },
        "i": {
          "custom_type": "object",
          "examples": [
            {
              "AddressIPv6": "<nil>",
              "DstName": "eth0",
              "SrcName": "veth0d7da1b"
            },
            {
              "DstName": "eth0",
              "SrcName": "veth4469294"
            },
            {
              "DstName": "eth0",
              "SrcName": "veth8125255"
            },
            {
              "DstName": "eth0",
              "SrcName": "vetha46f76c"
            },
            {
              "DstName": "eth0",
              "SrcName": "vethdb3de3d"
            }
          ],
          "properties": {
            "AddressIPv6": {
              "custom_type": "string",
              "examples": [
                "<nil>"
              ],
              "type": "string"
            },
            "DstName": {
              "custom_type": "string",
              "examples": [
                "eth0"
              ],
              "type": "string"
            },
            "SrcName": {
              "custom_type": "string",
              "examples": [
                "veth00ef755",
                "veth2b1c6ad",
                "vetha5a5f3e",
                "vethb6b8008",
                "vethcd21974"
              ],
              "type": "string"
            }
          },
          "required": [
            "DstName",
            "SrcName"
          ],
          "type": "object"
        },
        "id": {
          "custom_type": "object",
          "examples": [
            {
              "parsed": "0196a6e0-5332-7f68-bf4b-d6c9e16a56f2",
              "raw": "0196a6e0-5332-7f68-bf4b-d6c9e16a56f2"
            },
            {
              "parsed": "01974191-3900-72ee-9d5b-5ee0e0e98b88",
              "raw": "01974191-3900-72ee-9d5b-5ee0e0e98b88"
            },
            {
              "parsed": "0197bb3a-5dc9-7821-be6f-80063b1653ee",
              "raw": "0197bb3a-5dc9-7821-be6f-80063b1653ee"
            },
            {
              "parsed": "13",
              "raw": "13"
            },
            {
              "parsed": "ef26fabc-fef5-4367-874c-94ddaf4da4cd",
              "raw": "ef26fabc-fef5-4367-874c-94ddaf4da4cd"
            }
          ],
          "properties": {
            "parsed": {
              "custom_type": "string",
              "examples": [
                "0196a6f6-efb8-7e7b-8b2f-0ff53b23a0fd",
                "019741bd-4283-7a6a-a760-b4c94c74c7c0",
                "13",
                "344d7fac-4f23-4e74-8ecd-eb3b63c1b099",
                "5e98512c-e8f0-4015-b2fb-77d2ae2477f2"
              ],
              "type": "string"
            },
            "raw": {
              "custom_type": "string",
              "examples": [
                "0196a6f6-efaa-700c-a6e4-bd284f5cdbb3",
                "01974537-bb05-7bf8-8c79-da70974f4974",
                "0197bf7a-aefa-77ec-afc6-b7bb72676e66",
                "13",
                "249c2ba2-db69-4914-99b8-c44e1df9b00f"
              ],
              "type": "string"
            }
          },
          "required": [
            "raw"
          ],
          "type": "object"
        },
        "ifName": {
          "custom_type": "string",
          "examples": [
            "eth0"
          ],
          "type": "string"
        },
        "ifaceName": {
          "custom_type": "string",
          "examples": [
            "veth01d6e6c",
            "veth2392b25",
            "veth78988b2",
            "vethe40a0a1",
            "vethfc6f6df"
          ],
          "type": "string"
        },
        "image": {
          "custom_type": "object",
          "examples": [
            {
              "id": "sha256:a1d7118933e3817daecad78f34025f715af0e233b3f351d59d8e39c740561835"
            },
            {
              "id": "sha256:0238a03f2d80dff4a23b45a6ac10445ff22f2faad19048f9ae1ef3bad6d21f7e"
            },
            {
              "id": "sha256:ca91eee2000101ef36c3c2f3e051310ef7401f0dd2587d0f166e1703a1cb3ab8"
            },
            {
              "id": "sha256:9688d9e3ace8a06b62632b2df0cee4760999b64dc932017404969f2f559b47ca"
            },
            {
              "id": "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef"
            }
          ],
          "properties": {
            "id": {
              "custom_type": "string",
              "examples": [
                "sha256:a1d7118933e3817daecad78f34025f715af0e233b3f351d59d8e39c740561835",
                "sha256:0238a03f2d80dff4a23b45a6ac10445ff22f2faad19048f9ae1ef3bad6d21f7e",
                "sha256:ca91eee2000101ef36c3c2f3e051310ef7401f0dd2587d0f166e1703a1cb3ab8",
                "sha256:9688d9e3ace8a06b62632b2df0cee4760999b64dc932017404969f2f559b47ca",
                "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef"
              ],
              "type": "string"
            }
          },
          "required": [
            "id"
          ],
          "type": "object"
        },
        "info": {
          "custom_type": "string",
          "examples": [
            "[\u2705] Patch is found for 106 from the database",
            "[\ud83d\udcac] Received a message: 100",
            "[\ud83d\udd04] Replaying log4j2/SimpleLoggerFuzzer with PoC /patch_generator/0197c650-7973-75e3-abc4-4063a3f21573/pocs/poc-0 and patch 472ca8ae3185770138d52290d67dc10d-address",
            "[\ud83d\udee0\ufe0f] Processing 37",
            "[\ud83e\udee0\ud83e\udee0\ud83e\udee0] Fail to reuse the patch 20 due to Replay timeout: \n        ===========Message===========\n            Timeout after 60 seconds\n        ===========Command===========\n            ['infra/helper.py', 'reproduce', 'libxml2', 'html', PosixPath('/crs/0195f1f6-8cbb-7a6a-ad05-e7376c96cda4/html/ce901800e743256b4bb395eff791d2b0')]\n        ===========CWD===========\n            /aixcc/0195f1f6-8cbb-7a6a-ad05-e7376c96cda4-None/6f7bc1379644a0d28a3a6e0655d95f18/fuzz-tooling\n        ===========STDOUT===========\n            + FUZZER=html\r\n+ shift\r\n+ '[' '!' -v TESTCASE ']'\r\n+ TESTCASE=/testcase\r\n+ '[' '!' -f /testcase ']'\r\n+ export RUN_FUZZER_MODE=interactive\r\n+ RUN_FUZZER_MODE=interactive\r\n+ export FUZZING_ENGINE=libfuzzer\r\n+ FUZZING_ENGINE=libfuzzer\r\n+ export SKIP_SEED_CORPUS=1\r\n+ SKIP_SEED_CORPUS=1\r\n+ run_fuzzer html -runs=100 /testcase\r\nvm.mmap_rnd_bits = 28\r\n/out/html -rss_limit_mb=2560 -timeout=25 -runs=100 /testcase -dict=html.dict < /dev/null\r\nDictionary: 118 entries\r\nINFO: Running with entropic power schedule (0xFF, 100).\r\nINFO: Seed: 3445694088\r\nINFO: Loaded 1 modules   (49544 inline 8-bit counters): 49544 [0x5643ab3c78f8, 0x5643ab3d3a80), \r\nINFO: Loaded 1 PC tables (49544 PCs): 49544 [0x5643ab3d3a80,0x5643ab495300), \r\n/out/html: Running 1 inputs 100 time(s) each.\r\nRunning: /testcase\r\n\n        ===========STDERR===========\n            INFO:__main__:Running: docker run --privileged --shm-size=2g --platform linux/amd64 --rm -e HELPER=True -e ARCHITECTURE=x86_64 -v /aixcc/0195f1f6-8cbb-7a6a-ad05-e7376c96cda4-None/6f7bc1379644a0d28a3a6e0655d95f18/fuzz-tooling/build/out/libxml2:/out -v /crs/0195f1f6-8cbb-7a6a-ad05-e7376c96cda4/html/ce901800e743256b4bb395eff791d2b0:/testcase -t ghcr.io/aixcc-finals/base-runner:v1.0.0 reproduce html -runs=100.\n\n        ===============================\n        "
          ],
          "type": "string"
        },
        "input": {
          "custom_type": "string",
          "examples": [
            "pngrutil.c",
            "src/main/java/org/apache/commons/compress/harmony/pack200/CodecEncoding.java",
            "ext/misc/rot13.c",
            "src/main/java/org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream.java",
            "vuln.c"
          ],
          "type": "string"
        },
        "installation": {
          "custom_type": "object",
          "examples": [
            {
              "id": 59975036
            }
          ],
          "properties": {
            "id": {
              "custom_type": "int32",
              "examples": [
                59975036
              ],
              "excludeMaximum": 60480361,
              "minimum": 59975036,
              "type": "number"
            }
          },
          "required": [
            "id"
          ],
          "type": "object"
        },
        "isAdd": {
          "custom_type": "bool",
          "examples": [
            false,
            true
          ],
          "type": "boolean"
        },
        "jazzer": {
          "custom_type": "object",
          "examples": [
            {
              "seed_merge": {
                "duration": ""
              }
            },
            {
              "sync_from_duration": 10,
              "sync_nodes": 6,
              "sync_to_duration": 11,
              "sync_total_duration": 21
            },
            {
              "sync_from_duration": 6,
              "sync_nodes": 6,
              "sync_to_duration": 5,
              "sync_total_duration": 11
            },
            {
              "sync_from_duration": 70,
              "sync_nodes": 6,
              "sync_to_duration": 49,
              "sync_total_duration": 119
            },
            {
              "sync_from_duration": 959,
              "sync_nodes": 6,
              "sync_to_duration": 436,
              "sync_total_duration": 1395
            }
          ],
          "properties": {
            "seed_merge": {
              "custom_type": "object",
              "examples": [
                {
                  "duration": ""
                }
              ],
              "properties": {
                "duration": {
                  "custom_type": "string",
                  "examples": [
                    ""
                  ],
                  "type": "string"
                }
              },
              "required": [
                "duration"
              ],
              "type": "object"
            },
            "sync_from_duration": {
              "custom_type": "int16",
              "examples": [
                2,
                67,
                70,
                365,
                1842
              ],
              "excludeMaximum": 17441,
              "minimum": 1,
              "type": "number"
            },
            "sync_nodes": {
              "custom_type": "uint8",
              "examples": [
                6
              ],
              "excludeMaximum": 135,
              "minimum": 2,
              "type": "number"
            },
            "sync_to_duration": {
              "custom_type": "int16",
              "examples": [
                1,
                93,
                104,
                319,
                929
              ],
              "excludeMaximum": 8612,
              "minimum": 0,
              "type": "number"
            },
            "sync_total_duration": {
              "custom_type": "int16",
              "examples": [
                4,
                126,
                127,
                494,
                1960
              ],
              "excludeMaximum": 18653,
              "minimum": 2,
              "type": "number"
            }
          },
          "required": [],
          "type": "object"
        },
        "job": {
          "custom_type": "object",
          "examples": [
            {
              "id": "019741d2-c3ff-7cbc-885e-061696e5429e"
            },
            {
              "id": "01974277-e16e-7b60-a1e0-ea3c7f677a3a"
            },
            {
              "id": "019746e7-7412-75e3-9fc2-0cd54b45a914"
            },
            {
              "id": "01974191-5d04-7c6f-9bb5-72e738ddb6f3"
            },
            {
              "id": "0197ad51-70ba-7877-bdd0-454395904e80"
            }
          ],
          "properties": {
            "id": {
              "custom_type": "uuid",
              "examples": [
                "019741d2-c3ff-7cbc-885e-061696e5429e",
                "01974277-e16e-7b60-a1e0-ea3c7f677a3a",
                "019746e7-7412-75e3-9fc2-0cd54b45a914",
                "01974191-5d04-7c6f-9bb5-72e738ddb6f3",
                "0197ad51-70ba-7877-bdd0-454395904e80"
              ],
              "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
              "type": "string"
            },
            "name": {
              "custom_type": "string",
              "type": "string"
            },
            "namespace": {
              "custom_type": "string",
              "type": "string"
            }
          },
          "required": [],
          "type": "object"
        },
        "jobType": {
          "custom_type": "string",
          "examples": [
            "job",
            "patch",
            "pov"
          ],
          "type": "string"
        },
        "key": {
          "custom_type": "string",
          "examples": [
            "time",
            "time",
            "time",
            "time",
            "time"
          ],
          "type": "string"
        },
        "kvObject": {
          "custom_type": "string",
          "examples": [
            "[bridge a95a0d062e5cc4405e40696b81a47fa6449ab95f4284376ae42c488de55d5267]",
            "[bridge-endpoint 6d146004314aa607c65d827677385d742b8bcfb2db1d7204fc99021e1b1fcd0b]",
            "[bridge-endpoint 7daa0b5fe53ad3740303c8cce7e5d10ad312e060a01c65a9a1986a7ba1a96d46]",
            "[bridge-endpoint 88cb1689c7a31f740b42244f9f74fba4ea5c35b535bd456ac3fd75502402ab3c]",
            "[bridge-endpoint 9eeb8c88e83276982a23b5dbb9a155c9b00c166e1e8d3f541933c3997f32d10b]"
          ],
          "type": "string"
        },
        "len": {
          "custom_type": "int32",
          "examples": [
            340,
            3704487,
            14,
            926958882,
            109917
          ],
          "excludeMaximum": 927248738,
          "minimum": 3,
          "type": "number"
        },
        "length": {
          "custom_type": "int32",
          "excludeMaximum": 36213633,
          "minimum": 798,
          "type": "number"
        },
        "level": {
          "custom_type": "string",
          "examples": [
            "INFO"
          ],
          "type": "string"
        },
        "libfuzzer": {
          "custom_type": "object",
          "examples": [
            {
              "seed_merge": {
                "duration": ""
              }
            },
            {
              "seed_merge": {
                "duration": ""
              }
            },
            {
              "seed_merge": {
                "duration": ""
              }
            },
            {
              "seed_merge": {
                "duration": ""
              }
            },
            {
              "seed_merge": {
                "duration": ""
              }
            }
          ],
          "properties": {
            "seed_merge": {
              "custom_type": "object",
              "examples": [
                {
                  "duration": ""
                },
                {
                  "duration": ""
                },
                {
                  "duration": ""
                },
                {
                  "duration": ""
                },
                {
                  "duration": ""
                }
              ],
              "properties": {
                "duration": {
                  "custom_type": "string",
                  "examples": [
                    "",
                    "",
                    "",
                    "",
                    ""
                  ],
                  "type": "string"
                }
              },
              "required": [
                "duration"
              ],
              "type": "object"
            }
          },
          "required": [
            "seed_merge"
          ],
          "type": "object"
        },
        "llm": {
          "custom_type": "object",
          "examples": [
            {
              "anthropic": {
                "role": "assistant",
                "stop_sequence": "",
                "system": "[{'type': 'text', 'text': 'You are a security researcher tasked with crafting an input that calls the targeted function based on a provided seed that reaches an adjacent function. You will be given the source code and name of the function that the current seed reaches, the name of the targeted function, and the seed that reaches the current function. Your job is to carefully analyze the code and the current seed, then produce a seed to reach the target function.\\nBefore proceeding, you should read the relative surrounding code carefully and deeply understand what they do. You must not simply read the top-level functions and comments and assume what the rest of the code does. You should understand *exactly* how the given function works.\\n<IMPORTANT>DO NOT GUESS VALUES for any constants. If you need specific constants, please look them up using the tools available to you.</IMPORTANT>\\n<tips>\\n- Generally you cannot modify environment variables or configuration files on disk. You can only affect these if the harness for this program reads those values from your data input.\\n- If you need additional information, such as source files, header files, or other readable resources, use tools to retrieve necessary details.\\n- The provided input can be in a valid or broken format. Your task is not to correct the input format but to generate an input that reaches the targeted code line.\\n- If you are 100% sure that you cannot reach the target function, you may terminate early.\\n- Do not output that you succeeded until you have verified it reaches the target with the query_coverage tool.\\n</tips>\\nBe precise and thorough in your analysis.\\n<output>\\nDo not stop calling tools until you are finished with your task.\\nWhen you are completely finished, provide output as plain XML with the structure AFTER your thoughts:\\n`<summary>` : (string) A brief summary of your work.\\n`<input_python>` : (string) The python to generate the input seed that reaches the target.\\n`<reach_target_function>` : (boolean) Whether the seed was tested to successfully reach the target function.\\nALWAYS put your explanations and thoughts BEFORE the XML tags. The XML tags should be the last thing that you output\\n</output>', 'cache_control': {'type': 'ephemeral'}}]",
                "type": "message"
              }
            },
            {
              "azure": {
                "created": 1750986903,
                "extra_body": "{}",
                "n": 1,
                "object": "chat.completion",
                "prompt_filter_results": "[{'prompt_index': 0, 'content_filter_results': {'hate': {'filtered': False, 'severity': 'safe'}, 'self_harm': {'filtered': False, 'severity': 'safe'}, 'sexual': {'filtered': False, 'severity': 'safe'}, 'violence': {'filtered': False, 'severity': 'safe'}}}]",
                "system_fingerprint": ""
              }
            },
            {
              "openai": {
                "created": 1749162445,
                "extra_body": "{}",
                "n": 1,
                "object": "chat.completion",
                "system_fingerprint": ""
              }
            },
            {
              "openai": {
                "created": 1751295560,
                "extra_body": "{}",
                "logprobs": true,
                "n": 1,
                "object": "chat.completion",
                "system_fingerprint": "fp_51e1070cf2",
                "top_logprobs": 4
              }
            },
            {
              "request": {
                "type": "acompletion"
              }
            }
          ],
          "properties": {
            "anthropic": {
              "custom_type": "object",
              "examples": [
                {
                  "role": "assistant",
                  "stop_sequence": "",
                  "system": "[{'type': 'text', 'text': 'You are a security researcher tasked with crafting an input that calls the targeted function based on a provided seed that reaches an adjacent function. You will be given the source code and name of the function that the current seed reaches, the name of the targeted function, and the seed that reaches the current function. Your job is to carefully analyze the code and the current seed, then produce a seed to reach the target function.\\nBefore proceeding, you should read the relative surrounding code carefully and deeply understand what they do. You must not simply read the top-level functions and comments and assume what the rest of the code does. You should understand *exactly* how the given function works.\\n<IMPORTANT>DO NOT GUESS VALUES for any constants. If you need specific constants, please look them up using the tools available to you.</IMPORTANT>\\n<tips>\\n- Generally you cannot modify environment variables or configuration files on disk. You can only affect these if the harness for this program reads those values from your data input.\\n- If you need additional information, such as source files, header files, or other readable resources, use tools to retrieve necessary details.\\n- The provided input can be in a valid or broken format. Your task is not to correct the input format but to generate an input that reaches the targeted code line.\\n- If you are 100% sure that you cannot reach the target function, you may terminate early.\\n- Do not output that you succeeded until you have verified it reaches the target with the query_coverage tool.\\n</tips>\\nBe precise and thorough in your analysis.\\n<output>\\nDo not stop calling tools until you are finished with your task.\\nWhen you are completely finished, provide output as plain XML with the structure AFTER your thoughts:\\n`<summary>` : (string) A brief summary of your work.\\n`<input_python>` : (string) The python to generate the input seed that reaches the target.\\n`<reach_target_function>` : (boolean) Whether the seed was tested to successfully reach the target function.\\nALWAYS put your explanations and thoughts BEFORE the XML tags. The XML tags should be the last thing that you output\\n</output>', 'cache_control': {'type': 'ephemeral'}}]",
                  "type": "message"
                },
                {
                  "role": "assistant",
                  "stop_sequence": "",
                  "system": "[{'type': 'text', 'text': \"You are an AI agent competing in an important computer security competition. We are working with other AI agents to help each other in our task to discover vulnerabilities, generate proof-of-vulnerabilities, and patch the code that was created by the organizers of the competition.\\nThe competition organizers have told us the following:\\n<challenge_facts>\\n<challenge_name>freerdp</challenge_name>\\n<challenge_language>c</challenge_language>\\n<rule>all vulnerabilities from the organizers will be in portions of code written in c</rule>\\n<rule>PoVs must cause the fuzz harness to crash on the input in order to be scorable. Fuzz harnesses are typically compiled with various runtime sanitizers to detect security issues and crash, even if the issue would not normally cause a crash on its own.</rule>\\n</challenge_facts>\\nThis is not an interactive session. Every one of your responses must call at least one of the available tools. Do not ever respond without invoking a tool.\\nFor maximum efficiency, whenever you need to perform multiple independent operations, invoke all relevant tools simultaneously rather than sequentially.\\n<instructions>Another agent has identified a potential vulnerability. You are responsible for producing AND testing a proof-of-vulnerability for this vulnerability. Think step-by-step about how to use the tools available to you in order to produce a working PoV. If the PoV does not work the first time, take a deep breath and think carefully about what you may be able to do to fix it before you give up.\\nYou should begin by using `source_questions` to understand the vulnerability and determine how to reach it from one of the available harnesses.\\nOnce you have a plan to trigger the vulnerability, start working on writing and testing the POV.\\n<important>Do not assume you understand the input format to the fuzz harness. You must use the `get_harness_input_encoder` to get helper code producing harness inputs.</important>\\n<important>All python code will be executed in a separate environment from the fuzzer. The ONLY way your python can impact the fuzzer is by providing an input to the fuzzer entrypoint; do not attempt to create other files or otherwise manipulate the fuzzer's environment.</important>\\n<important>If you produce a candidate PoV that fails to crash the harness, you should use `reachability` and `debug_pov` to determine where your PoV is going wrong.</important>\\n<note>Your PoV python code simply needs to create an encoded PoV input. The included tools will handle it properly from there. DO NOT try to run the harness file or otherwise communicate with the vulnerable software. That will be done for your once your code outputs to a file!</note>\\n<rule>\\nEven if you believe the vulnerability is not reachable, you should at least try to reach it by testing some candidate POVs. You may not terminate without trying some POVs first.\\n</rule>\\n</instructions>\\n<IMPORTANT>If you are exploiting a buffer overflow or out-of-bounds access, note that the sanitizer will only trigger if you access beyond the end of the *allocation*, not just the buffer or array. As a result, you may want to use input sizes a bit larger than you need to simply overflow the buffer.</IMPORTANT>\", 'cache_control': {'type': 'ephemeral'}}]",
                  "thinking": "{'type': 'disabled'}",
                  "type": "message"
                },
                {
                  "role": "assistant",
                  "stop_sequence": "",
                  "system": "[{'type': 'text', 'text': \"You are an AI agent competing in an important computer security competition. We are working with other AI agents to help each other in our task to discover vulnerabilities, generate proof-of-vulnerabilities, and patch the code that was created by the organizers of the competition.\\nThe competition organizers have told us the following:\\n<challenge_facts>\\n<challenge_name>zookeeper</challenge_name>\\n<challenge_language>jvm</challenge_language>\\n<rule>all vulnerabilities from the organizers will be in portions of code written in jvm</rule>\\n<rule>PoVs must cause the fuzz harness to crash on the input in order to be scorable. Fuzz harnesses are typically compiled with various runtime sanitizers to detect security issues and crash, even if the issue would not normally cause a crash on its own.</rule>\\n</challenge_facts>\\nThis is not an interactive session. Every one of your responses must call at least one of the available tools. Do not ever respond without invoking a tool.\\nFor maximum efficiency, whenever you need to perform multiple independent operations, invoke all relevant tools simultaneously rather than sequentially.\\n<instructions>Another agent has identified a potential vulnerability. You are responsible for producing AND testing a proof-of-vulnerability for this vulnerability. Think step-by-step about how to use the tools available to you in order to produce a working PoV. If the PoV does not work the first time, take a deep breath and think carefully about what you may be able to do to fix it before you give up.\\nYou should begin by using `source_questions` to understand the vulnerability and determine how to reach it from one of the available harnesses.\\nOnce you have a plan to trigger the vulnerability, start working on writing and testing the POV.\\n<important>Do not assume you understand the input format to the fuzz harness. You must use the `get_harness_input_encoder` to get helper code producing harness inputs.</important>\\n<important>All python code will be executed in a separate environment from the fuzzer. The ONLY way your python can impact the fuzzer is by providing an input to the fuzzer entrypoint; do not attempt to create other files or otherwise manipulate the fuzzer's environment.</important>\\n<important>If you produce a candidate PoV that fails to crash the harness, you should use `reachability` and `debug_pov` to determine where your PoV is going wrong.</important>\\n<note>Your PoV python code simply needs to create an encoded PoV input. The included tools will handle it properly from there. DO NOT try to run the harness file or otherwise communicate with the vulnerable software. That will be done for your once your code outputs to a file!</note>\\n<rule>\\nEven if you believe the vulnerability is not reachable, you should at least try to reach it by testing some candidate POVs. You may not terminate without trying some POVs first.\\n</rule>\\n</instructions>\\n<tip>For the JVM, the default jazzer sanitizers are typically used. Note that Application-specific jazzer security checks may be included in the fuzz harness itself or in `@MethodHook`s included with the fuzz harness. These will typically raise a jazzer security exception, e.g `FuzzerSecurityIssueHigh`. Keep in mind, these sanitizers will cause the program to crash, which is ultimately what determines if a PoV is successful.</tip>\\n<jazzer_sanitizers>\\n<name>ScriptEngineInjection</name>\\n<name>SqlInjection</name>\\n<name>RegexRoadblocks</name>\\n<name>ServerSideRequestForgery</name>\\n<name>ClojureLangHooks</name>\\n<name>OsCommandInjection</name>\\n<name>Utils</name>\\n<name>ExpressionLanguageInjection</name>\\n<name>Deserialization</name>\\n<name>LdapInjection</name>\\n<name>NamingContextLookup</name>\\n<name>ReflectiveCall</name>\\n<name>XPathInjection</name>\\n<name>RegexInjection</name>\\n</jazzer_sanitizers>\\n<tip>If you need more information about a sanitizer, be sure to call the `get_sanitizer_description` tool.</tip>\", 'cache_control': {'type': 'ephemeral'}}]",
                  "thinking": "{'type': 'disabled'}",
                  "type": "message"
                },
                {
                  "role": "assistant",
                  "stop_sequence": "",
                  "type": "message"
                },
                {
                  "role": "assistant",
                  "stop_sequence": "",
                  "system": "[{'type': 'text', 'text': \"You are an AI agent competing in an important computer security competition. Your job is to use the tools available to you to create a Python function named encode_input that will generate properly formed inputs for the provided input harness. This file contains a function which takes in a single buffer of data, but it may be more helpful to represent the input as taking in multiple arguments. The following is only a hypothetical example <example>Harness code given:\\n```import sys\\ndef fuzzerTestOneInput(data: bytes):\\n  user, group, password = data.split('\\\\xff')\\n  process(user, group, password)\\nfuzzerTestOneInput(open(sys.argv[1],'rb').read())\\n```\\nExpected sample output:\\n```\\ndef encode_input(user: str, group: str, password: str) -> bytes:\\n  return b'\\\\xff'.join([user.encode(), group.encode(), password.encode()])\\n```\\n</example>\\nYou have a variety of tools at your disposal to read and search the source code you need to analyze.\\nYou should read the harness code carefully and deeply understand what it is doing before proceeding. It is important that you do not simply read the top-level functions and comments and assume what the rest of the harness code does. You should understand *exactly* how the harness processes its input and exercises the project code. You should clearly document which input bytes are used only by the harness, and which input bytes get passed into the project code.\\n<IMPORTANT>DO NOT GUESS VALUES for any constants. If you need specific constants, please look them up using the tools available to you.</IMPORTANT>\\nAre there any aspects of the harness's processing that are not obvious? If so, please document them in the harness_notes field.\\nExamples of non-obvious behaviors:\\n1. an ambiguously named parameter/variable is used for a specific purpose, so comment explaining its semantics would help\\n2. the harness passes input to the project code through specific entrypoints or system calls\\n3. the harness prepends some header data to the input before sending it to the project code\\n4. the harness passes some specific flags to the target project code\\n\\nIdentify any non-obvious behaviors such as the ones above (but not limited to these) and add long, detailed notes that explain them.\\nRemember: the goal is for a user to produce inputs to the harness based on your output ALONE, so anything that is currently unclear without the harness source code should be explained in your output.\\n<IMPORTANT>Before you return your harness encoder, you must confirm it works correctly by performing using a debugger tool (gdb or jdb) to confirm the value of variables parsed from the harness input. You may fallback to using `query_coverage`, but ONLY if the debugger tool fails. If your input is unexpectedly not reaching your target, the `get_output` tool may help you debug. Remember, you may NOT return a function that was not tested!</IMPORTANT>\\n<IMPORTANT>YOU SHOULD USE `generate_kaitai` AT LEAST ONCE to describe the byte stream before writing an encoder.</IMPORTANT>\\n\\n<output>\\nDo not stop calling tools until you are finished with your task.\\nWhen you are completely finished, provide output as plain XML with the structure AFTER your thoughts:\\n`<encoder_code>` : (string) the python code for the harness input encoder function. note: before returning, you must confirm it works as expected\\n`<harness_notes>` : (string) extra documentation of the harness behavior. anything that is not obvious from the encoder_code should be included here\\nALWAYS put your explanations and thoughts BEFORE the XML tags. The XML tags should be the last thing that you output\\n</output>\", 'cache_control': {'type': 'ephemeral'}}]",
                  "type": "message"
                }
              ],
              "properties": {
                "role": {
                  "custom_type": "string",
                  "examples": [
                    "assistant"
                  ],
                  "type": "string"
                },
                "stop_sequence": {
                  "custom_type": "string",
                  "examples": [
                    ""
                  ],
                  "type": "string"
                },
                "system": {
                  "custom_type": "string",
                  "examples": [
                    "[{'type': 'text', 'text': \"You are an AI agent competing in an important computer security competition. We are working with other AI agents to help each other in our task to discover vulnerabilities, generate proof-of-vulnerabilities, and patch the code that was created by the organizers of the competition.\\nThe competition organizers have told us the following:\\n<challenge_facts>\\n<challenge_name>lcms</challenge_name>\\n<challenge_language>c</challenge_language>\\n<rule>all vulnerabilities from the organizers will be in portions of code written in c</rule>\\n<rule>PoVs must cause the fuzz harness to crash on the input in order to be scorable. Fuzz harnesses are typically compiled with various runtime sanitizers to detect security issues and crash, even if the issue would not normally cause a crash on its own.</rule>\\n</challenge_facts>\\nThis is not an interactive session. Every one of your responses must call at least one of the available tools. Do not ever respond without invoking a tool.\\nFor maximum efficiency, whenever you need to perform multiple independent operations, invoke all relevant tools simultaneously rather than sequentially.\\n<instructions>Another agent has identified a potential vulnerability. You are responsible for producing AND testing a proof-of-vulnerability for this vulnerability. Think step-by-step about how to use the tools available to you in order to produce a working PoV. If the PoV does not work the first time, take a deep breath and think carefully about what you may be able to do to fix it before you give up.\\nYou should begin by using `source_questions` to understand the vulnerability and determine how to reach it from one of the available harnesses.\\nOnce you have a plan to trigger the vulnerability, start working on writing and testing the POV.\\n<important>Do not assume you understand the input format to the fuzz harness. You must use the `get_harness_input_encoder` to get helper code producing harness inputs.</important>\\n<important>All python code will be executed in a separate environment from the fuzzer. The ONLY way your python can impact the fuzzer is by producing an input.bin file that will be passed to the fuzzer entrypoint; do not attempt to create other files or otherwise manipulate the fuzzer's environment.</important>\\n<important>If you produce a candidate PoV that fails to crash the harness, you should use `reachability` and `debug_pov` to determine where your PoV is going wrong.</important>\\n<note>Your PoV python code simply needs to create an encoded PoV input. The included tools will handle it properly from there. DO NOT try to run the harness file or otherwise communicate with the vulnerable software. That will be done for your once your code outputs to a file!</note>\\n <rule> Even if you believe the vulnerability is not reachable, you should at least try to reach it by testing some candidate POVs. You may not terminate without trying some POVs first. </rule> \\n</instructions>\\n<tip>In addition to inputs that produce uncaught signals (SIGSEGV, SIGILL, SIGABRT, etc), inputs that trigger enabled Clang sanitizers are also eligible for scoring. The following sanitizers are enabled for this project: \\n- address sanitizer (ASAN) : alerts on stack, heap, and global out-of-bounds accesses as well as dynamic memory lifecycle issues (use after free, double free, etc.) - note that LeakSanitizer is enabled, so memory leaks will also trigger crashes!\\n- undefined behavior sanitizer (UBSAN) : alerts when performing operations with undefined behavior (division by zero, out of bounds bitshifts, signed integer overflows, etc). UBSAN is enabled and configured to immediately abort on error with one exception: *unsigned* integer overflows will not abort. In other words, *unsigned* integer overflows will only crash if they directly cause a crashing side effect such as an out-of-bounds access or a SIGSEGV.\\n- memory sanitizer (MSAN) : alerts when accessing uninitialized memory\\n</tip>\\n<IMPORTANT>If you are exploiting a buffer overflow or out-of-bounds access, note that the sanitizer will only trigger if you access beyond the end of the *allocation*, not just the buffer or array. As a result, you may want to use input sizes a bit larger than you need to simply overflow the buffer.</IMPORTANT>\\n\", 'cache_control': {'type': 'ephemeral'}}]",
                    "[{'type': 'text', 'text': \"You are an AI agent competing in an important computer security competition. We are working with other AI agents to help each other in our task to discover vulnerabilities, generate proof-of-vulnerabilities, and patch the code that was created by the organizers of the competition.\\nWhat the organizers told us about this challenge:\\nit is named apache-tomcat\\nall relevant code to the competition is written in jvm\\nThis is not an interactive session. Every one of your responses must call at least one of the available tools. Do not ever respond without invoking a tool.\\nAnother agent is working on developing the PoV but encountered some issues. They have limited ability to analyze the source code for the problem. Your job is to thoughtfully answer their question using the tools you have that let you access and search source code. It is okay to be creative and give information YOU BELIEVE will be useful, even if they didn't explicitly ask for it. It is possible they overlooked something, and you can be helpful by thinking of the bigger picture. For example, they might not know that there is a condition check before anyone calls the function they are analyzing. If you notice something like that which could be relevant to them, be helpful and let them know!\\nStill, be sure to answer what they actually ask to the best of your ability.\\nThis is not interactive: you cannot ask for clarification from the other agent. However, if their question is unclear, it is better to give up answering and explain why their question cannot be answered, and they can try asking you again. You must use your best judgement and think step-by-step to develop a plan for how you can use the tools available to answer their query. When you are done, simply write a text response to the question you were asked. Try to keep your final message straight forward and to the point.\\n<important>For this competition, software bugs are only in scope if they are present in the diff available to you via the `read_diff` tool! Therefore, to answer questions about bugs your first step should be a call to that tool to reduce the scope of your work.</important>\\n<tip>Configurable values (those likely to be adjusted by users of the software) are most likely set inside the harness or files closely related to the harness. Try reading the harness file if you need to answer questions about potential configuration settings or variables.</tip>\\n\", 'cache_control': {'type': 'ephemeral'}}]",
                    "[{'type': 'text', 'text': \"You are an AI agent competing in an important computer security competition. You are helping another AI agent to add debugging print statements to a source code tree. They have developed instructions they want you to follow for where to add statements and what to put in them. Follow it to the best of your abilities, but you can be a little flexible (you may interpret their requests reasonably given what you know or learn). They cannot interact with you, so you must resolve any problems on your own. However, if their question is missing essential information that you need, or you cannot proceed, it is better to tell them. For example, if it seems you are supposed to instrument a specific function but are missing the context to determine what function, that is a good reason to return an error. They can then come up with a better question to ask you with more details. Think clearly step-by-step about the best way to accomplish what they ask and use the tools available to you. Make sure your patched code properly compiles after you finish.\\nBefore you begin patching, make sure you understand the context and what printing functions are available to you in that context.\\n<important>Preface ALL PRINT MESSAGES with the string `CRS_DEBUG` so that we can easily identify them.</important>\\nWhen you are done, provide a brief description of the changes you made so that they can be used.\\n<important>Be sure to test your patch using `compile_source` BEFORE you finish!!</important>\\n<important>If you ever get stuck with code that won't compile, we recommend undoing all of your patches and starting over</important>\\n<important>Ensure all print statements are triggered even if the target software has debugging disabled. DO NOT USE STATEMENTS THAT REQUIRE SPECIAL FLAGS OR SETTINGS TO BE VISIBLE. If that requires using statements normally reserved for error or warning conditions, do so. We cannot change the debug or verbosity level of the software, and must ensure the print statements are visible!</important>\\n<important>Make sure your print statement outputs to stdout or stderr! Do not use any logging utilities that output to log files instead! If you MUST use project-speific logging utilities, make sure you are using the highest possible log level!</important>\\n<notice>Be careful about using %s in format strings, which can cause issues if the data is not ascii or is not null-terminated! Also try to avoid %p, as pointer values may be difficult to de-duplicate in the log output.</notice>\\n\", 'cache_control': {'type': 'ephemeral'}}]",
                    "[{'type': 'text', 'text': 'You are a security researcher tasked with crafting an input that calls the targeted function based on a provided seed that reaches an adjacent function. You will be given the source code and name of the function that the current seed reaches, the name of the targeted function, and the seed that reaches the current function. Your job is to carefully analyze the code and the current seed, then produce a seed to reach the target function.\\nBefore proceeding, you should read the relative surrounding code carefully and deeply understand what they do. You must not simply read the top-level functions and comments and assume what the rest of the code does. You should understand *exactly* how the given function works.\\n<IMPORTANT>DO NOT GUESS VALUES for any constants. If you need specific constants, please look them up using the tools available to you.</IMPORTANT>\\n<tips>\\n- Generally you cannot modify environment variables or configuration files on disk. You can only affect these if the harness for this program reads those values from your data input.\\n- If you need additional information, such as source files, header files, or other readable resources, use tools to retrieve necessary details.\\n- The provided input can be in a valid or broken format. Your task is not to correct the input format but to generate an input that reaches the targeted code line.\\n- If you are 100% sure that you cannot reach the target function, you may terminate early.\\n- Do not output that you succeeded until you have verified it reaches the target with the query_coverage tool.\\n</tips>\\nBe precise and thorough in your analysis.\\n<output>\\nDo not stop calling tools until you are finished with your task.\\nWhen you are completely finished, provide output as plain XML with the structure AFTER your thoughts:\\n`<summary>` : (string) A brief summary of your work.\\n`<input_python>` : (string) The python to generate the input seed that reaches the target.\\n`<reach_target_function>` : (boolean) Whether the seed was tested to successfully reach the target function.\\nALWAYS put your explanations and thoughts BEFORE the XML tags. The XML tags should be the last thing that you output\\n</output>', 'cache_control': {'type': 'ephemeral'}}]",
                    "[{'type': 'text', 'text': 'You are an AI agent competing in an important computer security competition. We are working with other AI agents to help each other in our task to discover vulnerabilities, generate proof-of-vulnerabilities, and patch the code that was created by the organizers of the competition.\\nThe competition organizers have told us the following:\\n<challenge_facts>\\n<challenge_name>nginx</challenge_name>\\n<challenge_language>c</challenge_language>\\n<rule>all vulnerabilities from the organizers will be in portions of code written in c</rule>\\n<rule>PoVs must cause the fuzz harness to crash on the input in order to be scorable. Fuzz harnesses are typically compiled with various runtime sanitizers to detect security issues and crash, even if the issue would not normally cause a crash on its own.</rule>\\n</challenge_facts>\\nThis is not an interactive session. Every one of your responses must call at least one of the available tools. Do not ever respond without invoking a tool.\\n<instructions>Another agent has identified a potential vulnerability. You are responsible for producing AND testing a proof-of-vulnerability for this vulnerability. Think step-by-step about how to use the tools available to you in order to produce a working PoV. If the PoV does not work the first time, take a deep breath and think carefully about what you may be able to do to fix it before you give up.\\nYou should begin by using `source_questions` to understand the vulnerability and determine how to reach it from one of the available harnesses.\\nOnce you have a plan to trigger the vulnerability, start working on writing and testing the POV.\\n<important>Do not assume you understand the input format to the fuzz harness. You must use the `get_harness_input_encoder` to get helper code producing harness inputs.</important>\\n<important>If you produce a candidate PoV that fails to crash the harness, you should use `reachability` and `debug_pov` to determine where your PoV is going wrong.</important>\\n<note>Your PoV python code simply needs to create an encoded PoV input. The included tools will handle it properly from there. DO NOT try to run the harness file or otherwise communicate with the vulnerable software. That will be done for your once your code outputs to a file!</note>\\n<rule>\\nEven if you believe the vulnerability is not reachable, you should at least try to reach it by testing some candidate POVs. You may not terminate without trying some POVs first.\\n</rule>\\n</instructions>\\n<IMPORTANT>If you are exploiting a buffer overflow or out-of-bounds access, note that the sanitizer will only trigger if you access beyond the end of the *allocation*, not just the buffer or array. As a result, you may want to use input sizes a bit larger than you need to simply overflow the buffer.</IMPORTANT>', 'cache_control': {'type': 'ephemeral'}}]"
                  ],
                  "type": "string"
                },
                "thinking": {
                  "custom_type": "string",
                  "examples": [
                    "{'type': 'disabled'}"
                  ],
                  "type": "string"
                },
                "type": {
                  "custom_type": "string",
                  "examples": [
                    "message"
                  ],
                  "type": "string"
                }
              },
              "required": [
                "role",
                "stop_sequence",
                "type"
              ],
              "type": "object"
            },
            "azure": {
              "custom_type": "object",
              "examples": [
                {
                  "created": 1746490547,
                  "extra_body": "{}",
                  "logprobs": true,
                  "n": 1,
                  "object": "chat.completion",
                  "prompt_filter_results": "[{'prompt_index': 0, 'content_filter_results': {'hate': {'filtered': False, 'severity': 'safe'}, 'self_harm': {'filtered': False, 'severity': 'safe'}, 'sexual': {'filtered': False, 'severity': 'safe'}, 'violence': {'filtered': False, 'severity': 'safe'}}}]",
                  "system_fingerprint": "fp_3dfb47c1f3",
                  "top_logprobs": 10
                },
                {
                  "created": 1751247114,
                  "extra_body": "{}",
                  "n": 1,
                  "object": "chat.completion",
                  "prompt_filter_results": "[{'prompt_index': 0, 'content_filter_results': {'hate': {'filtered': False, 'severity': 'safe'}, 'self_harm': {'filtered': False, 'severity': 'safe'}, 'sexual': {'filtered': False, 'severity': 'safe'}, 'violence': {'filtered': False, 'severity': 'safe'}}}]",
                  "system_fingerprint": ""
                },
                {
                  "created": 1750958581,
                  "extra_body": "{}",
                  "n": 1,
                  "object": "chat.completion",
                  "prompt_filter_results": "[{'prompt_index': 0, 'content_filter_results': {'hate': {'filtered': False, 'severity': 'safe'}, 'self_harm': {'filtered': False, 'severity': 'safe'}, 'sexual': {'filtered': False, 'severity': 'safe'}, 'violence': {'filtered': False, 'severity': 'safe'}}}]",
                  "system_fingerprint": ""
                },
                {
                  "created": 1751112082,
                  "extra_body": "{}",
                  "n": 1,
                  "object": "chat.completion",
                  "prompt_filter_results": "[{'prompt_index': 0, 'content_filter_results': {'hate': {'filtered': False, 'severity': 'safe'}, 'self_harm': {'filtered': False, 'severity': 'safe'}, 'sexual': {'filtered': False, 'severity': 'safe'}, 'violence': {'filtered': False, 'severity': 'safe'}}}]",
                  "system_fingerprint": ""
                },
                {
                  "created": 1751245800,
                  "extra_body": "{}",
                  "n": 1,
                  "object": "chat.completion",
                  "prompt_filter_results": "[{'prompt_index': 0, 'content_filter_results': {'hate': {'filtered': False, 'severity': 'safe'}, 'self_harm': {'filtered': False, 'severity': 'safe'}, 'sexual': {'filtered': False, 'severity': 'safe'}, 'violence': {'filtered': False, 'severity': 'safe'}}}]",
                  "system_fingerprint": ""
                }
              ],
              "properties": {
                "created": {
                  "custom_type": "int32",
                  "examples": [
                    1746490547,
                    1751247114,
                    1750958581,
                    1751245800,
                    1751112082
                  ],
                  "excludeMaximum": 1751313679,
                  "minimum": 1746489808,
                  "type": "number"
                },
                "extra_body": {
                  "custom_type": "string",
                  "examples": [
                    "{}",
                    "{}",
                    "{}",
                    "{}",
                    "{}"
                  ],
                  "type": "string"
                },
                "logprobs": {
                  "custom_type": "bool",
                  "examples": [
                    true
                  ],
                  "type": "boolean"
                },
                "n": {
                  "custom_type": "int8",
                  "examples": [
                    1,
                    1,
                    1,
                    1,
                    1
                  ],
                  "excludeMaximum": 1,
                  "minimum": 1,
                  "type": "number"
                },
                "object": {
                  "custom_type": "string",
                  "examples": [
                    "chat.completion",
                    "chat.completion",
                    "chat.completion",
                    "chat.completion",
                    "chat.completion"
                  ],
                  "type": "string"
                },
                "prompt_filter_results": {
                  "custom_type": "string",
                  "examples": [
                    "[{'prompt_index': 0, 'content_filter_results': {'hate': {'filtered': False, 'severity': 'safe'}, 'self_harm': {'filtered': False, 'severity': 'safe'}, 'sexual': {'filtered': False, 'severity': 'safe'}, 'violence': {'filtered': False, 'severity': 'safe'}}}]",
                    "[{'prompt_index': 0, 'content_filter_results': {'hate': {'filtered': False, 'severity': 'safe'}, 'self_harm': {'filtered': False, 'severity': 'safe'}, 'sexual': {'filtered': False, 'severity': 'safe'}, 'violence': {'filtered': False, 'severity': 'safe'}}}]",
                    "[{'prompt_index': 0, 'content_filter_results': {'hate': {'filtered': False, 'severity': 'safe'}, 'self_harm': {'filtered': False, 'severity': 'safe'}, 'sexual': {'filtered': False, 'severity': 'safe'}, 'violence': {'filtered': False, 'severity': 'safe'}}}]",
                    "[{'prompt_index': 0, 'content_filter_results': {'hate': {'filtered': False, 'severity': 'safe'}, 'self_harm': {'filtered': False, 'severity': 'safe'}, 'sexual': {'filtered': False, 'severity': 'safe'}, 'violence': {'filtered': False, 'severity': 'safe'}}}]",
                    "[{'prompt_index': 0, 'content_filter_results': {'hate': {'filtered': False, 'severity': 'safe'}, 'self_harm': {'filtered': False, 'severity': 'safe'}, 'sexual': {'filtered': False, 'severity': 'safe'}, 'violence': {'filtered': False, 'severity': 'safe'}}}]"
                  ],
                  "type": "string"
                },
                "system_fingerprint": {
                  "custom_type": "string",
                  "examples": [
                    "fp_3dfb47c1f3",
                    "",
                    "",
                    "",
                    ""
                  ],
                  "type": "string"
                },
                "top_logprobs": {
                  "custom_type": "int8",
                  "examples": [
                    10
                  ],
                  "excludeMaximum": 12,
                  "minimum": 4,
                  "type": "number"
                }
              },
              "required": [
                "created",
                "extra_body",
                "n",
                "object",
                "prompt_filter_results",
                "system_fingerprint"
              ],
              "type": "object"
            },
            "gemini": {
              "custom_type": "object",
              "properties": {
                "candidates": {
                  "custom_type": "string",
                  "type": "string"
                },
                "contents": {
                  "custom_type": "string",
                  "type": "string"
                },
                "generationConfig": {
                  "custom_type": "string",
                  "type": "string"
                },
                "system_instruction": {
                  "custom_type": "string",
                  "type": "string"
                }
              },
              "required": [
                "candidates",
                "contents",
                "generationConfig",
                "system_instruction"
              ],
              "type": "object"
            },
            "openai": {
              "custom_type": "object",
              "examples": [
                {
                  "created": 1746557045,
                  "extra_body": "{}",
                  "object": "chat.completion",
                  "system_fingerprint": "fp_90122d973c"
                },
                {
                  "created": 1746558197,
                  "extra_body": "{}",
                  "logprobs": true,
                  "n": 1,
                  "object": "chat.completion",
                  "system_fingerprint": "fp_b38e740b47",
                  "top_logprobs": 4
                },
                {
                  "created": 1749213215,
                  "extra_body": "{}",
                  "object": "chat.completion",
                  "system_fingerprint": "fp_a288987b44"
                },
                {
                  "created": 1751314631,
                  "extra_body": "{}",
                  "n": 1,
                  "object": "chat.completion",
                  "system_fingerprint": ""
                },
                {
                  "created": 1750957927,
                  "extra_body": "{}",
                  "logprobs": true,
                  "n": 1,
                  "object": "chat.completion",
                  "system_fingerprint": "fp_51e1070cf2",
                  "top_logprobs": 4
                }
              ],
              "properties": {
                "created": {
                  "custom_type": "int32",
                  "examples": [
                    1743586647,
                    1749169494,
                    1749170305,
                    1750956567,
                    1751314006
                  ],
                  "excludeMaximum": 1751316407,
                  "minimum": 1743586647,
                  "type": "number"
                },
                "extra_body": {
                  "custom_type": "string",
                  "examples": [
                    "{}"
                  ],
                  "type": "string"
                },
                "logprobs": {
                  "custom_type": "bool",
                  "examples": [
                    true,
                    true,
                    true,
                    true,
                    true
                  ],
                  "type": "boolean"
                },
                "n": {
                  "custom_type": "int8",
                  "examples": [
                    1
                  ],
                  "excludeMaximum": 1,
                  "minimum": 1,
                  "type": "number"
                },
                "object": {
                  "custom_type": "string",
                  "examples": [
                    "chat.completion"
                  ],
                  "type": "string"
                },
                "system_fingerprint": {
                  "custom_type": "string",
                  "examples": [
                    "",
                    "fp_03be0c45cc",
                    "fp_a1102cf978",
                    "fp_b38e740b47",
                    "fp_beec22d258"
                  ],
                  "type": "string"
                },
                "top_logprobs": {
                  "custom_type": "int8",
                  "examples": [
                    2,
                    6,
                    4,
                    4,
                    6
                  ],
                  "excludeMaximum": 20,
                  "minimum": 2,
                  "type": "number"
                }
              },
              "required": [
                "created",
                "extra_body",
                "object",
                "system_fingerprint"
              ],
              "type": "object"
            },
            "request": {
              "custom_type": "object",
              "examples": [
                {
                  "type": "acompletion"
                }
              ],
              "properties": {
                "type": {
                  "custom_type": "string",
                  "examples": [
                    "acompletion"
                  ],
                  "type": "string"
                }
              },
              "required": [
                "type"
              ],
              "type": "object"
            }
          },
          "required": [],
          "type": "object"
        },
        "log": {
          "custom_type": "object",
          "examples": [
            {
              "caller": "/app/internal/fuzz/crash_handler.go:350",
              "level": "info",
              "message": "Processed new crash file"
            },
            {
              "caller": "/app/internal/fuzz/fuzzing.go:181",
              "level": "error",
              "message": "Failed to kill docker container"
            },
            {
              "caller": "/app/internal/fuzz/seed_handler.go:315",
              "level": "error",
              "message": "Failed to zip seeds"
            },
            {
              "caller": "/app/internal/scheduler/scheduler.go:196",
              "level": "info",
              "message": "score"
            },
            {
              "caller": "/app/internal/fuzz/manager.go:174",
              "level": "debug",
              "message": "Fuzzing result"
            }
          ],
          "properties": {
            "caller": {
              "custom_type": "string",
              "examples": [
                "/app/internal/fuzz/crash_handler.go:275",
                "/app/internal/fuzz/fuzzing.go:186",
                "/app/internal/fuzz/fuzzing.go:91",
                "/app/internal/fuzz/seed_handler.go:235",
                "/app/internal/scheduler/scheduler.go:114"
              ],
              "type": "string"
            },
            "level": {
              "custom_type": "string",
              "examples": [
                "debug",
                "error",
                "info"
              ],
              "type": "string"
            },
            "message": {
              "custom_type": "string",
              "examples": [
                "Adding new crash directory to watcher",
                "Collected seeds",
                "Removed AFL output directory from monitoring",
                "Seeds synced successfully",
                "score"
              ],
              "type": "string"
            }
          },
          "required": [
            "caller",
            "level",
            "message"
          ],
          "type": "object"
        },
        "message": {
          "custom_type": "object",
          "examples": [
            {
              "id": "e3ac948c-0d9e-4fb0-852e-b4f1a14bb418"
            }
          ],
          "properties": {
            "id": {
              "custom_type": "uuid",
              "examples": [
                "e3ac948c-0d9e-4fb0-852e-b4f1a14bb418"
              ],
              "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
              "type": "string"
            }
          },
          "required": [
            "id"
          ],
          "type": "object"
        },
        "message_type": {
          "custom_type": "string",
          "examples": [
            "directed_request",
            "slice_request",
            "slice_request",
            "directed_request",
            "slice_request"
          ],
          "type": "string"
        },
        "metadata": {
          "custom_type": "object",
          "examples": [
            {
              "applied_guardrails": "[]",
              "mcp_tool_call_metadata": "",
              "prompt_management_metadata": "",
              "requester_ip_address": "",
              "requester_metadata": "",
              "spend_logs_metadata": "",
              "usage_object": "{'completion_tokens': 128, 'prompt_tokens': 8982, 'total_tokens': 9110, 'completion_tokens_details': None, 'prompt_tokens_details': {'audio_tokens': None, 'cached_tokens': 8978}, 'cache_creation_input_tokens': 1097, 'cache_read_input_tokens': 8978}",
              "user_api_key_alias": "",
              "user_api_key_end_user_id": "",
              "user_api_key_hash": "",
              "user_api_key_org_id": "",
              "user_api_key_team_alias": "",
              "user_api_key_team_id": "",
              "user_api_key_user_email": "",
              "user_api_key_user_id": ""
            },
            {
              "applied_guardrails": "[]",
              "mcp_tool_call_metadata": "",
              "prompt_management_metadata": "",
              "requester_ip_address": "",
              "requester_metadata": "",
              "spend_logs_metadata": "",
              "usage_object": "{'completion_tokens': 172, 'prompt_tokens': 19513, 'total_tokens': 19685, 'completion_tokens_details': {'accepted_prediction_tokens': 0, 'audio_tokens': 0, 'reasoning_tokens': 128, 'rejected_prediction_tokens': 0}, 'prompt_tokens_details': {'audio_tokens': 0, 'cached_tokens': 1664}}",
              "user_api_key_end_user_id": "",
              "user_api_key_user_email": ""
            },
            {
              "applied_guardrails": "[]",
              "mcp_tool_call_metadata": "",
              "prompt_management_metadata": "",
              "requester_ip_address": "",
              "requester_metadata": "",
              "spend_logs_metadata": "",
              "usage_object": "{'completion_tokens': 852, 'prompt_tokens': 14577, 'total_tokens': 15429, 'completion_tokens_details': None, 'prompt_tokens_details': {'audio_tokens': None, 'cached_tokens': 14576}, 'cache_creation_input_tokens': 340, 'cache_read_input_tokens': 14576}",
              "user_api_key_alias": "",
              "user_api_key_end_user_id": "",
              "user_api_key_hash": "",
              "user_api_key_org_id": "",
              "user_api_key_team_alias": "",
              "user_api_key_team_id": "",
              "user_api_key_user_email": "",
              "user_api_key_user_id": ""
            },
            {
              "applied_guardrails": "[]"
            },
            {
              "applied_guardrails": "[]",
              "mcp_tool_call_metadata": "",
              "prompt_management_metadata": "",
              "requester_metadata": "",
              "usage_object": "{'completion_tokens': 737, 'prompt_tokens': 28175, 'total_tokens': 28912, 'completion_tokens_details': {'accepted_prediction_tokens': 0, 'audio_tokens': 0, 'reasoning_tokens': 704, 'rejected_prediction_tokens': 0}, 'prompt_tokens_details': {'audio_tokens': 0, 'cached_tokens': 1920}}",
              "user_api_key_end_user_id": ""
            }
          ],
          "properties": {
            "applied_guardrails": {
              "custom_type": "string",
              "examples": [
                "[]"
              ],
              "type": "string"
            },
            "mcp_tool_call_metadata": {
              "custom_type": "string",
              "examples": [
                ""
              ],
              "type": "string"
            },
            "prompt_management_metadata": {
              "custom_type": "string",
              "examples": [
                ""
              ],
              "type": "string"
            },
            "requester_ip_address": {
              "custom_type": "string",
              "examples": [
                ""
              ],
              "type": "string"
            },
            "requester_metadata": {
              "custom_type": "string",
              "examples": [
                ""
              ],
              "type": "string"
            },
            "spend_logs_metadata": {
              "custom_type": "string",
              "examples": [
                ""
              ],
              "type": "string"
            },
            "usage_object": {
              "custom_type": "string",
              "examples": [
                "{'completion_tokens': 129, 'prompt_tokens': 8610, 'total_tokens': 8739, 'completion_tokens_details': None, 'prompt_tokens_details': {'audio_tokens': None, 'cached_tokens': 8609}, 'cache_creation_input_tokens': 74, 'cache_read_input_tokens': 8609}",
                "{'completion_tokens': 24, 'prompt_tokens': 3274, 'total_tokens': 3298, 'completion_tokens_details': {'accepted_prediction_tokens': 0, 'audio_tokens': 0, 'reasoning_tokens': 0, 'rejected_prediction_tokens': 0}, 'prompt_tokens_details': {'audio_tokens': 0, 'cached_tokens': 1536}}",
                "{'completion_tokens': 2741, 'prompt_tokens': 16863, 'total_tokens': 19604, 'completion_tokens_details': None, 'prompt_tokens_details': {'audio_tokens': None, 'cached_tokens': 16857}, 'cache_creation_input_tokens': 2809, 'cache_read_input_tokens': 16857}",
                "{'completion_tokens': 283, 'prompt_tokens': 8639, 'total_tokens': 8922, 'completion_tokens_details': None, 'prompt_tokens_details': {'audio_tokens': None, 'cached_tokens': 8638}, 'cache_creation_input_tokens': 192, 'cache_read_input_tokens': 8638}",
                "{'completion_tokens': 30, 'prompt_tokens': 23220, 'total_tokens': 23250, 'completion_tokens_details': {'accepted_prediction_tokens': 0, 'audio_tokens': 0, 'reasoning_tokens': 0, 'rejected_prediction_tokens': 0}, 'prompt_tokens_details': {'audio_tokens': 0, 'cached_tokens': 2176}}"
              ],
              "type": "string"
            },
            "user_api_key_alias": {
              "custom_type": "string",
              "examples": [
                ""
              ],
              "type": "string"
            },
            "user_api_key_end_user_id": {
              "custom_type": "string",
              "examples": [
                ""
              ],
              "type": "string"
            },
            "user_api_key_hash": {
              "custom_type": "string",
              "examples": [
                ""
              ],
              "type": "string"
            },
            "user_api_key_org_id": {
              "custom_type": "string",
              "examples": [
                ""
              ],
              "type": "string"
            },
            "user_api_key_team_alias": {
              "custom_type": "string",
              "examples": [
                ""
              ],
              "type": "string"
            },
            "user_api_key_team_id": {
              "custom_type": "string",
              "examples": [
                ""
              ],
              "type": "string"
            },
            "user_api_key_user_email": {
              "custom_type": "string",
              "examples": [
                ""
              ],
              "type": "string"
            },
            "user_api_key_user_id": {
              "custom_type": "string",
              "examples": [
                ""
              ],
              "type": "string"
            }
          },
          "required": [],
          "type": "object"
        },
        "method": {
          "custom_type": "string",
          "examples": [
            "POST",
            "POST",
            "POST",
            "POST",
            "POST"
          ],
          "type": "string"
        },
        "msg": {
          "custom_type": "object",
          "examples": [
            {
              "entity": {
                "id": "01974191-355f-7629-ad63-2d448803d7b7",
                "type": "job"
              },
              "type": "command_result"
            },
            {
              "entity": {
                "id": "01974374-08e8-7c8b-bbec-0fc252e7319c",
                "type": "patch"
              },
              "type": "final"
            },
            {
              "entity": {
                "id": "01974d9e-02b8-7204-9da0-632446cfc1aa",
                "type": "patch"
              },
              "type": "final"
            },
            {
              "entity": {
                "id": "0197ad00-9914-7477-8ef7-59d0a5707053",
                "type": "job"
              },
              "type": "command_result"
            },
            {
              "patchTestsFailed": false,
              "status": "errored"
            }
          ],
          "properties": {
            "entity": {
              "custom_type": "object",
              "examples": [
                {
                  "id": "01974191-465e-7af6-9da4-4f721ee696ff",
                  "type": "job"
                },
                {
                  "id": "01974363-bcff-7c4e-b832-a54840000448",
                  "type": "patch"
                },
                {
                  "id": "01974400-e520-7b71-b322-819040b000d5",
                  "type": "patch"
                },
                {
                  "id": "0197ad19-a4fc-7e29-acdf-14f19b113397",
                  "type": "job"
                },
                {
                  "id": "0197b77e-d3d7-747b-be4c-8fde724723cf",
                  "type": "pov"
                }
              ],
              "properties": {
                "id": {
                  "custom_type": "uuid",
                  "examples": [
                    "01973dc1-3c3f-77db-b05c-581ede7d0416",
                    "0197457e-960a-7ffc-9d1c-3e5a656f9cb2",
                    "01974400-e520-7b71-b322-819040b000d5",
                    "01974876-d9db-7560-8e4d-d67a63a5db39",
                    "019741bc-71a3-7e6f-8bf8-c49b28c8e2e6"
                  ],
                  "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                  "type": "string"
                },
                "type": {
                  "custom_type": "string",
                  "examples": [
                    "job",
                    "patch",
                    "job",
                    "pov",
                    "patch"
                  ],
                  "type": "string"
                }
              },
              "required": [
                "id",
                "type"
              ],
              "type": "object"
            },
            "patchTestsFailed": {
              "custom_type": "bool",
              "examples": [
                false,
                true,
                false,
                false,
                true
              ],
              "type": "boolean"
            },
            "status": {
              "custom_type": "string",
              "examples": [
                "passed",
                "errored",
                "passed",
                "errored",
                "failed"
              ],
              "type": "string"
            },
            "type": {
              "custom_type": "string",
              "examples": [
                "command_result",
                "final",
                "artifact",
                "final",
                "command_result"
              ],
              "type": "string"
            }
          },
          "required": [],
          "type": "object"
        },
        "name": {
          "custom_type": "string",
          "examples": [
            "job-01974277-cf57-7312-b0b6-cb677ebe5cdd",
            "patch-0197b36b-5018-7b02-8881-bf024204a3a8",
            "patch-0197c7c9-8dcc-7456-8916-9ad5c2c50f29",
            "pov-0196a6f6-ef9f-7f02-9ee0-bb41cbeeeecc",
            "pov-0197b44d-4125-7cc5-a7da-3e67c38e1e03"
          ],
          "type": "string"
        },
        "navmenu": {
          "custom_type": "object",
          "examples": [
            {
              "command_available": "[\"gui\",\"gui/composeview\"]",
              "enabled": true
            },
            {
              "command_available": "[\"gui\",\"gui/composeview\"]",
              "enabled": true
            },
            {
              "command_available": "[\"gui\",\"gui/composeview\"]",
              "enabled": true
            }
          ],
          "properties": {
            "command_available": {
              "custom_type": "string",
              "examples": [
                "[\"gui\",\"gui/composeview\"]",
                "[\"gui\",\"gui/composeview\"]",
                "[\"gui\",\"gui/composeview\"]"
              ],
              "type": "string"
            },
            "enabled": {
              "custom_type": "bool",
              "examples": [
                true,
                true,
                true
              ],
              "type": "boolean"
            }
          },
          "required": [
            "command_available",
            "enabled"
          ],
          "type": "object"
        },
        "net": {
          "custom_type": "object",
          "examples": [
            {
              "host": {
                "name": ""
              },
              "protocol": {
                "version": "1.1"
              },
              "sock": {
                "peer": {
                  "addr": "@"
                }
              }
            },
            {
              "host": {
                "name": "scantron",
                "port": 1323
              },
              "protocol": {
                "version": "1.1"
              },
              "sock": {
                "peer": {
                  "addr": "10.224.1.243",
                  "port": 36076
                }
              }
            },
            {
              "host": {
                "name": "scantron"
              },
              "protocol": {
                "version": "1.1"
              },
              "sock": {
                "peer": {
                  "addr": "10.224.0.72",
                  "port": 49614
                }
              }
            },
            {
              "host": {
                "port": 80
              },
              "peer": {
                "ip": "10.224.0.206",
                "port": 33106
              }
            },
            {
              "peer": {
                "name": "//./pipe/dockerDesktopLinuxEngine"
              }
            }
          ],
          "properties": {
            "host": {
              "custom_type": "object",
              "examples": [
                {
                  "name": ""
                },
                {
                  "name": "api.moby.localhost"
                },
                {
                  "name": "scantron",
                  "port": 1323
                },
                {
                  "name": "scantron"
                },
                {
                  "port": 80
                }
              ],
              "properties": {
                "name": {
                  "custom_type": "string",
                  "examples": [
                    "",
                    "api.moby.localhost",
                    "localhost",
                    "scantron"
                  ],
                  "type": "string"
                },
                "port": {
                  "custom_type": "int16",
                  "examples": [
                    80,
                    1323
                  ],
                  "excludeMaximum": 1323,
                  "minimum": 80,
                  "type": "number"
                }
              },
              "required": [],
              "type": "object"
            },
            "peer": {
              "custom_type": "object",
              "examples": [
                {
                  "ip": "10.224.0.206",
                  "port": 32848
                },
                {
                  "ip": "10.224.0.206",
                  "port": 56520
                },
                {
                  "ip": "10.224.0.206",
                  "port": 56670
                },
                {
                  "name": "//./pipe/dockerDesktopLinuxEngine"
                },
                {
                  "name": "ghcr.io"
                }
              ],
              "properties": {
                "ip": {
                  "custom_type": "string",
                  "examples": [
                    "10.224.0.206",
                    "10.224.5.126",
                    "10.224.0.202",
                    "10.224.2.86",
                    "10.224.1.144"
                  ],
                  "type": "string"
                },
                "name": {
                  "custom_type": "string",
                  "examples": [
                    "/var/run/dind-crs-buttercup/docker.sock",
                    "10.0.2.13",
                    "artiphishellciroundex2jxliqzs6.azurecr.io",
                    "dind",
                    "localhost"
                  ],
                  "type": "string"
                },
                "port": {
                  "custom_type": "uint16",
                  "examples": [
                    2375,
                    48294,
                    48322,
                    54176,
                    60908
                  ],
                  "excludeMaximum": 65531,
                  "minimum": 1026,
                  "type": "number"
                }
              },
              "required": [],
              "type": "object"
            },
            "protocol": {
              "custom_type": "object",
              "examples": [
                {
                  "version": "1.1"
                }
              ],
              "properties": {
                "version": {
                  "custom_type": "string",
                  "examples": [
                    "1.1"
                  ],
                  "type": "string"
                }
              },
              "required": [
                "version"
              ],
              "type": "object"
            },
            "sock": {
              "custom_type": "object",
              "examples": [
                {
                  "peer": {
                    "addr": "10.0.52.54",
                    "port": 2375
                  }
                },
                {
                  "peer": {
                    "addr": "10.224.10.188",
                    "port": 59124
                  }
                },
                {
                  "peer": {
                    "addr": "10.224.2.112",
                    "port": 55678
                  }
                },
                {
                  "peer": {
                    "addr": "172.18.0.3",
                    "port": 2375
                  }
                },
                {
                  "peer": {
                    "addr": "@"
                  }
                }
              ],
              "properties": {
                "peer": {
                  "custom_type": "object",
                  "examples": [
                    {
                      "addr": "10.0.255.249",
                      "port": 2375
                    },
                    {
                      "addr": "10.224.10.188",
                      "port": 59432
                    },
                    {
                      "addr": "10.224.2.112",
                      "port": 48860
                    },
                    {
                      "addr": "172.18.0.5",
                      "port": 2375
                    },
                    {
                      "addr": "@"
                    }
                  ],
                  "properties": {
                    "addr": {
                      "custom_type": "string",
                      "examples": [
                        "10.0.52.54",
                        "10.224.10.188",
                        "10.224.102.160",
                        "::1",
                        "@"
                      ],
                      "type": "string"
                    },
                    "port": {
                      "custom_type": "uint16",
                      "examples": [
                        7050,
                        47616,
                        47802,
                        53850,
                        60928
                      ],
                      "excludeMaximum": 60998,
                      "minimum": 2375,
                      "type": "number"
                    }
                  },
                  "required": [
                    "addr"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "peer"
              ],
              "type": "object"
            }
          },
          "required": [],
          "type": "object"
        },
        "network": {
          "custom_type": "object",
          "examples": [
            {
              "idOrName": "bridge"
            }
          ],
          "properties": {
            "idOrName": {
              "custom_type": "string",
              "examples": [
                "bridge"
              ],
              "type": "string"
            }
          },
          "required": [
            "idOrName"
          ],
          "type": "object"
        },
        "nid": {
          "custom_type": "string",
          "examples": [
            "17a6cb46cefde66948f7dd9602dd090094c1a266dc692709a25df5ed4806d7d4",
            "4863672f71321401e1e832d3f4af44fbf05b86c175b437bb71bd073112f9fa08",
            "8da4b88d865f789b9942513cd5458eeeda7fddc5c8c0b69fdf94ece4cb6e4032",
            "9e5901ee2c3ef3d126f839817009646b8ddd3c94db32d8740d419837976f6fa6",
            "ecf74227eae0e8544a930395b522f2101796b1123562d535b05f684424911461"
          ],
          "type": "string"
        },
        "note": {
          "custom_type": "string",
          "examples": [
            "Mock CRS",
            "all_you_need_is_a_fuzzing_brain",
            "shellphish",
            "team example - beefed up HCRS for testing fuzzer building",
            "team-atlanta"
          ],
          "type": "string"
        },
        "objectName": {
          "custom_type": "string",
          "examples": [
            "e9804d969388b458cec3d6000d21c1f4be9db545441b362a4b2813938fa19a4f",
            "bb9831f26ffa7c6dc16ea8dced9e833423fb50bcb58756e6979707c3ab0678db",
            "1a6a9a12b71100d66ef00b46cd9f62d84e4845e501fe6c2ac55e6e15e668eae8",
            "d4d08cee25c5fc928d76f60fe88995cb57a98dfeacb81fb6be2bf4621ded45bb",
            "b6f2315681c4a51a4144b84794f17fdeddc273411295d80a224760a4ff941fb9"
          ],
          "type": "string"
        },
        "oldURL": {
          "custom_type": "string",
          "examples": [
            "https://github.com/aixcc-afc/round-exhibition3-sqlite",
            "https://github.com/aixcc-afc/round-gpdev-logging-log4j2"
          ],
          "type": "string"
        },
        "outDir": {
          "custom_type": "string",
          "examples": [
            "/dind-shared/repo-4211464491",
            "/dind-shared/repo-3795765828",
            "/dind-shared/repo-4122722709",
            "/dind-shared/repo-704464476",
            "/dind-shared/repo-855832855"
          ],
          "type": "string"
        },
        "paramName": {
          "custom_type": "string",
          "examples": [
            "bundle_id",
            "job_id",
            "patch_id",
            "pov_id",
            "task_id"
          ],
          "type": "string"
        },
        "patch": {
          "custom_type": "object",
          "examples": [
            {
              "hash": "67e099fb3ee34263811cc80974996ac8ffef7ba71eb843fba60c9303b5e19560"
            },
            {
              "hash": "8c388440c33a9b8858df6c5ecacb50172d38a09edcda56a1f1dd4759bc88a1a6",
              "id": "019743b7-23e9-7e46-9568-e92e76a7595e"
            },
            {
              "hash": "b0ca1430b86847e9e5449bc263d810a052ab7b2d1b526ea3fef39c12632a5ce5"
            },
            {
              "id": "0195fc7d-d4aa-7cac-8f66-e0ed1ffb04e3"
            },
            {
              "url": "https://maintainerinterfaces.blob.core.windows.net/submissions/03f54cf02c2d8113f2bf30d483e1661f1f458195f1b1fbfad09aefd694f29bea?se=2025-06-10T07%3A33%3A10Z&sig=HL%2F18HEWMu7NVX%2Fqpgq865EpXU87Geif%2BTIhPr8crA4%3D&sp=r&sr=b&sv=2025-01-05"
            }
          ],
          "properties": {
            "hash": {
              "custom_type": "string",
              "examples": [
                "54ccc345db7a95d812b8ee8da5d6d6171756ba888680bd658c805e904cdf8b3b",
                "70f292a7ff131223e2167e9342eecb3a97447fc232720b73a18c4fa439d0ac57",
                "7d65d526f730e007a85573cfc6abb676d567608d67573c4cf2655d2aead9b51b",
                "a430aadc1163e9187eb0ffb0bb009f3f925c3ca261b49930f43a4a8b376f778a",
                "fbef5b9e276b1a92a17622c1b1d714edeff0310c2b6284511609c3c1e7924e64"
              ],
              "type": "string"
            },
            "id": {
              "custom_type": "uuid",
              "examples": [
                "0196a6d4-6b4b-71ec-a5a8-74da014ea513",
                "0197b38c-f5f8-7a93-8ad2-b2eee894b76d",
                "0197b6d5-1de0-7948-80eb-2bfefb33328c",
                "0197c3a3-c359-7662-ba46-049cf0096602",
                "cc7e71c7-54f1-4e7c-9d71-6c8a87c8d75a"
              ],
              "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
              "type": "string"
            },
            "url": {
              "custom_type": "string",
              "examples": [
                "",
                "https://maintainerinterfaces.blob.core.windows.net/submissions/611219d0455d76bea0bdddc688945290e9558c4757de5778cfcf8e7b3ec36ff9?se=2025-06-10T03%3A40%3A36Z&sig=AXMr7Bp%2B6jLNDhcZ4k%2BC7yHF%2BAlxu3Gj0%2BfYj05oPLQ%3D&sp=r&sr=b&sv=2025-01-05",
                "",
                "https://maintainerinterfaces.blob.core.windows.net/submissions/64f06f35ea4f60befca8a2dcf912c5e8e40efbb9ef4dc615f3e9bd1bded605e3?se=2025-07-01T15%3A39%3A34Z&sig=%2FWK14YCvz0%2FeZKLcWBcJF9TKTGH1QEQgkLnS8a7%2F6TU%3D&sp=r&sr=b&sv=2025-01-05",
                "https://maintainerinterfacesstg.blob.core.windows.net/submissions/79b295478e23646bf9bae9af8b60950cfde61b2775e9fe360842812038304b73?se=2025-06-30T20%3A37%3A34Z&sig=uDMV2C5wUv%2BZgas%2BoBQwpNLpRJg7oiRGCQVQowu4bE0%3D&sp=r&sr=b&sv=2025-01-05"
              ],
              "type": "string"
            }
          },
          "required": [],
          "type": "object"
        },
        "patchPath": {
          "custom_type": "string",
          "examples": [
            "/dind-shared/file-1389253519",
            "/dind-shared/file-2174413606",
            "/dind-shared/file-1744745692",
            "/dind-shared/file-1587605035",
            "/dind-shared/file-3882226648"
          ],
          "type": "string"
        },
        "patch_id": {
          "custom_type": "uuid",
          "examples": [
            "d4fa0a91-7753-42d8-be0e-3badb3fb5497",
            "23ee605f-de74-4ec3-8719-3c4f7308d90a",
            "23c676db-7aa4-4958-9bb3-5a6ab7b22932",
            "019741d1-1980-70b8-94c1-08d6c0df3f18",
            "0197b104-72cd-7d23-b711-f7d50121afa6"
          ],
          "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
          "type": "string"
        },
        "path": {
          "custom_type": "string",
          "examples": [
            "vuln.c",
            "src/main/java/org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream.java",
            "src/main/java/org/apache/commons/compress/compressors/gzip/GzipCompressorInputStream.java",
            "vuln.c",
            "/data/challengetask401000516/tarsDir/fa7ac2cb-206f-4e88-9137-3806b07df014.tar.gz"
          ],
          "type": "string"
        },
        "payload": {
          "custom_type": "string",
          "examples": [
            "{'task_id': '01974189-3a80-71b2-8e99-c886e5be1963', 'focus': 'round-exhibition3-dropbear', 'project_src_dir': '/crs-workdir/01974189-3a80-71b2-8e99-c886e5be1963-20250605-192003/patch_workspace/round-exhibition3-dropbear', 'target_functions': ['libtomcrypt/src/hashes/sha2/sha256.c:sha256_done', 'src/dbrandom.c:fuzz_seed', 'fuzz/fuzz-common.c:fuzz_common_setup', 'fuzz/fuzzer-kexmlkem-srv.c:setup', 'src/fuzz.c:buf_free']}",
            "{'task_id': '01974bc3-f9ed-73a2-9c76-bfe9d5311d3d', 'focus': 'round-exhibition3-tika', 'project_src_dir': '/crs-workdir/01974bc3-f9ed-73a2-9c76-bfe9d5311d3d-20250607-190030/round-exhibition3-tika-address', 'fuzzer_path': '/crs-workdir/01974bc3-f9ed-73a2-9c76-bfe9d5311d3d-20250607-190030/fuzz-tooling/build/out/tika-address/HtmlParserFuzzer', 'fuzzer_source_path': '/crs-workdir/01974bc3-f9ed-73a2-9c76-bfe9d5311d3d-20250607-190030/fuzz-tooling/projects/tika/project-parent/fuzz-targets/src/main/java/com/example/HtmlParserFuzzer.java', 'target_functions': {'tika-parsers/tika-parsers-standard/tika-parsers-standard-modules/tika-parser-html-module/src/main/java/org/apache/tika/parser/html/JSoupParser.java': [{'name': 'getSupportedTypes', 'start_line': 85}, {'name': 'isExtractScripts', 'start_line': 89}, {'name': 'setExtractScripts', 'start_line': 100}, {'name': 'parse', 'start_line': 105}, {'name': 'parseString', 'start_line': 146}, {'name': 'TikaNodeFilter', 'start_line': 168}, {'name': 'RuntimeSAXException', 'start_line': 237}, {'name': 'getWrapped', 'start_line': 241}, {'name': 'getEncodingDetector', 'start_line': 253}], 'tika-parsers/tika-parsers-standard/tika-parsers-standard-modules/tika-parser-html-module/src/main/java/org/apache/tika/parser/html/HtmlHandler.java': [{'name': 'startElementWithSafeAttributes', 'start_line': 241}, {'name': 'configureExifTool', 'start_line': 387}, {'name': 'resetExifTool', 'start_line': 411}, {'name': 'getExistingExifToolParser', 'start_line': 454}, {'name': 'writeScript', 'start_line': 475}]}}",
            "{'task_id': '0197b620-36a0-7a04-a20c-7573bf9a215a', 'focus': 'round-final-phase2-libavif', 'project_src_dir': '/crs-workdir/0197b620-36a0-7a04-a20c-7573bf9a215a-20250628-104056/round-final-phase2-libavif-address', 'fuzzer_path': '/crs-workdir/0197b620-36a0-7a04-a20c-7573bf9a215a-20250628-104056/fuzz-tooling/build/out/libavif-address/avif_fuzztest_read_image@ReadImageFuzzTest.ReadImageFile', 'fuzzer_source_path': '', 'target_functions': {'apps/avifdec.c': [{'name': 'syntax', 'start_line': 36}, {'name': 'main', 'start_line': 196}], 'include/avif/avif.h': [{'name': 'quality', 'start_line': 989}, {'name': 'settings', 'start_line': 990}], 'src/reformat.c': [{'name': 'on', 'start_line': 731}, {'name': 'min', 'start_line': 758}, {'name': 'avifImageYUVToRGB', 'start_line': 1830}]}}",
            "{'task_id': '0197b8b5-2c32-778d-a7a2-6dd4ad8c3d69', 'focus': 'round-final-phase2-pdfbox', 'project_src_dir': '/crs-workdir/0197b8b5-2c32-778d-a7a2-6dd4ad8c3d69-20250629-023100/patch_workspace/round-final-phase2-pdfbox', 'target_functions': ['org/apache/pdfbox/pdfparser/BaseParser.java:readStringNumber', 'org/apache/pdfbox/pdfparser/COSParser.java:validateStreamLength', 'org/apache/pdfbox/filter/Filter.java:decode', 'org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java:parse', 'org/apache/pdfbox/pdfparser/BruteForceParser.java:bfSearchForObjects', 'org/apache/pdfbox/io/RandomAccessReadBuffer.java:expandBuffer']}",
            "{'task_id': '0197bbc6-677f-74b0-8de2-0cbfceaf8455', 'focus': 'round-final-phase2-pdfbox', 'project_src_dir': '/crs-workdir/0197bbc6-677f-74b0-8de2-0cbfceaf8455-20250629-130039/round-final-phase2-pdfbox-address', 'fuzzer_path': '/crs-workdir/0197bbc6-677f-74b0-8de2-0cbfceaf8455-20250629-130039/fuzz-tooling/build/out/pdfbox-address/DomXfaParserFuzzer', 'fuzzer_source_path': '/crs-workdir/0197bbc6-677f-74b0-8de2-0cbfceaf8455-20250629-130039/fuzz-tooling/projects/pdfbox/project-parent/fuzz-targets/src/main/java/com/example/DomXfaParserFuzzer.java', 'target_functions': {'pdfbox/src/main/java/org/apache/pdfbox/ocr/OCRStreamEngine.java': [{'name': 'setTimeoutMillisPerPage', 'start_line': 55}, {'name': 'setTesseractPath', 'start_line': 59}, {'name': 'getText', 'start_line': 69}, {'name': 'quietlyDeleteDir', 'start_line': 98}, {'name': 'writeText', 'start_line': 128}, {'name': 'processPages', 'start_line': 133}, {'name': 'processPage', 'start_line': 146}, {'name': 'runTesseract', 'start_line': 158}, {'name': 'extractContent', 'start_line': 170}, {'name': 'runOCRProcess', 'start_line': 200}, {'name': 'logStream', 'start_line': 240}]}}"
          ],
          "type": "string"
        },
        "pdt": {
          "custom_type": "object",
          "examples": [
            {
              "id": "199b38e4f71bf790b34b5f19bcd01325",
              "replica_id": "0",
              "task_name": "povguy"
            },
            {
              "id": "457e15048964ed089d82a6a30df8a3e4",
              "replica_id": "3",
              "task_name": "grammar_agent_explore"
            },
            {
              "id": "7a7232a33eae31033a215211941d0dce",
              "replica_id": "3",
              "task_name": "grammar_agent_explore"
            },
            {
              "id": "af7b1948e237bf9567d69da91379d587",
              "replica_id": "1",
              "task_name": "grammar_agent_explore"
            },
            {
              "id": "edf077082d691ba0775e4da8f23142da",
              "replica_id": "0",
              "task_name": "povguy"
            }
          ],
          "properties": {
            "id": {
              "custom_type": "string",
              "examples": [
                "00645e145e445970d94aa57a2b1a8a72",
                "27399ab739e55043b94c8e6116e31bc5",
                "6fc58eb0bcf23109f09698022f7b1ec3",
                "97285d9917211bfb9eeed85f41af89fa",
                "a03342789c8055535abd6e65ae427492"
              ],
              "type": "string"
            },
            "replica_id": {
              "custom_type": "string",
              "examples": [
                "0",
                "1",
                "2",
                "3"
              ],
              "type": "string"
            },
            "task_name": {
              "custom_type": "string",
              "examples": [
                "aflpp_cross_node_sync",
                "grammar_guy_fuzz",
                "libfuzzer_fuzz_merge",
                "patcherq",
                "povguy"
              ],
              "type": "string"
            }
          },
          "required": [
            "id"
          ],
          "type": "object"
        },
        "pov": {
          "custom_type": "object",
          "examples": [
            {
              "id": "0196b64c-5764-7317-95d2-fb3afdad0929"
            },
            {
              "id": "0197ae85-e8f1-7000-bcb8-d474800018fb"
            },
            {
              "id": "0197b8b8-ac83-74f2-b9cf-49cfff22cea9"
            },
            {
              "id": "32a24f6e-8a77-44db-acea-be5734daa64e"
            },
            {
              "id": "b0e60190-6f40-4975-9390-009e7c9f7103"
            }
          ],
          "properties": {
            "id": {
              "custom_type": "uuid",
              "examples": [
                "0195fcf7-235f-7be7-8535-8d6a1531f7d5",
                "019742e0-bb6d-74c5-9940-f0f439be94bc",
                "0197af1b-3e37-73d7-a601-6d1c95b1abab",
                "0197c651-b708-7fae-bfe4-77f9918f6709",
                "99585e86-d130-42c9-8d42-e0fa3f42dca3"
              ],
              "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
              "type": "string"
            }
          },
          "required": [
            "id"
          ],
          "type": "object"
        },
        "pov_found": {
          "custom_type": "int16",
          "examples": [
            0,
            0,
            0,
            0,
            0
          ],
          "excludeMaximum": 3838,
          "minimum": 0,
          "type": "number"
        },
        "pov_id": {
          "custom_type": "uuid",
          "examples": [
            "2794a0ec-847d-4d0b-afb2-95c79ceef100",
            "0195fcf7-235f-7be7-8535-8d6a1531f7d5",
            "b97dea39-0943-4132-9104-599676c84571",
            "0196b672-eab1-7164-9ffd-720940daf232",
            "0196b142-7750-7210-82ed-5f30d1b73db0"
          ],
          "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
          "type": "string"
        },
        "prefect": {
          "custom_type": "object",
          "examples": [
            {
              "deployment": {
                "id": "1260bcbe-ed95-429b-9e41-cda3bfc85ba8"
              },
              "flow": {
                "id": "6aa68349-46aa-4c03-a5ec-0a687d311f96"
              },
              "run": {
                "id": "20622453-2bb8-4bdb-b6dd-1b0152ed18df",
                "name": "glistening-stingray",
                "parameter": [
                  {
                    "key": "db_config",
                    "value": "dict"
                  },
                  {
                    "key": "parser",
                    "value": "dict"
                  },
                  {
                    "key": "task_id",
                    "value": "str"
                  }
                ],
                "type": "flow"
              },
              "tags": "[]"
            },
            {
              "run": {
                "id": "01974a7b-57dd-7c0b-b7fc-3ea6bb4aa478",
                "name": "copy_repository_and_fuzz_tooling-d18",
                "parameter": [
                  {
                    "key": "previous_fuzz_tooling",
                    "value": "NoneType"
                  },
                  {
                    "key": "project_focus",
                    "value": "str"
                  },
                  {
                    "key": "scan_artifact",
                    "value": "ScanArtifact"
                  },
                  {
                    "key": "scratch_space",
                    "value": "PosixPath"
                  }
                ],
                "type": "task"
              },
              "tags": "[\"copy_repository_and_fuzz_tooling\"]"
            },
            {
              "run": {
                "id": "2e0d886e-276b-494c-9a70-1cd0b3cd6803",
                "name": "copy_repository_and_fuzz_tooling-256",
                "parameter": [
                  {
                    "key": "previous_fuzz_tooling",
                    "value": "NoneType"
                  },
                  {
                    "key": "project_focus",
                    "value": "str"
                  },
                  {
                    "key": "scan_artifact",
                    "value": "ScanArtifact"
                  },
                  {
                    "key": "scratch_space",
                    "value": "PosixPath"
                  }
                ],
                "type": "task"
              },
              "tags": "[\"copy_repository_and_fuzz_tooling\"]"
            },
            {
              "run": {
                "id": "3c9514bf-906a-4906-8f4d-6143d6d59bb6",
                "name": "report_to_findings-ba6",
                "parameter": [
                  {
                    "key": "report",
                    "value": "DiffDozerReport"
                  },
                  {
                    "key": "self",
                    "value": "DeltaScanTask"
                  },
                  {
                    "key": "task",
                    "value": "DeltaScan"
                  }
                ],
                "type": "task"
              },
              "tags": "[]"
            },
            {
              "run": {
                "id": "f8f04a7d-9f45-4ee3-ab5e-9dc7a3e930d1",
                "name": "fuzz_sanitizer_harnesses-7f8",
                "parameter": [
                  {
                    "key": "db_config",
                    "value": "PostgresqlConfiguration"
                  },
                  {
                    "key": "fuzz_timeout_seconds",
                    "value": "int"
                  },
                  {
                    "key": "parser",
                    "value": "dict"
                  },
                  {
                    "key": "patch",
                    "value": "str"
                  },
                  {
                    "key": "raw_trigger",
                    "value": "bytes"
                  },
                  {
                    "key": "sanitizer",
                    "value": "str"
                  },
                  {
                    "key": "scan_artifact",
                    "value": "ScanArtifact"
                  },
                  {
                    "key": "task_obj",
                    "value": "DeltaScan"
                  },
                  {
                    "key": "trigger_obj",
                    "value": "Trigger"
                  }
                ],
                "type": "task"
              },
              "tags": "[\"fuzz_sanitizer_harnesses\"]"
            }
          ],
          "properties": {
            "deployment": {
              "custom_type": "object",
              "examples": [
                {
                  "id": "1260bcbe-ed95-429b-9e41-cda3bfc85ba8"
                },
                {
                  "id": "34059817-5838-4e50-a442-8460065a057f"
                },
                {
                  "id": "f55e2596-9778-456f-b69f-6e111ab652a8"
                },
                {
                  "id": "1c1ba41d-a9ec-4986-aa05-f241c7dbb64c"
                },
                {
                  "id": "92de2228-e1e0-476a-bcc5-87f6a5950918"
                }
              ],
              "properties": {
                "id": {
                  "custom_type": "uuid",
                  "examples": [
                    "1260bcbe-ed95-429b-9e41-cda3bfc85ba8",
                    "34059817-5838-4e50-a442-8460065a057f",
                    "f55e2596-9778-456f-b69f-6e111ab652a8",
                    "1c1ba41d-a9ec-4986-aa05-f241c7dbb64c",
                    "92de2228-e1e0-476a-bcc5-87f6a5950918"
                  ],
                  "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                  "type": "string"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            },
            "flow": {
              "custom_type": "object",
              "examples": [
                {
                  "id": "6aa68349-46aa-4c03-a5ec-0a687d311f96"
                },
                {
                  "id": "186f777c-50c2-41e3-b274-b12562842d80"
                },
                {
                  "id": "af0b75b1-1cf8-4cc7-bba0-2c897a02b291"
                },
                {
                  "id": "d128b2ca-9e5b-4623-b172-2eb400f1cdb4"
                },
                {
                  "id": "d9372f3c-a7dd-4774-a13c-5a86116dfec0"
                }
              ],
              "properties": {
                "id": {
                  "custom_type": "uuid",
                  "examples": [
                    "6aa68349-46aa-4c03-a5ec-0a687d311f96",
                    "186f777c-50c2-41e3-b274-b12562842d80",
                    "af0b75b1-1cf8-4cc7-bba0-2c897a02b291",
                    "d128b2ca-9e5b-4623-b172-2eb400f1cdb4",
                    "d9372f3c-a7dd-4774-a13c-5a86116dfec0"
                  ],
                  "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                  "type": "string"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            },
            "run": {
              "custom_type": "object",
              "examples": [
                {
                  "id": "01974a75-d9da-7462-abdb-894f85f7ca93",
                  "name": "generate_one_trigger-005",
                  "parameter": [
                    {
                      "key": "config",
                      "value": "dict"
                    },
                    {
                      "key": "db_config",
                      "value": "PostgresqlConfiguration"
                    },
                    {
                      "key": "finding_id",
                      "value": "UUID"
                    },
                    {
                      "key": "generator",
                      "value": "OpenAIGenerator"
                    },
                    {
                      "key": "harness_contents",
                      "value": "str"
                    },
                    {
                      "key": "reasoning_model",
                      "value": "str"
                    },
                    {
                      "key": "source_context",
                      "value": "str"
                    },
                    {
                      "key": "trigger_instruction",
                      "value": "str"
                    },
                    {
                      "key": "vulnerability_json_str",
                      "value": "str"
                    }
                  ],
                  "type": "task"
                },
                {
                  "id": "1fab468b-3ff4-4226-91f7-2cf99e678d5d",
                  "name": "submit-873",
                  "parameter": [
                    {
                      "key": "meta",
                      "value": "dict"
                    },
                    {
                      "key": "payload",
                      "value": "TypesPatchSubmission"
                    },
                    {
                      "key": "self",
                      "value": "PatchSubmitter"
                    }
                  ],
                  "type": "task"
                },
                {
                  "id": "76bfd5eb-0bfb-4a62-a889-a20a3a94a424",
                  "name": "build_fuzzers-09b",
                  "parameter": [
                    {
                      "key": "architecture",
                      "value": "str"
                    },
                    {
                      "key": "clean",
                      "value": "bool"
                    },
                    {
                      "key": "engine",
                      "value": "str"
                    },
                    {
                      "key": "env_vars",
                      "value": "NoneType"
                    },
                    {
                      "key": "external",
                      "value": "bool"
                    },
                    {
                      "key": "mount_path",
                      "value": "str"
                    },
                    {
                      "key": "no_clean",
                      "value": "bool"
                    },
                    {
                      "key": "project_name",
                      "value": "str"
                    },
                    {
                      "key": "sanitizer",
                      "value": "str"
                    },
                    {
                      "key": "self",
                      "value": "OSSFuzzHelper"
                    },
                    {
                      "key": "source_path",
                      "value": "str"
                    }
                  ],
                  "type": "task"
                },
                {
                  "id": "82bb5270-0570-4554-bcf3-a3315c1681f4",
                  "name": "colossal-manul",
                  "parameter": [
                    {
                      "key": "db_config",
                      "value": "dict"
                    },
                    {
                      "key": "parser",
                      "value": "dict"
                    },
                    {
                      "key": "sarif_id",
                      "value": "str"
                    }
                  ],
                  "type": "flow"
                },
                {
                  "id": "c1581507-cc3e-4d8c-bd6e-42b9dfebfc7c",
                  "name": "report_to_findings-c5c",
                  "parameter": [
                    {
                      "key": "report",
                      "value": "DiffDozerReport"
                    },
                    {
                      "key": "self",
                      "value": "DeltaScanTask"
                    },
                    {
                      "key": "task",
                      "value": "DeltaScan"
                    }
                  ],
                  "type": "task"
                }
              ],
              "properties": {
                "id": {
                  "custom_type": "uuid",
                  "examples": [
                    "019742e2-37f4-7917-9226-3fc2c29b4f69",
                    "0fd0dbba-a416-4b1d-84e8-de014166feee",
                    "593e6257-5e50-4595-8019-051b53463469",
                    "6a88023d-d6cd-44da-9321-6664d506b084",
                    "d1bf4122-7a66-41b2-af3c-ebcbcc26a711"
                  ],
                  "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                  "type": "string"
                },
                "name": {
                  "custom_type": "string",
                  "examples": [
                    "copy_repository_and_fuzz_tooling-00c",
                    "fabulous-ape",
                    "fuzz_harness-fe9",
                    "generate_one_trigger-223",
                    "submit-a65"
                  ],
                  "type": "string"
                },
                "parameter": {
                  "custom_type": "list",
                  "examples": [
                    [
                      {
                        "key": "architecture",
                        "value": "NoneType"
                      },
                      {
                        "key": "env_vars",
                        "value": "NoneType"
                      },
                      {
                        "key": "external",
                        "value": "bool"
                      },
                      {
                        "key": "fuzzer_args",
                        "value": "NoneType"
                      },
                      {
                        "key": "fuzzer_name",
                        "value": "str"
                      },
                      {
                        "key": "project_name",
                        "value": "str"
                      },
                      {
                        "key": "self",
                        "value": "OSSFuzzHelper"
                      },
                      {
                        "key": "testcase_path",
                        "value": "str"
                      },
                      {
                        "key": "valgrind",
                        "value": "bool"
                      }
                    ],
                    [
                      {
                        "key": "config",
                        "value": "dict"
                      },
                      {
                        "key": "prefix",
                        "value": "str"
                      }
                    ],
                    [
                      {
                        "key": "db_config",
                        "value": "PostgresqlConfiguration"
                      },
                      {
                        "key": "fuzz_timeout_seconds",
                        "value": "int"
                      },
                      {
                        "key": "fuzz_tooling_dir",
                        "value": "PosixPath"
                      },
                      {
                        "key": "harness_name",
                        "value": "str"
                      },
                      {
                        "key": "ossfuzz_helper",
                        "value": "OSSFuzzHelper"
                      },
                      {
                        "key": "parser",
                        "value": "dict"
                      },
                      {
                        "key": "patch",
                        "value": "str"
                      },
                      {
                        "key": "project_name",
                        "value": "str"
                      },
                      {
                        "key": "raw_trigger",
                        "value": "bytes"
                      },
                      {
                        "key": "sanitizer",
                        "value": "str"
                      },
                      {
                        "key": "trigger_obj",
                        "value": "Trigger"
                      }
                    ],
                    [
                      {
                        "key": "report",
                        "value": "DiffDozerReport"
                      },
                      {
                        "key": "report_verified",
                        "value": "bool"
                      },
                      {
                        "key": "self",
                        "value": "FullScanTask"
                      },
                      {
                        "key": "task_id",
                        "value": "UUID"
                      }
                    ],
                    [
                      {
                        "key": "project_name",
                        "value": "str"
                      },
                      {
                        "key": "self",
                        "value": "ScanArtifact"
                      }
                    ]
                  ],
                  "items": {
                    "custom_type": "object",
                    "examples": [
                      {
                        "key": "cls",
                        "value": "ModelMetaclass"
                      },
                      {
                        "key": "finding_id",
                        "value": "UUID"
                      },
                      {
                        "key": "repo_path",
                        "value": "PosixPath"
                      },
                      {
                        "key": "self",
                        "value": "OSSFuzzHelper"
                      },
                      {
                        "key": "task_id",
                        "value": "UUID"
                      }
                    ],
                    "properties": {
                      "key": {
                        "custom_type": "string",
                        "examples": [
                          "cls",
                          "diffdozer_report",
                          "pov_id",
                          "self",
                          "tag"
                        ],
                        "type": "string"
                      },
                      "value": {
                        "custom_type": "string",
                        "examples": [
                          "DiffDozerReport",
                          "FullScan",
                          "ScanArtifact",
                          "UUID",
                          "bool"
                        ],
                        "type": "string"
                      }
                    },
                    "required": [
                      "key",
                      "value"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                },
                "type": {
                  "custom_type": "string",
                  "examples": [
                    "flow",
                    "task"
                  ],
                  "type": "string"
                }
              },
              "required": [
                "id",
                "name",
                "parameter",
                "type"
              ],
              "type": "object"
            },
            "tags": {
              "custom_type": "string",
              "examples": [
                "[\"check_build\"]",
                "[\"fuzz_sanitizer_harnesses\"]",
                "[\"llm\", \"generate_one_trigger\"]",
                "[\"static_check_for_vulns\"]",
                "[]"
              ],
              "type": "string"
            }
          },
          "required": [
            "run",
            "tags"
          ],
          "type": "object"
        },
        "prefix": {
          "custom_type": "string",
          "examples": [
            "b/"
          ],
          "type": "string"
        },
        "presignedURLExpiration_ms": {
          "custom_type": "int64",
          "examples": [
            1746747426464
          ],
          "excludeMaximum": 1751554995332,
          "minimum": 1746507507371,
          "type": "number"
        },
        "process": {
          "custom_type": "object",
          "examples": [
            {
              "id": "15bf34d79ee8bc8429787e8457876a2b0a6537dc71c1705c5e0a74a2b8afbcfe"
            },
            {
              "id": "2a073f09504a5c62902f700fe979d0dc52030b96e5fc33bf369cd9b676962e32",
              "pid": 14734,
              "task": {
                "id": "af1782632712b172746d8d98366e6ddde485caff09a9ac895979cd3bf15efda6"
              }
            },
            {
              "id": "b2a17b50538c5d16325668258e44588742bbfae5002465769ef4603c58814f29",
              "pid": 3279531,
              "task": {
                "id": "00d113e69410ebd780065c73c5291185b68349a2a4d3448fb18b40d2e202348a"
              }
            },
            {
              "id": "c2c9cbfe6f91ffe4deebcd6e46bf8d2a9291115601363c07845318382196c926"
            },
            {
              "id": "e8f83655a8082791fdaf7338411cce989fef1842f0aff43aa4a6a97302af80ea"
            }
          ],
          "properties": {
            "id": {
              "custom_type": "string",
              "examples": [
                "01d411cbcec52087b4f07960d027e2e92a75966ea8d37c7d99033fd66196a423",
                "25e2995b4217f465fc21ca14fa8ff38a7b41c2b5ddcbffc597358175d3bb8095",
                "81d8c724875dfc87c211a886100024704cee4ee4c1332a4c114b838678378d0d",
                "d052e4ce7b964423672abd66e352595666ecdbb699f95ac9080c099448d5a4f3",
                "fb1dbbaa7aadf133089ea6b976b9575b583c8036a6bfdf368495fdd97d733231"
              ],
              "type": "string"
            },
            "pid": {
              "custom_type": "int32",
              "examples": [
                732,
                138731,
                142164,
                753784,
                4043336
              ],
              "excludeMaximum": 4194296,
              "minimum": 388,
              "type": "number"
            },
            "task": {
              "custom_type": "object",
              "examples": [
                {
                  "id": "28205a827b8b88e75e17860990ff6faca1e4f8ceeb12bd06fc232f4c4a8d4564"
                },
                {
                  "id": "3c36bb8cde84cc836a792a8819130e539027d20b30b4728156eb8ac5c7717130"
                },
                {
                  "id": "a8fa9262018699481b9080690371dc2809395d0ef5897a99fce8698affbaf068"
                },
                {
                  "id": "b4f87da823477e1bfcbe79cae9e5ecc44e2ead82be37c6ba58a6cd4093b4191c"
                },
                {
                  "id": "e3376f57e0dcd3cdcf5b5e4aa305ee47fed65f597dc5b13bb1213da749156075"
                }
              ],
              "properties": {
                "id": {
                  "custom_type": "string",
                  "examples": [
                    "0af27c526f2c860d8c575a681c7f9601fb4dee0d02f818cfc51699e150b6c9ef",
                    "343be86d61a123225ed27135530782ad8e447c18e87265d94c44dbc46db5539a",
                    "8369c68e1452a772d0d189d1928b41dff0488339f9147ce6e115b21ef95a5689",
                    "b2bf88fb5b5e687d6332b373086cddeefebbbbadbe47da722fac5e828c858b46",
                    "da5d09df02959521f1799a8a560358886548992719f9c2912d08458a715daa3f"
                  ],
                  "type": "string"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            }
          },
          "required": [
            "id"
          ],
          "type": "object"
        },
        "program": {
          "custom_type": "string",
          "examples": [
            "./build_cr.sh",
            "./run_pov.sh",
            "./run_tests.sh",
            "git",
            "tar"
          ],
          "type": "string"
        },
        "project": {
          "custom_type": "object",
          "examples": [
            {
              "compose_files": [
                "/home/dw/workspace/friday/docker-compose.yaml"
              ],
              "configs": [],
              "dir": "/home/dw/workspace/friday",
              "extensions": "[]",
              "hash": "681abf5e79e9c3f5713967e84e289bda218c1be456ac15c4094bf332b31377a3",
              "includes": {
                "local": 0,
                "remote": 0
              },
              "name": "friday",
              "networks": [
                "default",
                "external-internet",
                "signoz-net"
              ],
              "profiles": [
                ""
              ],
              "secrets": "[]",
              "services": {
                "active": [
                  "prefect_deploy"
                ],
                "build": [],
                "capabilities": {
                  "all": "[]",
                  "gpu": "[]",
                  "tpu": "[]"
                },
                "depends_on": [],
                "disabled": [
                  "challenge_gen",
                  "db",
                  "dind",
                  "litellm",
                  "minio",
                  "pgbouncer",
                  "prefect_server",
                  "task_server"
                ],
                "extends": 0
              },
              "volumes": "[]"
            },
            {
              "compose_files": [
                "/home/dw/workspace/friday/docker-compose.yaml"
              ],
              "configs": [],
              "dir": "/home/dw/workspace/friday",
              "extensions": "[]",
              "hash": "98efaae7b6f527f38287419a241c0ecab5c19d9563925f67a8a510420c25886b",
              "includes": {
                "local": 0,
                "remote": 0
              },
              "name": "friday",
              "networks": [
                "default",
                "external-internet",
                "signoz-net"
              ],
              "profiles": [
                ""
              ],
              "secrets": "[]",
              "services": {
                "active": [
                  "db",
                  "dind",
                  "litellm",
                  "minio",
                  "pgbouncer",
                  "prefect_server",
                  "task_server"
                ],
                "build": [
                  "task_server"
                ],
                "capabilities": {
                  "all": "[]",
                  "gpu": "[]",
                  "tpu": "[]"
                },
                "depends_on": [
                  "pgbouncer",
                  "task_server",
                  "litellm",
                  "prefect_server"
                ],
                "disabled": [
                  "challenge_gen",
                  "prefect_deploy"
                ],
                "extends": 0
              },
              "volumes": "[]"
            },
            {
              "compose_files": [
                "/home/dw/workspace/friday/docker-compose.yaml"
              ],
              "configs": [],
              "dir": "/home/dw/workspace/friday",
              "extensions": "[]",
              "hash": "9bf9a92282114eeb17a8386a2a24803d38869830c92553d8d17ffe648343e0d2",
              "includes": {
                "local": 0,
                "remote": 0
              },
              "name": "friday",
              "networks": [
                "default",
                "external-internet",
                "signoz-net"
              ],
              "profiles": [
                ""
              ],
              "secrets": "[]",
              "services": {
                "active": [
                  "prefect_deploy"
                ],
                "build": [],
                "capabilities": {
                  "all": "[]",
                  "gpu": "[]",
                  "tpu": "[]"
                },
                "depends_on": [],
                "disabled": [
                  "challenge_gen",
                  "db",
                  "dind",
                  "litellm",
                  "minio",
                  "pgbouncer",
                  "prefect_server",
                  "task_server"
                ],
                "extends": 0
              },
              "volumes": "[]"
            },
            {
              "compose_files": [
                "/home/dw/workspace/friday/docker-compose.yaml"
              ],
              "configs": [],
              "dir": "/home/dw/workspace/friday",
              "extensions": "[]",
              "hash": "681abf5e79e9c3f5713967e84e289bda218c1be456ac15c4094bf332b31377a3",
              "includes": {
                "local": 0,
                "remote": 0
              },
              "name": "friday",
              "networks": [
                "default",
                "external-internet",
                "signoz-net"
              ],
              "profiles": [
                ""
              ],
              "secrets": "[]",
              "services": {
                "active": [
                  "prefect_deploy"
                ],
                "build": [],
                "capabilities": {
                  "all": "[]",
                  "gpu": "[]",
                  "tpu": "[]"
                },
                "depends_on": [],
                "disabled": [
                  "challenge_gen",
                  "db",
                  "dind",
                  "litellm",
                  "minio",
                  "pgbouncer",
                  "prefect_server",
                  "task_server"
                ],
                "extends": 0
              },
              "volumes": "[]"
            },
            {
              "compose_files": [
                "/home/dw/workspace/friday/docker-compose.yaml"
              ],
              "configs": [],
              "dir": "/home/dw/workspace/friday",
              "extensions": "[]",
              "hash": "61240fcd2d18a5ef36018985d8493ebb73db2643af2dc2489f6e4c005a080d79",
              "includes": {
                "local": 0,
                "remote": 0
              },
              "name": "friday",
              "networks": [
                "default",
                "external-internet",
                "signoz-net"
              ],
              "profiles": [
                ""
              ],
              "secrets": "[]",
              "services": {
                "active": [
                  "prefect_deploy"
                ],
                "build": [],
                "capabilities": {
                  "all": "[]",
                  "gpu": "[]",
                  "tpu": "[]"
                },
                "depends_on": [],
                "disabled": [
                  "challenge_gen",
                  "db",
                  "dind",
                  "litellm",
                  "minio",
                  "pgbouncer",
                  "prefect_server",
                  "task_server"
                ],
                "extends": 0
              },
              "volumes": "[]"
            }
          ],
          "properties": {
            "compose_files": {
              "custom_type": "list",
              "examples": [
                [
                  "/home/dw/workspace/friday/docker-compose.yaml"
                ],
                [
                  "/home/dw/workspace/friday/docker-compose.yaml"
                ],
                [
                  "/home/dw/workspace/friday/docker-compose.yaml"
                ],
                [
                  "/home/dw/workspace/friday/docker-compose.yaml"
                ],
                [
                  "/home/dw/workspace/friday/docker-compose.yaml"
                ]
              ],
              "items": {
                "custom_type": "string",
                "examples": [
                  "/home/dw/workspace/friday/docker-compose.yaml",
                  "/home/dw/workspace/friday/docker-compose.yaml",
                  "/home/dw/workspace/friday/docker-compose.yaml",
                  "/home/dw/workspace/friday/docker-compose.yaml",
                  "/home/dw/workspace/friday/docker-compose.yaml"
                ],
                "type": "string"
              },
              "type": "array"
            },
            "configs": {
              "custom_type": "list",
              "examples": [
                [],
                [],
                [],
                [],
                []
              ],
              "items": {
                "custom_type": "string",
                "type": "string"
              },
              "type": "array"
            },
            "dir": {
              "custom_type": "string",
              "examples": [
                "/home/dw/workspace/friday",
                "/home/dw/workspace/friday",
                "/home/dw/workspace/friday",
                "/home/dw/workspace/friday",
                "/home/dw/workspace/friday"
              ],
              "type": "string"
            },
            "extensions": {
              "custom_type": "string",
              "examples": [
                "[]",
                "[]",
                "[]",
                "[]",
                "[]"
              ],
              "type": "string"
            },
            "hash": {
              "custom_type": "string",
              "examples": [
                "681abf5e79e9c3f5713967e84e289bda218c1be456ac15c4094bf332b31377a3",
                "9bf9a92282114eeb17a8386a2a24803d38869830c92553d8d17ffe648343e0d2",
                "9bf9a92282114eeb17a8386a2a24803d38869830c92553d8d17ffe648343e0d2",
                "681abf5e79e9c3f5713967e84e289bda218c1be456ac15c4094bf332b31377a3",
                "61240fcd2d18a5ef36018985d8493ebb73db2643af2dc2489f6e4c005a080d79"
              ],
              "type": "string"
            },
            "includes": {
              "custom_type": "object",
              "examples": [
                {
                  "local": 0,
                  "remote": 0
                },
                {
                  "local": 0,
                  "remote": 0
                },
                {
                  "local": 0,
                  "remote": 0
                },
                {
                  "local": 0,
                  "remote": 0
                },
                {
                  "local": 0,
                  "remote": 0
                }
              ],
              "properties": {
                "local": {
                  "custom_type": "int8",
                  "examples": [
                    0,
                    0,
                    0,
                    0,
                    0
                  ],
                  "excludeMaximum": 0,
                  "minimum": 0,
                  "type": "number"
                },
                "remote": {
                  "custom_type": "int8",
                  "examples": [
                    0,
                    0,
                    0,
                    0,
                    0
                  ],
                  "excludeMaximum": 0,
                  "minimum": 0,
                  "type": "number"
                }
              },
              "required": [
                "local",
                "remote"
              ],
              "type": "object"
            },
            "name": {
              "custom_type": "string",
              "examples": [
                "friday",
                "friday",
                "friday",
                "friday",
                "friday"
              ],
              "type": "string"
            },
            "networks": {
              "custom_type": "list",
              "examples": [
                [
                  "default",
                  "external-internet",
                  "signoz-net"
                ],
                [
                  "default",
                  "external-internet",
                  "signoz-net"
                ],
                [
                  "default",
                  "external-internet",
                  "signoz-net"
                ],
                [
                  "default",
                  "external-internet",
                  "signoz-net"
                ],
                [
                  "default",
                  "external-internet",
                  "signoz-net"
                ]
              ],
              "items": {
                "custom_type": "string",
                "examples": [
                  "default",
                  "signoz-net",
                  "default",
                  "external-internet",
                  "signoz-net"
                ],
                "type": "string"
              },
              "type": "array"
            },
            "profiles": {
              "custom_type": "list",
              "examples": [
                [
                  ""
                ],
                [
                  ""
                ],
                [
                  ""
                ],
                [
                  ""
                ],
                [
                  ""
                ]
              ],
              "items": {
                "custom_type": "string",
                "examples": [
                  "",
                  "",
                  "",
                  "",
                  ""
                ],
                "type": "string"
              },
              "type": "array"
            },
            "secrets": {
              "custom_type": "string",
              "examples": [
                "[]",
                "[]",
                "[]",
                "[]",
                "[]"
              ],
              "type": "string"
            },
            "services": {
              "custom_type": "object",
              "examples": [
                {
                  "active": [
                    "prefect_deploy"
                  ],
                  "build": [],
                  "capabilities": {
                    "all": "[]",
                    "gpu": "[]",
                    "tpu": "[]"
                  },
                  "depends_on": [],
                  "disabled": [
                    "challenge_gen",
                    "db",
                    "dind",
                    "litellm",
                    "minio",
                    "pgbouncer",
                    "prefect_server",
                    "task_server"
                  ],
                  "extends": 0
                },
                {
                  "active": [
                    "db",
                    "dind",
                    "litellm",
                    "minio",
                    "pgbouncer",
                    "prefect_server",
                    "task_server"
                  ],
                  "build": [
                    "task_server"
                  ],
                  "capabilities": {
                    "all": "[]",
                    "gpu": "[]",
                    "tpu": "[]"
                  },
                  "depends_on": [
                    "pgbouncer",
                    "task_server",
                    "litellm",
                    "prefect_server"
                  ],
                  "disabled": [
                    "challenge_gen",
                    "prefect_deploy"
                  ],
                  "extends": 0
                },
                {
                  "active": [
                    "prefect_deploy"
                  ],
                  "build": [],
                  "capabilities": {
                    "all": "[]",
                    "gpu": "[]",
                    "tpu": "[]"
                  },
                  "depends_on": [],
                  "disabled": [
                    "challenge_gen",
                    "db",
                    "dind",
                    "litellm",
                    "minio",
                    "pgbouncer",
                    "prefect_server",
                    "task_server"
                  ],
                  "extends": 0
                },
                {
                  "active": [
                    "prefect_deploy"
                  ],
                  "build": [],
                  "capabilities": {
                    "all": "[]",
                    "gpu": "[]",
                    "tpu": "[]"
                  },
                  "depends_on": [],
                  "disabled": [
                    "challenge_gen",
                    "db",
                    "dind",
                    "litellm",
                    "minio",
                    "pgbouncer",
                    "prefect_server",
                    "task_server"
                  ],
                  "extends": 0
                },
                {
                  "active": [
                    "prefect_deploy"
                  ],
                  "build": [],
                  "capabilities": {
                    "all": "[]",
                    "gpu": "[]",
                    "tpu": "[]"
                  },
                  "depends_on": [],
                  "disabled": [
                    "challenge_gen",
                    "db",
                    "dind",
                    "litellm",
                    "minio",
                    "pgbouncer",
                    "prefect_server",
                    "task_server"
                  ],
                  "extends": 0
                }
              ],
              "properties": {
                "active": {
                  "custom_type": "list",
                  "examples": [
                    [
                      "prefect_deploy"
                    ],
                    [
                      "db",
                      "dind",
                      "litellm",
                      "minio",
                      "pgbouncer",
                      "prefect_server",
                      "task_server"
                    ],
                    [
                      "prefect_deploy"
                    ],
                    [
                      "prefect_deploy"
                    ],
                    [
                      "prefect_deploy"
                    ]
                  ],
                  "items": {
                    "custom_type": "string",
                    "examples": [
                      "db",
                      "litellm",
                      "prefect_deploy",
                      "prefect_deploy",
                      "prefect_deploy"
                    ],
                    "type": "string"
                  },
                  "type": "array"
                },
                "build": {
                  "custom_type": "list",
                  "examples": [
                    [],
                    [
                      "task_server"
                    ],
                    [],
                    [],
                    []
                  ],
                  "items": {
                    "custom_type": "string",
                    "examples": [
                      "task_server"
                    ],
                    "type": "string"
                  },
                  "type": "array"
                },
                "capabilities": {
                  "custom_type": "object",
                  "examples": [
                    {
                      "all": "[]",
                      "gpu": "[]",
                      "tpu": "[]"
                    },
                    {
                      "all": "[]",
                      "gpu": "[]",
                      "tpu": "[]"
                    },
                    {
                      "all": "[]",
                      "gpu": "[]",
                      "tpu": "[]"
                    },
                    {
                      "all": "[]",
                      "gpu": "[]",
                      "tpu": "[]"
                    },
                    {
                      "all": "[]",
                      "gpu": "[]",
                      "tpu": "[]"
                    }
                  ],
                  "properties": {
                    "all": {
                      "custom_type": "string",
                      "examples": [
                        "[]",
                        "[]",
                        "[]",
                        "[]",
                        "[]"
                      ],
                      "type": "string"
                    },
                    "gpu": {
                      "custom_type": "string",
                      "examples": [
                        "[]",
                        "[]",
                        "[]",
                        "[]",
                        "[]"
                      ],
                      "type": "string"
                    },
                    "tpu": {
                      "custom_type": "string",
                      "examples": [
                        "[]",
                        "[]",
                        "[]",
                        "[]",
                        "[]"
                      ],
                      "type": "string"
                    }
                  },
                  "required": [
                    "all",
                    "gpu",
                    "tpu"
                  ],
                  "type": "object"
                },
                "depends_on": {
                  "custom_type": "list",
                  "examples": [
                    [],
                    [
                      "pgbouncer",
                      "task_server",
                      "litellm",
                      "prefect_server"
                    ],
                    [],
                    [],
                    []
                  ],
                  "items": {
                    "custom_type": "string",
                    "examples": [
                      "pgbouncer",
                      "task_server",
                      "litellm",
                      "prefect_server"
                    ],
                    "type": "string"
                  },
                  "type": "array"
                },
                "disabled": {
                  "custom_type": "list",
                  "examples": [
                    [
                      "challenge_gen",
                      "db",
                      "dind",
                      "litellm",
                      "minio",
                      "pgbouncer",
                      "prefect_server",
                      "task_server"
                    ],
                    [
                      "challenge_gen",
                      "prefect_deploy"
                    ],
                    [
                      "challenge_gen",
                      "db",
                      "dind",
                      "litellm",
                      "minio",
                      "pgbouncer",
                      "prefect_server",
                      "task_server"
                    ],
                    [
                      "challenge_gen",
                      "db",
                      "dind",
                      "litellm",
                      "minio",
                      "pgbouncer",
                      "prefect_server",
                      "task_server"
                    ],
                    [
                      "challenge_gen",
                      "db",
                      "dind",
                      "litellm",
                      "minio",
                      "pgbouncer",
                      "prefect_server",
                      "task_server"
                    ]
                  ],
                  "items": {
                    "custom_type": "string",
                    "examples": [
                      "challenge_gen",
                      "db",
                      "minio",
                      "prefect_server",
                      "db"
                    ],
                    "type": "string"
                  },
                  "type": "array"
                },
                "extends": {
                  "custom_type": "int8",
                  "examples": [
                    0,
                    0,
                    0,
                    0,
                    0
                  ],
                  "excludeMaximum": 0,
                  "minimum": 0,
                  "type": "number"
                }
              },
              "required": [
                "active",
                "build",
                "capabilities",
                "depends_on",
                "disabled"
              ],
              "type": "object"
            },
            "volumes": {
              "custom_type": "string",
              "examples": [
                "[]",
                "[]",
                "[]",
                "[]",
                "[]"
              ],
              "type": "string"
            }
          },
          "required": [
            "compose_files",
            "configs",
            "dir",
            "extensions",
            "hash",
            "name",
            "networks",
            "profiles",
            "secrets",
            "services",
            "volumes"
          ],
          "type": "object"
        },
        "project_name": {
          "custom_type": "string",
          "examples": [
            "zookeeper",
            "libxml2",
            "curl",
            "dav1d",
            "mongoose"
          ],
          "type": "string"
        },
        "query": {
          "custom_type": "string",
          "type": "string"
        },
        "reaction": {
          "custom_type": "string",
          "type": "string"
        },
        "ref": {
          "custom_type": "string",
          "examples": [
            "ref",
            "ref",
            "ref",
            "delta-fp-delta-02-e98031e",
            "gpdev/challenges/ws-delta-02"
          ],
          "type": "string"
        },
        "removalRegex": {
          "custom_type": "string",
          "examples": [
            "data/challengetask867606620/base-checkout/",
            "data/challengetask2567579526/base-checkout/"
          ],
          "type": "string"
        },
        "repo": {
          "custom_type": "object",
          "examples": [
            {
              "path": "/data/challengetask1085617866/base-checkout"
            },
            {
              "dir": "/data/challengetask459300407/oss-fuzz-afc",
              "downloadPath": "/data/challengetask459300407",
              "url": "git@github.com:aixcc-afc/oss-fuzz-afc.git"
            },
            {
              "name": "round-gpdev-wireshark"
            },
            {
              "challengeYaml": {
                "Path": "/dind-shared/repo-348826489/round-final-phase2-systemd/.aixcc/challenge.yaml"
              },
              "path": "/dind-shared/repo-348826489/round-final-phase2-systemd"
            },
            {
              "challengeYaml": {
                "Path": "/dind-shared/repo-1875251257/round-dev-testing-shadowsocks-libev/.aixcc/challenge.yaml"
              },
              "path": "/dind-shared/repo-1875251257/round-dev-testing-shadowsocks-libev"
            }
          ],
          "properties": {
            "challengeYaml": {
              "custom_type": "object",
              "examples": [
                {
                  "Path": "/dind-shared/repo-1309243190/round-gpdev-wireshark/.aixcc/challenge.yaml"
                },
                {
                  "Path": "/dind-shared/repo-4040636626/round-final-phase2-shadowsocks-libev/.aixcc/challenge.yaml"
                },
                {
                  "Path": "/dind-shared/repo-2944371122/round-final-phase2-little-cms/.aixcc/challenge.yaml"
                },
                {
                  "Path": "/dind-shared/repo-2858517242/round-final-phase3-wireshark/.aixcc/challenge.yaml"
                },
                {
                  "Path": "/dind-shared/repo-365636053/round-dev-testing-shadowsocks-libev/.aixcc/challenge.yaml"
                }
              ],
              "properties": {
                "Path": {
                  "custom_type": "string",
                  "examples": [
                    "/dind-shared/repo-1309243190/round-gpdev-wireshark/.aixcc/challenge.yaml",
                    "/dind-shared/repo-4040636626/round-final-phase2-shadowsocks-libev/.aixcc/challenge.yaml",
                    "/dind-shared/repo-2944371122/round-final-phase2-little-cms/.aixcc/challenge.yaml",
                    "/dind-shared/repo-2858517242/round-final-phase3-wireshark/.aixcc/challenge.yaml",
                    "/dind-shared/repo-365636053/round-dev-testing-shadowsocks-libev/.aixcc/challenge.yaml"
                  ],
                  "type": "string"
                }
              },
              "required": [
                "Path"
              ],
              "type": "object"
            },
            "dir": {
              "custom_type": "string",
              "examples": [
                "/data/challengetask459300407/oss-fuzz-afc"
              ],
              "type": "string"
            },
            "downloadPath": {
              "custom_type": "string",
              "examples": [
                "/data/challengetask459300407"
              ],
              "type": "string"
            },
            "name": {
              "custom_type": "string",
              "examples": [
                "round-gpdev-wireshark"
              ],
              "type": "string"
            },
            "path": {
              "custom_type": "string",
              "examples": [
                "/data/challengetask1015399451/oss-fuzz-afc",
                "/dind-shared/repo-4040636626/round-final-phase2-shadowsocks-libev",
                "/dind-shared/repo-348826489/round-final-phase2-systemd",
                "/dind-shared/repo-365636053/round-dev-testing-shadowsocks-libev",
                "/dind-shared/repo-2858517242/round-final-phase3-wireshark"
              ],
              "type": "string"
            },
            "url": {
              "custom_type": "string",
              "examples": [
                "git@github.com:aixcc-afc/oss-fuzz-afc.git",
                "https://github.com/aixcc-afc/oss-fuzz-afc.git"
              ],
              "type": "string"
            }
          },
          "required": [],
          "type": "object"
        },
        "repoDir": {
          "custom_type": "string",
          "examples": [
            "/dind-shared/repo-3311319990",
            "/dind-shared/repo-4072964416",
            "/dind-shared/repo-4114986215",
            "/dind-shared/repo-3727333384",
            "/dind-shared/repo-3005612660"
          ],
          "type": "string"
        },
        "repoPath": {
          "custom_type": "string",
          "examples": [
            "repoPath",
            "repoPath",
            "/data/challengetask226831402/baseRepos/round-exhibition3-sqlite",
            "/data/challengetask1683349632/round-gpdev-logging-log4j2",
            "/data/challengetask3392769046/oss-fuzz-afc"
          ],
          "type": "string"
        },
        "request": {
          "custom_type": "object",
          "examples": [
            {
              "model": "claude-3-7-sonnet-latest"
            },
            {
              "timestamp_ms": 1746528441460
            },
            {
              "timestamp_ms": 1750982984904
            },
            {
              "timestamp_ms": 1751223897494
            },
            {
              "timestamp_ms": 1751446618447
            }
          ],
          "properties": {
            "model": {
              "custom_type": "string",
              "examples": [
                "chatgpt-4o-latest",
                "gemini-2.0-flash-thinking-exp-01-21",
                "gemini-2.5-flash",
                "gemini-2.5-pro-preview-03-25",
                "o3"
              ],
              "type": "string"
            },
            "timestamp_ms": {
              "custom_type": "int64",
              "examples": [
                1746527114047,
                1750984278348,
                1750984996608,
                1751223897795,
                1751446618770
              ],
              "excludeMaximum": 1751511497055,
              "minimum": 1746503860790,
              "type": "number"
            }
          },
          "required": [],
          "type": "object"
        },
        "response": {
          "custom_type": "object",
          "properties": {
            "BundleID": {
              "custom_type": "uuid",
              "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
              "type": "string"
            }
          },
          "required": [
            "BundleID"
          ],
          "type": "object"
        },
        "retryCount": {
          "custom_type": "int16",
          "examples": [
            456,
            27,
            0,
            23,
            465
          ],
          "excludeMaximum": 501,
          "minimum": 0,
          "type": "number"
        },
        "returnCode": {
          "custom_type": "int8",
          "examples": [
            1
          ],
          "excludeMaximum": 1,
          "minimum": 1,
          "type": "number"
        },
        "round": {
          "custom_type": "object",
          "examples": [
            {
              "id": "exhibition1b"
            },
            {
              "id": "local-dev"
            },
            {
              "id": "pre-exhibition2-friday-test"
            },
            {
              "id": "round-1"
            },
            {
              "id": "testing"
            }
          ],
          "properties": {
            "id": {
              "custom_type": "string",
              "examples": [
                "exhibition1b",
                "local-dev",
                "pre-exhibition2-friday-test",
                "round-1",
                "testing"
              ],
              "type": "string"
            }
          },
          "required": [
            "id"
          ],
          "type": "object"
        },
        "route": {
          "custom_type": "string",
          "examples": [
            "/v1/task/",
            "/v1/task/",
            "/v1/task/",
            "/v1/task/",
            "/v1/sarif/"
          ],
          "type": "string"
        },
        "rpc": {
          "custom_type": "object",
          "examples": [
            {
              "grpc": {
                "status_code": 0
              },
              "method": "DiffCopy",
              "service": "moby.filesync.v1.FileSync",
              "system": "grpc"
            },
            {
              "grpc": {
                "status_code": 0
              },
              "method": "Exec",
              "service": "containerd.services.tasks.v1.Tasks",
              "system": "grpc"
            },
            {
              "grpc": {
                "status_code": 0
              },
              "method": "Ping",
              "service": "moby.buildkit.v1.frontend.LLBBridge",
              "system": "grpc"
            },
            {
              "grpc": {
                "status_code": 5
              },
              "method": "Get",
              "service": "containerd.services.tasks.v1.Tasks",
              "system": "grpc"
            },
            {
              "grpc": {
                "status_code": 0
              },
              "method": "VerifyTokenAuthority",
              "service": "moby.filesync.v1.Auth",
              "system": "grpc"
            }
          ],
          "properties": {
            "grpc": {
              "custom_type": "object",
              "examples": [
                {
                  "status_code": 0
                },
                {
                  "status_code": 1
                },
                {
                  "status_code": 4
                },
                {
                  "status_code": 5
                },
                {
                  "status_code": 6
                }
              ],
              "properties": {
                "status_code": {
                  "custom_type": "int8",
                  "examples": [
                    0,
                    1,
                    4
                  ],
                  "excludeMaximum": 14,
                  "minimum": 0,
                  "type": "number"
                }
              },
              "required": [
                "status_code"
              ],
              "type": "object"
            },
            "method": {
              "custom_type": "string",
              "examples": [
                "AddResource",
                "Kill",
                "Ping",
                "Solve",
                "Status"
              ],
              "type": "string"
            },
            "service": {
              "custom_type": "string",
              "examples": [
                "containerd.services.content.v1.Content",
                "containerd.services.tasks.v1.Tasks",
                "containerd.services.version.v1.Version",
                "moby.buildkit.v1.frontend.LLBBridge",
                "moby.filesync.v1.Auth"
              ],
              "type": "string"
            },
            "system": {
              "custom_type": "string",
              "examples": [
                "grpc"
              ],
              "type": "string"
            }
          },
          "required": [
            "grpc",
            "method",
            "service",
            "system"
          ],
          "type": "object"
        },
        "sanitizer": {
          "custom_type": "string",
          "examples": [
            "undefined",
            "memory",
            "undefined",
            "memory",
            "address"
          ],
          "type": "string"
        },
        "sarifAssessment": {
          "custom_type": "object",
          "examples": [
            {
              "id": "0197477a-d11a-7cdd-979b-1fb05f7f1c0f"
            },
            {
              "id": "0197b050-ecb8-75a2-8723-879d33616b86"
            },
            {
              "id": "0197cb51-f475-786a-a525-fd5ec16d0255"
            },
            {
              "id": "0197b6de-339a-7dbe-b0e0-6a0fb1474bb4"
            },
            {
              "id": "0197b800-c102-72fe-892d-e218e8b738ae"
            }
          ],
          "properties": {
            "id": {
              "custom_type": "uuid",
              "examples": [
                "0197477a-d11a-7cdd-979b-1fb05f7f1c0f",
                "0197b050-ecb8-75a2-8723-879d33616b86",
                "0197cb51-f475-786a-a525-fd5ec16d0255",
                "0197b6de-339a-7dbe-b0e0-6a0fb1474bb4",
                "0197b800-c102-72fe-892d-e218e8b738ae"
              ],
              "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
              "type": "string"
            }
          },
          "required": [
            "id"
          ],
          "type": "object"
        },
        "sarifBroadcast": {
          "custom_type": "object",
          "properties": {
            "analysisList": {
              "custom_type": "object",
              "properties": {
                "page": {
                  "custom_type": "int8",
                  "excludeMaximum": 1,
                  "minimum": 1,
                  "type": "number"
                }
              },
              "required": [
                "page"
              ],
              "type": "object"
            },
            "analysisURL": {
              "custom_type": "string",
              "type": "string"
            },
            "commit": {
              "custom_type": "string",
              "type": "string"
            },
            "id": {
              "custom_type": "uuid",
              "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
              "type": "string"
            },
            "matchedTask": {
              "custom_type": "object",
              "properties": {
                "id": {
                  "custom_type": "uuid",
                  "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                  "type": "string"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            },
            "owner": {
              "custom_type": "string",
              "type": "string"
            },
            "repo": {
              "custom_type": "string",
              "type": "string"
            }
          },
          "required": [],
          "type": "object"
        },
        "sboxKey": {
          "custom_type": "string",
          "examples": [
            "/var/run/docker/netns/0cc87c7bffff",
            "/var/run/docker/netns/4635d6ade3ad",
            "/var/run/docker/netns/86c95860beb3",
            "/var/run/docker/netns/eb8e31516618",
            "/var/run/docker/netns/f9a2ccf444df"
          ],
          "type": "string"
        },
        "server": {
          "custom_type": "object",
          "examples": [
            {
              "address": "NOT_FOUND",
              "port": "NOT_FOUND"
            },
            {
              "address": "api.openai.com",
              "port": "443"
            },
            {
              "address": "postgresql://postgres:2NnwRfJKFkrUqsvKkq4erxvayeTYCJRb@competition-api-dev.postgres.database.azure.com:5432/competitionapidev"
            },
            {
              "address": "postgresql://postgres:WgZSwyBURLn3Cpu3nses7ZYQf9Wk97fn@competition-api-prod.postgres.database.azure.com:5432/competitionapi"
            },
            {
              "address": "prod-litellm",
              "port": "4000"
            }
          ],
          "properties": {
            "address": {
              "custom_type": "string",
              "examples": [
                "10.224.1.42",
                "NOT_FOUND",
                "postgresql://postgres:2NnwRfJKFkrUqsvKkq4erxvayeTYCJRb@competition-api-dev.postgres.database.azure.com:5432/competitionapidev",
                "postgresql://postgres:WgZSwyBURLn3Cpu3nses7ZYQf9Wk97fn@competition-api-prod.postgres.database.azure.com:5432/competitionapi",
                "prod-litellm"
              ],
              "type": "string"
            },
            "port": {
              "custom_type": "string",
              "examples": [
                "4000",
                "443",
                "8000",
                "NOT_FOUND"
              ],
              "type": "string"
            }
          },
          "required": [
            "address"
          ],
          "type": "object"
        },
        "service": {
          "custom_type": "object",
          "examples": [
            {
              "configs": "[]",
              "image": "docker:24-dind",
              "name": "dind",
              "networks": "[\"default\"]",
              "secrets": "[]",
              "volumes": "[\"/home/dw/workspace/friday/crs_scratch\"]"
            },
            {
              "instance": {
                "id": "046a2473-f2ac-4bc0-b3a7-7d202e2fbb8c"
              }
            },
            {
              "name": "FUZZBOMB27"
            },
            {
              "name": "veronica-task-server"
            },
            {
              "name": "xs0_full"
            }
          ],
          "properties": {
            "configs": {
              "custom_type": "string",
              "examples": [
                "[]",
                "[]",
                "[]"
              ],
              "type": "string"
            },
            "image": {
              "custom_type": "string",
              "examples": [
                "docker:24-dind",
                "gitlab.kududyn.com:5005/shadowmaze/aixcc/veronica:latest",
                "postgres:14-alpine"
              ],
              "type": "string"
            },
            "instance": {
              "custom_type": "object",
              "examples": [
                {
                  "id": "0c32ba33-c96e-4c77-b800-ac11914d112f"
                },
                {
                  "id": "46fd51be852befd48626"
                },
                {
                  "id": "BLAHBLAH0"
                },
                {
                  "id": "ec78cc73-6963-48fd-953b-c66a1004c6b4"
                },
                {
                  "id": "f65b681b-d2da-4e8a-a324-dbb3c8eeb76e"
                }
              ],
              "properties": {
                "id": {
                  "custom_type": "string",
                  "examples": [
                    "1cc0e09b-4aa8-4039-8a9f-0272f520522c",
                    "46fd51be852befd48626",
                    "BLAHBLAH0",
                    "a637d514-8983-4fff-b708-d4655545b05d",
                    "b2f90891-abb2-4c7c-adec-bc1cf33cbbce"
                  ],
                  "type": "string"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            },
            "name": {
              "custom_type": "string",
              "examples": [
                "BLAHBLAH0",
                "FUZZBOMB119",
                "FUZZBOMB51",
                "veronica.core.ai.openai_generator",
                "xs0_full"
              ],
              "type": "string"
            },
            "networks": {
              "custom_type": "string",
              "examples": [
                "[\"default\"]",
                "[\"default\",\"external-internet\",\"signoz-net\"]",
                "[\"default\"]"
              ],
              "type": "string"
            },
            "secrets": {
              "custom_type": "string",
              "examples": [
                "[]",
                "[]",
                "[]"
              ],
              "type": "string"
            },
            "volumes": {
              "custom_type": "string",
              "examples": [
                "[\"/home/dw/workspace/friday/crs_scratch\"]",
                "[\"/home/dw/workspace/friday/crs_scratch\",\"/home/dw/workspace/friday\",\"/var/run/docker.sock\"]",
                "[\"/home/dw/pgdata\",\"/home/dw/workspace/friday/init-db.sql\"]"
              ],
              "type": "string"
            }
          },
          "required": [],
          "type": "object"
        },
        "shouldCrash": {
          "custom_type": "bool",
          "examples": [
            false,
            true,
            true,
            true,
            false
          ],
          "type": "boolean"
        },
        "size": {
          "custom_type": "int32",
          "examples": [
            1550207,
            1,
            18014,
            150785792,
            1
          ],
          "excludeMaximum": 380062132,
          "minimum": 1,
          "type": "number"
        },
        "srcDir": {
          "custom_type": "string",
          "type": "string"
        },
        "srcName": {
          "custom_type": "string",
          "examples": [
            "veth046c07d",
            "veth15532ff",
            "veth818244e",
            "vethd706753",
            "vethfbabccc"
          ],
          "type": "string"
        },
        "status": {
          "custom_type": "string",
          "examples": [
            "accepted",
            "passed",
            "accepted",
            "accepted",
            "confirming"
          ],
          "type": "string"
        },
        "stderr": {
          "custom_type": "string",
          "examples": [
            "",
            "Switched to a new branch 'exhibition2/challenges/zk-delta-01'\n",
            "",
            "",
            "Switched to a new branch 'gpdev/challenges/da-full-01'\n"
          ],
          "type": "string"
        },
        "stdout": {
          "custom_type": "string",
          "examples": [
            "",
            "diff --git a/data/challengetask3273666995/base-checkout/vuln.c b/data/challengetask3273666995/diff-checkout/vuln.c\nindex fb3c49b..15206dc 100644\n--- a/data/challengetask3273666995/base-checkout/vuln.c\n+++ b/data/challengetask3273666995/diff-checkout/vuln.c\n@@ -25,5 +25,8 @@ bool person_info_parse_file(person_info_t * person_info, const char * const in)\n \n     for (; isspace(in[last_pos]); last_pos++);\n \n+    // The bug is THE LINE BELOW THIS LINE\n+    strcpy(person_info->name, &in[last_pos]);\n+\n     return true;\n }\n\\ No newline at end of file\n",
            "",
            "310ec74abae87a4d48fd989563460112122b3429\n",
            "branch 'gpdev/challenges/da-full-01' set up to track 'origin/gpdev/challenges/da-full-01'.\n"
          ],
          "type": "string"
        },
        "submission_id": {
          "custom_type": "uuid",
          "examples": [
            "0196a7cc-4cf5-7e77-9ede-29e8ca29fe41",
            "0196b66c-d0bd-718d-98db-672cc0e3025a"
          ],
          "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
          "type": "string"
        },
        "successExpected": {
          "custom_type": "bool",
          "examples": [
            true,
            true,
            true,
            true,
            true
          ],
          "type": "boolean"
        },
        "sum": {
          "custom_type": "string",
          "examples": [
            "8e1e5722ee5469afe3e8597a80575c8893665ec55a8c426f4b00eb530339aa82",
            "a3c30d944ecd4da98f532e24eb0fd3b7f593838df46db87b8d56d907610561b1",
            "2ee4ea56605e1a20c8e46a2586241c3511a9ec8fb02d3b0662a6f7fa555dadaf",
            "3bb8597da3cb30d032c8d8dffcf076ab5c68e189de7ce6cd7f4e8e40f632638c",
            "1ffb199969cba3794ef464ebe9160b7a46a73d263b5b029b13604a00804b92a8"
          ],
          "type": "string"
        },
        "tarball": {
          "custom_type": "object",
          "properties": {
            "path": {
              "custom_type": "string",
              "type": "string"
            }
          },
          "required": [
            "path"
          ],
          "type": "object"
        },
        "target": {
          "custom_type": "object",
          "examples": [
            {
              "baseURL": "https://synthetic-dawn-exhibition3.tail7e9b4c.ts.net",
              "username": "e8f90226-7d1d-4721-a0d6-3f3556218efe"
            },
            {
              "baseURL": "https://pixel-phantom-exhibition3.tail7e9b4c.ts.net",
              "username": "a93727a8-9850-48c5-8cf4-d8771165f245"
            },
            {
              "baseURL": "https://team-friday-final1.tail7e9b4c.ts.net",
              "username": "3c4e9d0b-49c0-4da7-9f2a-3a0b5af3a422"
            }
          ],
          "properties": {
            "baseURL": {
              "custom_type": "string",
              "examples": [
                "https://synthetic-dawn-exhibition3.tail7e9b4c.ts.net",
                "https://pixel-phantom-exhibition3.tail7e9b4c.ts.net",
                "https://team-friday-final1.tail7e9b4c.ts.net"
              ],
              "type": "string"
            },
            "username": {
              "custom_type": "string",
              "examples": [
                "e8f90226-7d1d-4721-a0d6-3f3556218efe",
                "a93727a8-9850-48c5-8cf4-d8771165f245",
                "3c4e9d0b-49c0-4da7-9f2a-3a0b5af3a422"
              ],
              "type": "string"
            }
          },
          "required": [
            "baseURL",
            "username"
          ],
          "type": "object"
        },
        "tarsDir": {
          "custom_type": "string",
          "type": "string"
        },
        "task": {
          "custom_type": "object",
          "examples": [
            {
              "container": {
                "id": "023cc223b38a8d10c1ad236c7d764f70be87fefc20e48893c2d4cfff4b3d4fd0"
              },
              "request": {
                "options": "[containerd.runc.v1.Options]:{binary_name:\"runc\" root:\"/var/run/docker/runtime-runc\"}"
              },
              "runtime": {
                "name": "io.containerd.runc.v2"
              }
            },
            {
              "exec": {
                "id": "",
                "killall": false
              },
              "pid": 204526
            },
            {
              "exec": {
                "id": "8d0e4b2786d1f4b95500d4323137cbeacd7b24a6ad13764275bcecca3db90c37"
              }
            },
            {
              "focus": "round-final-phase2-libexif",
              "project": "libexif",
              "type": "delta_scan"
            },
            {
              "pid": 1002508
            }
          ],
          "properties": {
            "container": {
              "custom_type": "object",
              "examples": [
                {
                  "id": "09377497d17d370ac5cc0327aab70355fde30c85fed4e44f3e5e536bfe1e1584"
                },
                {
                  "id": "52ca0eba4a2a2827e6943b83a6d57bfc6618ffd626205cf72844b2d7b72ba357"
                },
                {
                  "id": "9df758998c586c9b915f1c2be2aeebe5f177ea96ee414558fcc50f17f7514278"
                },
                {
                  "id": "c0e80c3364a221ad7ae0b8463aa562cc6359e4bea8ebd9aaabe9968a2678ab96"
                },
                {
                  "id": "e6b3c3eedc96cdd07df933216fc6f6c137302a0cf007597236f652b06400dd30"
                }
              ],
              "properties": {
                "id": {
                  "custom_type": "string",
                  "examples": [
                    "09377497d17d370ac5cc0327aab70355fde30c85fed4e44f3e5e536bfe1e1584",
                    "5cf440fb42e62df4b2884f4ff46f4bcd6de79d0b612da4c9af97ac6c5a3a516a",
                    "937bce9f16db7439d11bb1153346deebcd1bdc21c3296cce4a2e79cae0ce9cdd",
                    "db20b61f8b908df8f2a840916aae876991ae588242c1822c256dd869b3f9a58c",
                    "e45fa147aae8f3f4f013b03181f8c654944751725028385a3a88167fffdf67d4"
                  ],
                  "type": "string"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            },
            "exec": {
              "custom_type": "object",
              "examples": [
                {
                  "id": "11e18580f433822e87fa81fa9538eb87fb4f91f4ca2fee7e173ec9f3128870f9"
                },
                {
                  "id": "77bc478c0ce2f3d41b604c48024b8066b0d060e125ff63b0db7816e9ee9a245c"
                },
                {
                  "id": "888a624a7d6bc4753933dd5ac5835cd271c26e24fbffc14110cb9c9addb40d04"
                },
                {
                  "id": "cf848152b7b98caa877a0077a9be82b02895baeb47796b4d122e66763a823b23"
                },
                {
                  "id": "e1cc7554d43fa842a60a422bb33ee9617184425d5473cef0070e310de1bb19ee"
                }
              ],
              "properties": {
                "id": {
                  "custom_type": "string",
                  "examples": [
                    "",
                    "009c68334cfc2a90a4467ae38fc7eb71e5b5220388f044941f2ba5b4b9640b48",
                    "8e95cfa9f04e49cf2c6043fd3d499a8a282fb9b9bf5bf09eb89218562cb29b2d",
                    "92d24725565df741214453d0ff7e3e9e742dee3af3f387c6d0d5d3e9d21a3331",
                    "b74c9db621c28bdaa6a5116667f1f88f7862a43b0ab3729d4072090e4c3e6660"
                  ],
                  "type": "string"
                },
                "killall": {
                  "custom_type": "bool",
                  "examples": [
                    false,
                    false,
                    false,
                    false,
                    false
                  ],
                  "type": "boolean"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            },
            "focus": {
              "custom_type": "string",
              "examples": [
                "round-final-phase7-xz",
                "round-final-phase1-commons-compress",
                "round-final-phase7-wireshark",
                "round-final-phase2-mongoose",
                "round-final-phase2-libxml2"
              ],
              "type": "string"
            },
            "name": {
              "custom_type": "string",
              "examples": [
                "\u0000",
                "\u0000",
                "\u0000",
                "\u0000",
                "\u0000"
              ],
              "type": "string"
            },
            "pid": {
              "custom_type": "int32",
              "examples": [
                768,
                2278910,
                2303411,
                3110723,
                4189612
              ],
              "excludeMaximum": 4194303,
              "minimum": 301,
              "type": "number"
            },
            "project": {
              "custom_type": "string",
              "examples": [
                "curl",
                "mongoose",
                "wireshark",
                "apache-poi",
                "libxml2"
              ],
              "type": "string"
            },
            "request": {
              "custom_type": "object",
              "examples": [
                {
                  "options": "[containerd.runc.v1.Options]:{binary_name:\"runc\"  root:\"/var/run/docker/runtime-runc\"}"
                },
                {
                  "options": "[containerd.runc.v1.Options]:{binary_name:\"runc\" root:\"/var/run/docker/runtime-runc\"}"
                }
              ],
              "properties": {
                "options": {
                  "custom_type": "string",
                  "examples": [
                    "[containerd.runc.v1.Options]:{binary_name:\"runc\"  root:\"/var/run/docker/runtime-runc\"}",
                    "[containerd.runc.v1.Options]:{binary_name:\"runc\" root:\"/var/run/docker/runtime-runc\"}"
                  ],
                  "type": "string"
                }
              },
              "required": [
                "options"
              ],
              "type": "object"
            },
            "runtime": {
              "custom_type": "object",
              "examples": [
                {
                  "name": "io.containerd.runc.v2"
                }
              ],
              "properties": {
                "name": {
                  "custom_type": "string",
                  "examples": [
                    "io.containerd.runc.v2"
                  ],
                  "type": "string"
                }
              },
              "required": [
                "name"
              ],
              "type": "object"
            },
            "type": {
              "custom_type": "string",
              "examples": [
                "delta_scan",
                "full_scan",
                "delta_scan",
                "delta_scan",
                "full_scan"
              ],
              "type": "string"
            }
          },
          "required": [],
          "type": "object"
        },
        "taskDir": {
          "custom_type": "string",
          "type": "string"
        },
        "task_type": {
          "custom_type": "string",
          "examples": [
            "full",
            "delta",
            "full",
            "delta",
            "patch"
          ],
          "type": "string"
        },
        "teamCount": {
          "custom_type": "int8",
          "examples": [
            4
          ],
          "excludeMaximum": 11,
          "minimum": 1,
          "type": "number"
        },
        "team_id": {
          "custom_type": "uuid",
          "examples": [
            "00000000-0000-0000-0000-000000000002",
            "45cd193a-0c6c-4385-b527-fcf4ed31bf58",
            "cc43c9a5-b495-4ca4-9dbc-255533b0c8da",
            "ef26fabc-fef5-4367-874c-94ddaf4da4cd",
            "fa8a37e5-afc2-4404-8510-bdc3ce3a733b"
          ],
          "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
          "type": "string"
        },
        "teams": {
          "custom_type": "string",
          "examples": [
            "[\"d23622ce-be38-4ff9-a7bd-4d6f4243d75b\", \"3cf10d92-e95e-4d95-87be-53822a41090d\", \"d9677aae-62f9-4778-bb33-3a1017f98a96\", \"fa8a37e5-afc2-4404-8510-bdc3ce3a733b\"]"
          ],
          "type": "string"
        },
        "telemetry": {
          "custom_type": "object",
          "examples": [
            {
              "sdk": {
                "name": "openai-compatible-server"
              }
            },
            {
              "sdk": {
                "name": "openlit"
              }
            }
          ],
          "properties": {
            "sdk": {
              "custom_type": "object",
              "examples": [
                {
                  "name": "openai-compatible-server"
                },
                {
                  "name": "openlit"
                }
              ],
              "properties": {
                "name": {
                  "custom_type": "string",
                  "examples": [
                    "openai-compatible-server",
                    "openlit"
                  ],
                  "type": "string"
                }
              },
              "required": [
                "name"
              ],
              "type": "object"
            }
          },
          "required": [
            "sdk"
          ],
          "type": "object"
        },
        "testcase": {
          "custom_type": "object",
          "examples": [
            {
              "hash": "6ba19f06346877d960e09033ff3decf3724a2bcc1ad45aeba4c9a0c5deea8ae3"
            },
            {
              "hash": "7caae8b86212ad11d6c11bcbddaa5cbec462b5283eef3d07339127f2207f1f81"
            },
            {
              "hash": "a633531c6a2cce74f49bbae7947b373498dc9bb927075b8a8e6c69d494acd417"
            },
            {
              "hash": "dce83b95c3f861ed1d0369601128698feb6a0212c03013a181002d586e21fe03"
            },
            {
              "sum": "03faee80c70c76a2b98ea84259b2687f828fbeb85f9b5c561ce55051c3828b35"
            }
          ],
          "properties": {
            "hash": {
              "custom_type": "string",
              "examples": [
                "04706271217d698f2688209664c15f492273dd11cb9d17061ae64b641ba392b0",
                "31ce6d28def4dbb44401c30ce0c9b56f4e8e380b5aabd1e7c6cb7dd422222157",
                "a633531c6a2cce74f49bbae7947b373498dc9bb927075b8a8e6c69d494acd417",
                "dce83b95c3f861ed1d0369601128698feb6a0212c03013a181002d586e21fe03",
                "e4117f1555475204504b5ecb63d50ea372bb20cff78f4fc7cc37f96ade56b4dd"
              ],
              "type": "string"
            },
            "sum": {
              "custom_type": "string",
              "examples": [
                "d89916e722ab1d0c0a9c0459e176ef1f75ccf6e334a96207bf6cfd8d533dc64c",
                "74c3cf3c3be956a58da8453a542786b0439686ea0944e4cf04216765bc6f8aaf",
                "c3e2e36dfe7ba1dfceda9035242331e71c197bf1e595f1233472ee6ff9ab7078",
                "e4117f1555475204504b5ecb63d50ea372bb20cff78f4fc7cc37f96ade56b4dd",
                "74c3cf3c3be956a58da8453a542786b0439686ea0944e4cf04216765bc6f8aaf"
              ],
              "type": "string"
            }
          },
          "required": [],
          "type": "object"
        },
        "testcase_size": {
          "custom_type": "int32",
          "examples": [
            240,
            0,
            80,
            22369624,
            62352
          ],
          "excludeMaximum": 22369624,
          "minimum": 0,
          "type": "number"
        },
        "thing": {
          "custom_type": "object",
          "examples": [
            {
              "id": "01974277-edeb-7585-8173-51066664c277"
            },
            {
              "id": "0197af11-1036-7404-95d2-f0f2b0ef2a2e"
            },
            {
              "id": "0197b487-555f-7be7-8c8a-cde288bb44eb"
            },
            {
              "id": "0197bd14-0404-70dd-9d0d-2df551c4c156"
            },
            {
              "id": "0197c1fe-57a7-7533-9426-0b3683ff58f8"
            }
          ],
          "properties": {
            "id": {
              "custom_type": "uuid",
              "examples": [
                "0196a540-633f-733b-b3ed-67e8de4feee0",
                "0197aed2-d927-72ee-9c59-77bea9bb53c3",
                "0197b41b-7430-77aa-a844-054b5552985d",
                "0197b76a-9fca-7e25-83df-1b13f9a12ba1",
                "0197ca5a-755d-764e-9927-5c6c0626625e"
              ],
              "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
              "type": "string"
            }
          },
          "required": [
            "id"
          ],
          "type": "object"
        },
        "timeoutSecs": {
          "custom_type": "int16",
          "examples": [
            600
          ],
          "excludeMaximum": 600,
          "minimum": 600,
          "type": "number"
        },
        "trigger": {
          "custom_type": "object",
          "examples": [
            {
              "path": ""
            },
            {
              "path": "/dind-shared/file-130586983"
            },
            {
              "url": ""
            },
            {
              "url": "https://maintainerinterfaces.blob.core.windows.net/submissions/1b0096f258bd9317c9e620970cdbfc7df4331ea9cc127ab9f1a06c62934ba2d5?se=2025-06-10T18%3A26%3A41Z&sig=sCCGVn6OoUhZhSitWmEmvYnrqX%2FqLsovkTjmbfyvQwo%3D&sp=r&sr=b&sv=2025-01-05"
            },
            {
              "url": "https://maintainerinterfacesstg.blob.core.windows.net/submissions/db17392e8bcae58fbc4874045b78438926e167fd08a1d0cbee16b39b670f973f?se=2025-06-30T20%3A37%3A34Z&sig=06vrzh9%2FrvTm%2BuTZAG%2F%2FwFn8OdDblDJY22e0kVLnKLk%3D&sp=r&sr=b&sv=2025-01-05"
            }
          ],
          "properties": {
            "path": {
              "custom_type": "string",
              "examples": [
                "/dind-shared/file-3576253974",
                "",
                "",
                "/dind-shared/file-3655716792",
                "/dind-shared/file-4204200974"
              ],
              "type": "string"
            },
            "trigger": {
              "custom_type": "string",
              "examples": [
                "api",
                "daemon.initNetworkController"
              ],
              "type": "string"
            },
            "url": {
              "custom_type": "string",
              "examples": [
                "",
                "https://maintainerinterfaces.blob.core.windows.net/submissions/a7af2f70d179fad5966efebe4bb777afcd53b1a6a305a5c9e699f412f5cca1ed?se=2025-06-10T19%3A30%3A18Z&sig=xXgkYaJ4POZcnpP44KeIJ%2ByOWRmIPFFyPhEAtL%2BGlv8%3D&sp=r&sr=b&sv=2025-01-05",
                "",
                "https://maintainerinterfaces.blob.core.windows.net/submissions/0de5dee24bba5b868592d9d0bd16fdecd04662c72966ce2447c723b181c5e78e?se=2025-07-01T04%3A16%3A43Z&sig=EViDluhI0B%2FwjuqbXwxoUK47Wlh6cvqtU4m36ZrWyNk%3D&sp=r&sr=b&sv=2025-01-05",
                "https://maintainerinterfacesstg.blob.core.windows.net/submissions/db17392e8bcae58fbc4874045b78438926e167fd08a1d0cbee16b39b670f973f?se=2025-06-30T20%3A37%3A34Z&sig=06vrzh9%2FrvTm%2BuTZAG%2F%2FwFn8OdDblDJY22e0kVLnKLk%3D&sp=r&sr=b&sv=2025-01-05"
              ],
              "type": "string"
            }
          },
          "required": [],
          "type": "object"
        },
        "triggerPath": {
          "custom_type": "string",
          "examples": [
            "/dind-shared/file-2149012048",
            "/dind-shared/file-3885055677",
            "/dind-shared/file-3119133392",
            "/dind-shared/file-4006182831",
            "/dind-shared/file-2297280246"
          ],
          "type": "string"
        },
        "type": {
          "custom_type": "string",
          "examples": [
            "models.Bundle",
            "models.Job",
            "models.POVSubmission",
            "models.PatchSubmission",
            "models.Task"
          ],
          "type": "string"
        },
        "url": {
          "custom_type": "string",
          "examples": [
            "7e5d74d71f808e282a153684f24590f87671684d97a00b5988999a4702244789",
            "https://maintainerinterfaces.blob.core.windows.net/sources/085b7cbb49de09f8d5ba5dc34be22cbabfc5cd3c44db88efce65d3f4ca5393cf?se=2025-06-10T09%3A53%3A41Z&sig=oLaYzKleOtMfXhGFzcpVSrCkNTyHEOIjaN%2FY0v2uWM8%3D&sp=r&sr=b&sv=2025-01-05",
            "https://maintainerinterfaces.blob.core.windows.net/submissions/3ab73a6b9288385c6fcda00d59e128e81d6f869681f4e8ee80a7e4822a2f99ec?se=2025-06-10T06%3A01%3A16Z&sig=ZR8J%2BCJuRlllxkMM3PStriRJ%2B34exBhwYbUtvK0kxqU%3D&sp=r&sr=b&sv=2025-01-05",
            "https://maintainerinterfaces.blob.core.windows.net/submissions/485271c75d3cf47316e543414565e697d076f2f863cf340ebc7ab05033401007?se=2025-06-10T00%3A40%3A18Z&sig=Euku7%2BQM%2Fz1HE%2BVMW0yzhJpUTz8eUZLPvI2Be54PT1M%3D&sp=r&sr=b&sv=2025-01-05",
            "https://maintainerinterfacesstg.blob.core.windows.net/sources/58d5b5069a36215f319c53e9b9b12cf1784fedad2b1b918e1346ed4bb2b524be?se=2025-07-04T23%3A54%3A53Z&sig=77E381DyGu%2FtDrMtma9DeXbkjXHAtVVlmgaeUbw%2Fotc%3D&sp=r&sr=b&sv=2025-01-05"
          ],
          "type": "string"
        },
        "user_agent": {
          "custom_type": "object",
          "examples": [
            {
              "original": "Docker-Client/unknown-version (linux)"
            },
            {
              "original": "Python/3.13 aiohttp/3.11.18"
            },
            {
              "original": "containerd/1.7.24+unknown"
            },
            {
              "original": "kube-probe/1.31"
            },
            {
              "original": "python-requests/2.32.3"
            }
          ],
          "properties": {
            "original": {
              "custom_type": "string",
              "examples": [
                "Docker-Client/unknown-version (linux)",
                "Python/3.13 aiohttp/3.11.18",
                "containerd/1.7.24+unknown",
                "kube-probe/1.31",
                "python-requests/2.32.3"
              ],
              "type": "string"
            }
          },
          "required": [
            "original"
          ],
          "type": "object"
        },
        "vertex": {
          "custom_type": "string",
          "examples": [
            "sha256:2707d39a10bc5412c60304b3f9b95751ff98bb57bf1f785e6fcf8f8a888287c2",
            "sha256:6aa8eba1a44e08630c51cf2fef46907119ef400d4262a640506b5d9465096b2f",
            "sha256:9d02ea81390458f6f61a17b81c858cd33bd6aa4a0d4b85cadca0b2c37c23b6c8",
            "sha256:a2dcb631fd28da7294fd74c4259b7fb46202fa2c9d544ff6f381a3c144443b17",
            "sha256:f85835b587c11a751d97a3ee9cfe741f4a66431e82e9183e6e9751815f9859bb"
          ],
          "type": "string"
        },
        "webhook": {
          "custom_type": "object",
          "examples": [
            {
              "action": "released",
              "release": {
                "tag": "release/aixcc-afc/challenges/lx-full-01/3ea93a1"
              },
              "repo": {
                "url": "https://github.com/aixcc-afc/round-exhibition2-libxml2"
              }
            },
            {
              "action": "opened",
              "installation": {
                "id": 60480361
              },
              "pullRequest": {
                "baseRef": "base-ws-delta-03-33872f9",
                "diffRef": "delta-ws-delta-03-057324a",
                "title": "AFC Runner"
              },
              "repo": {
                "url": "https://github.com/aixcc-afc/round-gpdev-wireshark"
              }
            },
            {
              "action": "opened",
              "installation": {
                "id": 60480361
              },
              "pullRequest": {
                "baseRef": "base-ws-delta-05-33872f9",
                "diffRef": "delta-ws-delta-05-498c59c",
                "title": "AFC Runner"
              },
              "repo": {
                "url": "https://github.com/aixcc-afc/round-gpdev-wireshark"
              }
            },
            {
              "action": "closed",
              "pullRequest": {
                "title": "AFC Runner"
              },
              "repo": {
                "url": "https://github.com/aixcc-afc/round-gpdev-logging-log4j2"
              }
            }
          ],
          "properties": {
            "action": {
              "custom_type": "string",
              "examples": [
                "released",
                "opened",
                "opened",
                "closed"
              ],
              "type": "string"
            },
            "installation": {
              "custom_type": "object",
              "examples": [
                {
                  "id": 60480361
                },
                {
                  "id": 60480361
                }
              ],
              "properties": {
                "id": {
                  "custom_type": "int32",
                  "examples": [
                    60480361,
                    60480361
                  ],
                  "excludeMaximum": 60480361,
                  "minimum": 59975036,
                  "type": "number"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            },
            "installationID": {
              "custom_type": "int32",
              "excludeMaximum": 60480361,
              "minimum": 59975036,
              "type": "number"
            },
            "pullRequest": {
              "custom_type": "object",
              "examples": [
                {
                  "baseRef": "base-ws-delta-03-33872f9",
                  "diffRef": "delta-ws-delta-03-057324a",
                  "title": "AFC Runner"
                },
                {
                  "baseRef": "base-ws-delta-05-33872f9",
                  "diffRef": "delta-ws-delta-05-498c59c",
                  "title": "AFC Runner"
                },
                {
                  "title": "AFC Runner"
                }
              ],
              "properties": {
                "baseRef": {
                  "custom_type": "string",
                  "examples": [
                    "base-ws-delta-03-33872f9",
                    "base-ws-delta-05-33872f9"
                  ],
                  "type": "string"
                },
                "diffRef": {
                  "custom_type": "string",
                  "examples": [
                    "delta-ws-delta-03-057324a",
                    "delta-ws-delta-05-498c59c"
                  ],
                  "type": "string"
                },
                "title": {
                  "custom_type": "string",
                  "examples": [
                    "AFC Runner",
                    "AFC Runner",
                    "AFC Runner"
                  ],
                  "type": "string"
                }
              },
              "required": [
                "title"
              ],
              "type": "object"
            },
            "release": {
              "custom_type": "object",
              "examples": [
                {
                  "tag": "release/aixcc-afc/challenges/lx-full-01/3ea93a1"
                }
              ],
              "properties": {
                "tag": {
                  "custom_type": "string",
                  "examples": [
                    "release/aixcc-afc/challenges/lx-full-01/3ea93a1"
                  ],
                  "type": "string"
                }
              },
              "required": [
                "tag"
              ],
              "type": "object"
            },
            "repo": {
              "custom_type": "object",
              "examples": [
                {
                  "url": "https://github.com/aixcc-afc/round-exhibition2-libxml2"
                },
                {
                  "url": "https://github.com/aixcc-afc/round-gpdev-wireshark"
                },
                {
                  "url": "https://github.com/aixcc-afc/round-gpdev-wireshark"
                },
                {
                  "url": "https://github.com/aixcc-afc/round-gpdev-logging-log4j2"
                }
              ],
              "properties": {
                "url": {
                  "custom_type": "string",
                  "examples": [
                    "https://github.com/aixcc-afc/round-exhibition2-libxml2",
                    "https://github.com/aixcc-afc/round-gpdev-wireshark",
                    "https://github.com/aixcc-afc/round-gpdev-wireshark",
                    "https://github.com/aixcc-afc/round-gpdev-logging-log4j2"
                  ],
                  "type": "string"
                }
              },
              "required": [
                "url"
              ],
              "type": "object"
            }
          },
          "required": [
            "action",
            "repo"
          ],
          "type": "object"
        },
        "workDir": {
          "custom_type": "string",
          "type": "string"
        }
      },
      "required": [],
      "type": "object"
    },
    "db_name": {
      "custom_type": "string",
      "examples": [
        ""
      ],
      "type": "string"
    },
    "db_operation": {
      "custom_type": "string",
      "examples": [
        "",
        "select"
      ],
      "type": "string"
    },
    "droppedAttributesCount": {
      "custom_type": "int8",
      "examples": [
        1,
        64,
        64,
        1,
        8
      ],
      "excludeMaximum": 84,
      "minimum": 1,
      "type": "number"
    },
    "droppedEventsCount": {
      "custom_type": "int32",
      "examples": [
        3,
        369,
        401,
        2971,
        29399
      ],
      "excludeMaximum": 1150984,
      "minimum": 1,
      "type": "number"
    },
    "duration_nano": {
      "custom_type": "string",
      "examples": [
        "1009886",
        "22422",
        "310343480",
        "57556",
        "99299"
      ],
      "type": "string"
    },
    "external_http_method": {
      "custom_type": "string",
      "examples": [
        "",
        "GET",
        "HEAD",
        "POST"
      ],
      "type": "string"
    },
    "external_http_url": {
      "custom_type": "string",
      "examples": [
        "",
        "10.0.2.2",
        "http://%2Fvar%2Frun%2Fdind-crs-buttercup%2Fdocker.sock/_ping",
        "http://%2Fvar%2Frun%2Fdocker.sock/v1.47/containers/a5be42adde0d84bed1095fb295866620102853bb8948ce60d71e001fce9613b7/json",
        "localhost"
      ],
      "type": "string"
    },
    "flags": {
      "custom_type": "int16",
      "examples": [
        0,
        256,
        768
      ],
      "excludeMaximum": 768,
      "minimum": 0,
      "type": "number"
    },
    "has_error": {
      "custom_type": "bool",
      "examples": [
        false
      ],
      "type": "boolean"
    },
    "http_host": {
      "custom_type": "string",
      "examples": [
        "",
        "NOT_FOUND",
        "binary-blade-exhibition1.tail7e9b4c.ts.net",
        "litellm",
        "postgresql://postgres:WgZSwyBURLn3Cpu3nses7ZYQf9Wk97fn@competition-api-prod.postgres.database.azure.com:5432/competitionapi"
      ],
      "type": "string"
    },
    "http_method": {
      "custom_type": "string",
      "examples": [
        "",
        "GET",
        "HEAD",
        "POST"
      ],
      "type": "string"
    },
    "http_url": {
      "custom_type": "string",
      "examples": [
        "",
        "http://%2Frun%2Fuser%2F1000%2Fdocker.sock/v1.47/info",
        "http://10.0.2.2:18050/_ping",
        "http://docker-builder:2375/v1.48/distribution/artiphishellciround1b8mul75kl.azurecr.io/shellphish-oss-fuzz-runner-zookeeper--shellphish_jazzer/json",
        "https://auth.docker.io/token?scope=repository%3Alibrary%2Fdocker%3Apull&service=registry.docker.io"
      ],
      "type": "string"
    },
    "is_remote": {
      "custom_type": "string",
      "examples": [
        "no",
        "unknown",
        "yes"
      ],
      "type": "string"
    },
    "kind": {
      "custom_type": "int8",
      "examples": [
        1,
        2,
        3
      ],
      "excludeMaximum": 3,
      "minimum": 1,
      "type": "number"
    },
    "kind_string": {
      "custom_type": "string",
      "examples": [
        "Client",
        "Internal",
        "Server"
      ],
      "type": "string"
    },
    "links": {
      "custom_type": "string",
      "examples": [
        "[{\"traceId\": \"8fdf3db8fdbc651f329ed0516e601f8c\", \"spanId\": \"2666b3713cb4c2b2\", \"flags\": 256}]",
        "[{\"traceId\":\"50776627f4e288016bb99b45a29ae03a\",\"refType\":\"CHILD_OF\"}]",
        "[{\"traceId\":\"9f3ff7be9ecc856618bb5c6d8af78803\",\"spanId\":\"b6b3ca172812daf3\",\"refType\":\"CHILD_OF\"}]",
        "[{\"traceId\":\"a283bbdb286cb0dc9e4c38e69baeb006\",\"refType\":\"CHILD_OF\"}]",
        "[{\"traceId\":\"e12e4f5fc3599c63253285add1c12fe5\",\"spanId\":\"2fd9d90d1356f077\",\"refType\":\"CHILD_OF\"}]"
      ],
      "type": "string"
    },
    "name": {
      "custom_type": "string",
      "examples": [
        "CreateJob",
        "GET /v1/ping/",
        "jdb_exec",
        "running AFL++",
        "zapLog"
      ],
      "type": "string"
    },
    "parent_span_id": {
      "custom_type": "string",
      "examples": [
        "0080cc964d445849",
        "27efa1fcbacef173",
        "7eb271ff385b2728",
        "8e066e03c59e1963",
        "dfa4db1dbdba4f10"
      ],
      "type": "string"
    },
    "resource_fingerprint": {
      "custom_type": "string",
      "examples": [
        "k8s.namespace.name=crs-webservice;service.name=crs-java;service.instance.id=otel-5d95cdc9ff-vm945;hash=6307131357688340248",
        "service.name=FUZZBOMB195;host.name=pixel-phantom-fb0.ea13ojtfz2pupc1wxyq5kwp2og.bx.internal.cloudapp.net;hash=8505052396952163592",
        "service.name=jazzer;hash=11552793709789429063",
        "service.name=povguy_delta_losan;hash=18244876312652209341",
        "service.name=veronica-task-server;deployment.environment=default;hash=2135260461040368268"
      ],
      "type": "string"
    },
    "resource_string_service$$name": {
      "custom_type": "string",
      "examples": [
        "FUZZBOMB0",
        "afc-crs-all-you-need-is-a-fuzzing-brain",
        "b3fuzz",
        "crs-api",
        "tldemotel"
      ],
      "type": "string"
    },
    "resource_string_service$$name_exists": {
      "custom_type": "bool",
      "examples": [
        true
      ],
      "type": "boolean"
    },
    "resources": {
      "custom_type": "object",
      "examples": [
        {
          "crs": {
            "action": {
              "category": "fuzzing"
            }
          },
          "service": {
            "name": "b3fuzz"
          },
          "signoz": {
            "collector": {
              "id": "6f3d538d-e1b4-4feb-83f8-9b69808e0d50"
            }
          }
        },
        {
          "deployment": {
            "environment": "default"
          },
          "k8s": {
            "namespace": {
              "name": "crs-webservice"
            },
            "pod": {
              "name": "otel-5d95cdc9ff-vm945"
            }
          },
          "service": {
            "instance": {
              "id": "otel-5d95cdc9ff-vm945"
            },
            "name": "litellm"
          },
          "telemetry": {
            "sdk": {
              "language": "python",
              "name": "openlit",
              "version": "1.31.0"
            }
          }
        },
        {
          "k8s": {
            "namespace": {
              "name": "crs-webservice"
            },
            "pod": {
              "name": "otel-65f9646f5c-45ns2"
            }
          },
          "service": {
            "instance": {
              "id": "otel-65f9646f5c-45ns2"
            },
            "name": "crs-multilang"
          },
          "telemetry": {
            "sdk": {
              "language": "python",
              "name": "opentelemetry",
              "version": "1.34.1"
            }
          }
        },
        {
          "service": {
            "name": "roboduck"
          },
          "signoz": {
            "collector": {
              "id": "6c7cda09-b759-4665-8945-e356d04c22e8"
            }
          }
        },
        {
          "service": {
            "name": "patchagent"
          },
          "signoz": {
            "collector": {
              "id": "030fab8e-32c2-4937-a9ea-6cb7c19d1a1a"
            }
          }
        }
      ],
      "properties": {
        "crs": {
          "custom_type": "object",
          "examples": [
            {
              "action": {
                "category": "fuzzing"
              }
            }
          ],
          "properties": {
            "action": {
              "custom_type": "object",
              "examples": [
                {
                  "category": "fuzzing"
                }
              ],
              "properties": {
                "category": {
                  "custom_type": "string",
                  "examples": [
                    "fuzzing"
                  ],
                  "type": "string"
                }
              },
              "required": [
                "category"
              ],
              "type": "object"
            }
          },
          "required": [
            "action"
          ],
          "type": "object"
        },
        "deployment": {
          "custom_type": "object",
          "examples": [
            {
              "environment": "bruh"
            },
            {
              "environment": "default"
            },
            {
              "environment": "dev"
            },
            {
              "environment": "prod"
            },
            {
              "environment": "staging"
            }
          ],
          "properties": {
            "environment": {
              "custom_type": "string",
              "examples": [
                "bruh",
                "default",
                "dev",
                "prod",
                "staging"
              ],
              "type": "string"
            }
          },
          "required": [
            "environment"
          ],
          "type": "object"
        },
        "docker": {
          "custom_type": "object",
          "examples": [
            {
              "cli": {
                "cobra": {
                  "command_path": "docker compose"
                }
              },
              "context": "default"
            },
            {
              "cli": {
                "cobra": {
                  "command_path": "docker compose"
                }
              },
              "context": "desktop-linux"
            },
            {
              "cli": {
                "cobra": {
                  "command_path": "docker"
                }
              }
            },
            {
              "context": "default"
            }
          ],
          "properties": {
            "cli": {
              "custom_type": "object",
              "examples": [
                {
                  "cobra": {
                    "command_path": "docker compose"
                  }
                },
                {
                  "cobra": {
                    "command_path": "docker"
                  }
                }
              ],
              "properties": {
                "cobra": {
                  "custom_type": "object",
                  "examples": [
                    {
                      "command_path": "docker compose"
                    },
                    {
                      "command_path": "docker"
                    }
                  ],
                  "properties": {
                    "command_path": {
                      "custom_type": "string",
                      "examples": [
                        "docker",
                        "docker compose"
                      ],
                      "type": "string"
                    }
                  },
                  "required": [
                    "command_path"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "cobra"
              ],
              "type": "object"
            },
            "context": {
              "custom_type": "string",
              "examples": [
                "default",
                "desktop-linux"
              ],
              "type": "string"
            }
          },
          "required": [],
          "type": "object"
        },
        "host": {
          "custom_type": "object",
          "examples": [
            {
              "name": "fivespice0"
            },
            {
              "name": "pixel-phantom-fb0.ea13ojtfz2pupc1wxyq5kwp2og.bx.internal.cloudapp.net"
            },
            {
              "name": "pixel-phantom-fb1.ea13ojtfz2pupc1wxyq5kwp2og.bx.internal.cloudapp.net"
            },
            {
              "name": "pixel-phantom.dxrvwelpwjde1pnezrmm1xgzyf.bx.internal.cloudapp.net"
            },
            {
              "name": "pixel-phantom.ihjrbmf3pv0ehfwzjxxv0xrryd.bx.internal.cloudapp.net"
            }
          ],
          "properties": {
            "name": {
              "custom_type": "string",
              "examples": [
                "fivespice0",
                "pixel-phantom-fb0.ea13ojtfz2pupc1wxyq5kwp2og.bx.internal.cloudapp.net",
                "pixel-phantom-fb1.ea13ojtfz2pupc1wxyq5kwp2og.bx.internal.cloudapp.net",
                "pixel-phantom.dxrvwelpwjde1pnezrmm1xgzyf.bx.internal.cloudapp.net",
                "pixel-phantom.ihjrbmf3pv0ehfwzjxxv0xrryd.bx.internal.cloudapp.net"
              ],
              "type": "string"
            }
          },
          "required": [
            "name"
          ],
          "type": "object"
        },
        "k8s": {
          "custom_type": "object",
          "examples": [
            {
              "namespace": {
                "name": "crs-webservice"
              },
              "pod": {
                "name": "otel-5d95cdc9ff-gh5np"
              }
            },
            {
              "namespace": {
                "name": "crs-webservice"
              },
              "pod": {
                "name": "otel-5d95cdc9ff-vm945"
              }
            },
            {
              "namespace": {
                "name": "crs-webservice"
              },
              "pod": {
                "name": "otel-65f9646f5c-45ns2"
              }
            }
          ],
          "properties": {
            "namespace": {
              "custom_type": "object",
              "examples": [
                {
                  "name": "crs-webservice"
                }
              ],
              "properties": {
                "name": {
                  "custom_type": "string",
                  "examples": [
                    "crs-webservice"
                  ],
                  "type": "string"
                }
              },
              "required": [
                "name"
              ],
              "type": "object"
            },
            "pod": {
              "custom_type": "object",
              "examples": [
                {
                  "name": "otel-5d95cdc9ff-gh5np"
                },
                {
                  "name": "otel-5d95cdc9ff-vm945"
                },
                {
                  "name": "otel-65f9646f5c-45ns2"
                }
              ],
              "properties": {
                "name": {
                  "custom_type": "string",
                  "examples": [
                    "otel-5d95cdc9ff-gh5np",
                    "otel-5d95cdc9ff-vm945",
                    "otel-65f9646f5c-45ns2"
                  ],
                  "type": "string"
                }
              },
              "required": [
                "name"
              ],
              "type": "object"
            }
          },
          "required": [
            "namespace",
            "pod"
          ],
          "type": "object"
        },
        "service": {
          "custom_type": "object",
          "examples": [
            {
              "instance": {
                "id": "otel-5d95cdc9ff-gh5np"
              },
              "name": "cp-manager"
            },
            {
              "name": "FUZZBOMB0"
            },
            {
              "name": "FUZZBOMB86"
            },
            {
              "name": "aflpp"
            },
            {
              "name": "discoveryguy"
            }
          ],
          "properties": {
            "instance": {
              "custom_type": "object",
              "examples": [
                {
                  "id": "otel-5d95cdc9ff-gh5np"
                },
                {
                  "id": "otel-5d95cdc9ff-vm945"
                },
                {
                  "id": "otel-65f9646f5c-45ns2"
                }
              ],
              "properties": {
                "id": {
                  "custom_type": "string",
                  "examples": [
                    "otel-5d95cdc9ff-gh5np",
                    "otel-5d95cdc9ff-vm945",
                    "otel-65f9646f5c-45ns2"
                  ],
                  "type": "string"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            },
            "name": {
              "custom_type": "string",
              "examples": [
                "BandFuzz",
                "FUZZBOMB100",
                "FUZZBOMB9",
                "aflpp",
                "discoveryguy"
              ],
              "type": "string"
            },
            "namespace": {
              "custom_type": "string",
              "examples": [
                "scantron"
              ],
              "type": "string"
            },
            "version": {
              "custom_type": "string",
              "examples": [
                "1",
                "v2.31.0-desktop.2",
                "v2.32.4-desktop.1",
                "v2.33.0",
                "v2.35.1"
              ],
              "type": "string"
            }
          },
          "required": [
            "name"
          ],
          "type": "object"
        },
        "signoz": {
          "custom_type": "object",
          "examples": [
            {
              "collector": {
                "id": "030fab8e-32c2-4937-a9ea-6cb7c19d1a1a"
              }
            },
            {
              "collector": {
                "id": "6c7cda09-b759-4665-8945-e356d04c22e8"
              }
            },
            {
              "collector": {
                "id": "6f3d538d-e1b4-4feb-83f8-9b69808e0d50"
              }
            },
            {
              "collector": {
                "id": "8b55abc9-63fa-46a1-939d-5519e54b5f4f"
              }
            },
            {
              "collector": {
                "id": "f9c07400-a275-4ee3-a50f-d21fc822d91c"
              }
            }
          ],
          "properties": {
            "collector": {
              "custom_type": "object",
              "examples": [
                {
                  "id": "030fab8e-32c2-4937-a9ea-6cb7c19d1a1a"
                },
                {
                  "id": "6c7cda09-b759-4665-8945-e356d04c22e8"
                },
                {
                  "id": "6f3d538d-e1b4-4feb-83f8-9b69808e0d50"
                },
                {
                  "id": "8b55abc9-63fa-46a1-939d-5519e54b5f4f"
                },
                {
                  "id": "f9c07400-a275-4ee3-a50f-d21fc822d91c"
                }
              ],
              "properties": {
                "id": {
                  "custom_type": "uuid",
                  "examples": [
                    "030fab8e-32c2-4937-a9ea-6cb7c19d1a1a",
                    "6c7cda09-b759-4665-8945-e356d04c22e8",
                    "6f3d538d-e1b4-4feb-83f8-9b69808e0d50",
                    "8b55abc9-63fa-46a1-939d-5519e54b5f4f",
                    "f9c07400-a275-4ee3-a50f-d21fc822d91c"
                  ],
                  "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$",
                  "type": "string"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            }
          },
          "required": [
            "collector"
          ],
          "type": "object"
        },
        "telemetry": {
          "custom_type": "object",
          "examples": [
            {
              "sdk": {
                "language": "go",
                "name": "opentelemetry",
                "version": "1.28.0"
              }
            },
            {
              "sdk": {
                "language": "python",
                "name": "openlit",
                "version": "1.31.1"
              }
            },
            {
              "sdk": {
                "language": "python",
                "name": "openlit",
                "version": "1.33.1"
              }
            },
            {
              "sdk": {
                "language": "python",
                "name": "opentelemetry",
                "version": "1.24.0"
              }
            },
            {
              "sdk": {
                "language": "python",
                "name": "opentelemetry",
                "version": "1.31.1"
              }
            }
          ],
          "properties": {
            "sdk": {
              "custom_type": "object",
              "examples": [
                {
                  "language": "go",
                  "name": "opentelemetry",
                  "version": "1.28.0"
                },
                {
                  "language": "python",
                  "name": "openlit",
                  "version": "1.31.1"
                },
                {
                  "language": "python",
                  "name": "openlit",
                  "version": "1.33.1"
                },
                {
                  "language": "python",
                  "name": "opentelemetry",
                  "version": "1.24.0"
                },
                {
                  "language": "python",
                  "name": "opentelemetry",
                  "version": "1.31.1"
                }
              ],
              "properties": {
                "language": {
                  "custom_type": "string",
                  "examples": [
                    "go",
                    "python"
                  ],
                  "type": "string"
                },
                "name": {
                  "custom_type": "string",
                  "examples": [
                    "openai-compatible-server",
                    "openlit",
                    "opentelemetry"
                  ],
                  "type": "string"
                },
                "version": {
                  "custom_type": "string",
                  "examples": [
                    "1.24.0",
                    "1.31.1",
                    "1.32.1",
                    "1.33.1",
                    "1.34.0"
                  ],
                  "type": "string"
                }
              },
              "required": [
                "language",
                "name",
                "version"
              ],
              "type": "object"
            }
          },
          "required": [
            "sdk"
          ],
          "type": "object"
        }
      },
      "required": [
        "service"
      ],
      "type": "object"
    },
    "response_status_code": {
      "custom_type": "string",
      "examples": [
        "",
        "0",
        "201",
        "204",
        "401"
      ],
      "type": "string"
    },
    "span_id": {
      "custom_type": "string",
      "examples": [
        "09fc5cd404a83a29",
        "467ee38d87e585eb",
        "846cfdf86f5650b2",
        "b5bfbbaa748d44cc",
        "ea1d8e9a1531999e"
      ],
      "type": "string"
    },
    "status_code": {
      "custom_type": "int8",
      "examples": [
        0,
        1,
        2
      ],
      "excludeMaximum": 2,
      "minimum": 0,
      "type": "number"
    },
    "status_code_string": {
      "custom_type": "string",
      "examples": [
        "Ok",
        "Unset"
      ],
      "type": "string"
    },
    "status_message": {
      "custom_type": "string",
      "examples": [
        "BadRequestError: Error code: 400 - {'error': {'message': 'litellm.ContextWindowExceededError: litellm.BadRequestError: ContextWindowExceededError: OpenAIException - Error code: 400 - {\\'error\\': {\\'message\\': \"This model\\'s maximum context length is 1047576 tokens. However, your messages resulted in 1879051 tokens. Please reduce the length of the messages.\", \\'type\\': \\'invalid_request_error\\', \\'param\\': \\'messages\\', \\'code\\': \\'context_length_exceeded\\'}}\\nmodel=openai-gpt-4.1. context_window_fallbacks=None. fallbacks=None.\\n\\nSet \\'context_window_fallback\\' - https://docs.litellm.ai/docs/routing#fallbacks. Received Model Group=openai-gpt-4.1\\nAvailable Model Group Fallbacks=None', 'type': None, 'param': None, 'code': '400'}}",
        "ConnectionError: ('Connection aborted.', ConnectionResetError(104, 'Connection reset by peer'))",
        "RateLimitError: Error code: 429 - {'error': {'message': 'No deployments available for selected model, Try again in 5 seconds. Passed model=gemini-2.5-pro. pre-call-checks=False, cooldown_list=[(\\'26149066cf58746ff2ce6324071f0a3c1cdb31f8260aee4433bcba3d3363378d\\', {\\'exception_received\\': \\'litellm.RateLimitError: litellm.RateLimitError: VertexAIException - {\\\\n  \"error\": {\\\\n    \"code\": 429,\\\\n    \"message\": \"You exceeded your current quota. Please migrate to Gemini 2.5 Pro Preview (models/gemini-2.5-pro-preview-03-25) for higher quota limits. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.\",\\\\n    \"status\": \"RESOURCE_EXHAUSTED\",\\\\n    \"details\": [\\\\n      {\\\\n        \"@type\": \"type.googleapis.com/google.rpc.QuotaFailure\",\\\\n        \"violations\": [\\\\n          {\\\\n            \"quotaMetric\": \"generativelanguage.googleapis.com/generate_requests_per_model_per_day\",\\\\n            \"quotaId\": \"GenerateRequestsPerDayPerProjectPerModel\"\\\\n          },\\\\n          {\\\\n            \"quotaMetric\": \"generativelanguage.googleapis.com/generate_requests_per_model\",\\\\n            \"quotaId\": \"GenerateRequestsPerMinutePerProjectPerModel\",\\\\n            \"quotaDimensions\": {\\\\n              \"location\": \"global\",\\\\n              \"model\": \"gemini-2.0-pro-exp\"\\\\n            }\\\\n          },\\\\n          {\\\\n            \"quotaMetric\": \"generativelanguage.googleapis.com/generate_content_paid_tier_input_token_count\",\\\\n            \"quotaId\": \"GenerateContentPaidTierInputTokensPerModelPerMinute\",\\\\n            \"quotaDimensions\": {\\\\n              \"location\": \"global\",\\\\n              \"model\": \"gemini-2.0-pro-exp\"\\\\n            }\\\\n          }\\\\n        ]\\\\n      },\\\\n      {\\\\n        \"@type\": \"type.googleapis.com/google.rpc.Help\",\\\\n        \"links\": [\\\\n          {\\\\n            \"description\": \"Learn more about Gemini API quotas\",\\\\n            \"url\": \"https://ai.google.dev/gemini-api/docs/rate-limits\"\\\\n          }\\\\n        ]\\\\n      },\\\\n      {\\\\n        \"@type\": \"type.googleapis.com/google.rpc.RetryInfo\",\\\\n        \"retryDelay\": \"26s\"\\\\n      }\\\\n    ]\\\\n  }\\\\n}\\\\n\\', \\'status_code\\': \\'429\\', \\'timestamp\\': 1749333033.4028368, \\'cooldown_time\\': 5})]', 'type': 'None', 'param': 'None', 'code': '429'}}",
        "error reading from server: EOF",
        "task 2127553c8087e60015f81f3f6e5103117fb4f26486922c5e906e218834188165 not found"
      ],
      "type": "string"
    },
    "task_id": {
      "custom_type": "string",
      "examples": [
        "0197b36e-8b4c-7f1b-8442-4a8f7b2dff1c",
        "34bad05a02d8bdfa72f5a7ec4d125aa39acea11a609a39a3fe4dbe7c8446b30a",
        "66bd01a3db32c56dd27b1ded00c02d761a1ded0bedaa56e6603d3f36f0075f90",
        "db48b5f89de3f169930aab4b2df8749686295165d71da7670028e8248815bdd5",
        "fd7f754c-7ff4-4065-ac18-42bb0e7b1699"
      ],
      "type": "string"
    },
    "timestamp": {
      "custom_type": "float64",
      "examples": [
        1743552031.6392367,
        1749162776.582371,
        1749164958.482725,
        1750954560.503865,
        1751511460.81222
      ],
      "type": "number"
    },
    "trace_id": {
      "custom_type": "string",
      "examples": [
        "3735d65ea3d7ba3bfa7d3423bbcbb460",
        "4901c1c9b54211e822b68f99f81b3547",
        "96292d9d931c1715712ec1a97e3ee328",
        "a8f8ed5a8f24e57a5c4ac2c1a14b4141",
        "bc0f0aef8b8f0e270987053f5956e50c"
      ],
      "type": "string"
    },
    "trace_state": {
      "custom_type": "string",
      "examples": [
        ""
      ],
      "type": "string"
    },
    "ts_bucket_start": {
      "custom_type": "string",
      "examples": [
        "1743552000",
        "1746617400",
        "1746666000",
        "1746712800",
        "1749353400"
      ],
      "type": "string"
    }
  },
  "required": [
    "aixcc_original_file",
    "duration_nano",
    "kind",
    "name",
    "parent_span_id",
    "resources",
    "span_id",
    "timestamp",
    "trace_id"
  ],
  "type": "object",
  "version": "0.1.0"
}